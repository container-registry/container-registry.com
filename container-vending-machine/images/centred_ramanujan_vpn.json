{
    "chart_count": 0,
    "creation_time": "2024-09-12 08:15:24.445000+00:00",
    "current_user_role_id": 1,
    "current_user_role_ids": [
        1
    ],
    "cve_allowlist": {
        "creation_time": "0001-01-01 00:00:00+00:00",
        "expires_at": null,
        "id": 36,
        "items": [],
        "project_id": 36,
        "update_time": "0001-01-01 00:00:00+00:00"
    },
    "deleted": null,
    "metadata": {
        "auto_scan": null,
        "enable_content_trust": null,
        "enable_content_trust_cosign": null,
        "instance": "centred_ramanujan",
        "instanceUrl": "https://centred-ramanujan.container-registry.com",
        "monthlyPrice": 500,
        "monthlyPriceId": "price_1Py9fDDmAMB1YDyjPyNDTpvd",
        "oneTimePrice": 6000,
        "oneTimePriceId": "price_1Py9g2DmAMB1YDyjGkqSDgcV",
        "prevent_vul": null,
        "public": "false",
        "retention_id": null,
        "reuse_sys_cve_allowlist": null,
        "severity": null
    },
    "name": "vpn",
    "owner_id": 1,
    "owner_name": "admin",
    "project_id": 36,
    "registry_id": null,
    "repo_count": 1,
    "repositories": [
        {
            "artifact_count": 1,
            "artifacts": [
                {
                    "accessories": null,
                    "addition_links": {
                        "build_history": {
                            "absolute": false,
                            "href": "/api/v2.0/projects/vpn/repositories/openvpn/artifacts/sha256:5d8d1d214565a7a54f8f9b8fa3e44319c48923be4ce1db548014660e42e558dc/additions/build_history"
                        },
                        "vulnerabilities": {
                            "absolute": false,
                            "href": "/api/v2.0/projects/vpn/repositories/openvpn/artifacts/sha256:5d8d1d214565a7a54f8f9b8fa3e44319c48923be4ce1db548014660e42e558dc/additions/vulnerabilities"
                        }
                    },
                    "annotations": null,
                    "digest": "sha256:5d8d1d214565a7a54f8f9b8fa3e44319c48923be4ce1db548014660e42e558dc",
                    "extra_attrs": {
                        "architecture": "amd64",
                        "author": "Alexander Litvinenko <array.shift@yahoo.com>",
                        "config": {
                            "ArgsEscaped": true,
                            "Cmd": [
                                ""
                            ],
                            "Entrypoint": [
                                "dumb-init",
                                "./start.sh"
                            ],
                            "Env": [
                                "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                                "APP_NAME=Dockovpn",
                                "APP_INSTALL_PATH=/opt/Dockovpn",
                                "APP_PERSIST_DIR=/opt/Dockovpn_data",
                                "NET_ADAPTER=eth0",
                                "HOST_ADDR=",
                                "HOST_TUN_PORT=1194",
                                "HOST_CONF_PORT=80",
                                "CRL_DAYS=3650"
                            ],
                            "ExposedPorts": {
                                "1194/udp": {},
                                "8080/tcp": {}
                            },
                            "Labels": {
                                "maintainer": "Alexander Litvinenko <array.shift@yahoo.com>"
                            },
                            "Volumes": {
                                "/opt/Dockovpn_data": {}
                            },
                            "WorkingDir": "/opt/Dockovpn"
                        },
                        "created": "2024-03-31T17:58:02.029073452Z",
                        "os": "linux"
                    },
                    "icon": "sha256:0048162a053eef4d4ce3fe7518615bef084403614f8bca43b40ae2e762e11e06",
                    "id": 45,
                    "labels": null,
                    "manifest_media_type": "application/vnd.docker.distribution.manifest.v2+json",
                    "media_type": "application/vnd.docker.container.image.v1+json",
                    "project_id": 36,
                    "pull_time": "0001-01-01 00:00:00+00:00",
                    "push_time": "2024-09-12 09:22:29.643000+00:00",
                    "references": null,
                    "repository_id": 45,
                    "scan_overview": null,
                    "size": 7765082,
                    "tags": [
                        {
                            "artifact_id": 45,
                            "id": 45,
                            "immutable": false,
                            "name": "latest",
                            "pull_time": "0001-01-01 00:00:00+00:00",
                            "push_time": "2024-09-12 09:22:29.939000+00:00",
                            "repository_id": 45,
                            "signed": false
                        }
                    ],
                    "type": "IMAGE"
                }
            ],
            "build_history": [
                {
                    "created": "2021-08-06T17:19:45.007652184Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:34eb5c40aa00028921a224d1764ae1b1f3ef710d191e4dfc7df55e0594aa7217 in / "
                },
                {
                    "created": "2021-08-06T17:19:45.183996158Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "comment": "buildkit.dockerfile.v0",
                    "created": "2023-08-13T18:11:16.021732873Z",
                    "created_by": "LABEL maintainer=Alexander Litvinenko <array.shift@yahoo.com>",
                    "empty_layer": true
                },
                {
                    "comment": "buildkit.dockerfile.v0",
                    "created": "2023-08-13T18:11:16.021732873Z",
                    "created_by": "ENV APP_NAME=Dockovpn",
                    "empty_layer": true
                },
                {
                    "comment": "buildkit.dockerfile.v0",
                    "created": "2023-08-13T18:11:16.021732873Z",
                    "created_by": "ENV APP_INSTALL_PATH=/opt/Dockovpn",
                    "empty_layer": true
                },
                {
                    "comment": "buildkit.dockerfile.v0",
                    "created": "2023-08-13T18:11:16.021732873Z",
                    "created_by": "ENV APP_PERSIST_DIR=/opt/Dockovpn_data",
                    "empty_layer": true
                },
                {
                    "comment": "buildkit.dockerfile.v0",
                    "created": "2023-08-13T18:11:16.021732873Z",
                    "created_by": "ENV NET_ADAPTER=eth0",
                    "empty_layer": true
                },
                {
                    "comment": "buildkit.dockerfile.v0",
                    "created": "2023-08-13T18:11:16.021732873Z",
                    "created_by": "ENV HOST_ADDR=",
                    "empty_layer": true
                },
                {
                    "comment": "buildkit.dockerfile.v0",
                    "created": "2023-08-13T18:11:16.021732873Z",
                    "created_by": "ENV HOST_TUN_PORT=1194",
                    "empty_layer": true
                },
                {
                    "comment": "buildkit.dockerfile.v0",
                    "created": "2023-08-13T18:11:16.021732873Z",
                    "created_by": "ENV HOST_CONF_PORT=80",
                    "empty_layer": true
                },
                {
                    "comment": "buildkit.dockerfile.v0",
                    "created": "2023-08-13T18:11:16.021732873Z",
                    "created_by": "ENV CRL_DAYS=3650",
                    "empty_layer": true
                },
                {
                    "comment": "buildkit.dockerfile.v0",
                    "created": "2023-08-13T18:11:16.021732873Z",
                    "created_by": "WORKDIR /opt/Dockovpn"
                },
                {
                    "comment": "buildkit.dockerfile.v0",
                    "created": "2024-03-31T17:57:46.870672568Z",
                    "created_by": "COPY scripts . # buildkit"
                },
                {
                    "comment": "buildkit.dockerfile.v0",
                    "created": "2024-03-31T17:57:46.891553917Z",
                    "created_by": "COPY config ./config # buildkit"
                },
                {
                    "comment": "buildkit.dockerfile.v0",
                    "created": "2024-03-31T17:57:46.914965743Z",
                    "created_by": "COPY VERSION ./config # buildkit"
                },
                {
                    "comment": "buildkit.dockerfile.v0",
                    "created": "2024-03-31T17:58:02.029073452Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache openvpn easy-rsa bash netcat-openbsd zip curl dumb-init &&     ln -s /usr/share/easy-rsa/easyrsa /usr/bin/easyrsa &&     mkdir -p ${APP_PERSIST_DIR} &&     cd ${APP_PERSIST_DIR} &&     easyrsa init-pki &&     easyrsa gen-dh &&     cp pki/dh.pem /etc/openvpn &&     cd ${APP_INSTALL_PATH} &&     cp config/server.conf /etc/openvpn/server.conf # buildkit"
                },
                {
                    "comment": "buildkit.dockerfile.v0",
                    "created": "2024-03-31T17:58:02.029073452Z",
                    "created_by": "EXPOSE map[1194/udp:{}]",
                    "empty_layer": true
                },
                {
                    "comment": "buildkit.dockerfile.v0",
                    "created": "2024-03-31T17:58:02.029073452Z",
                    "created_by": "EXPOSE map[8080/tcp:{}]",
                    "empty_layer": true
                },
                {
                    "comment": "buildkit.dockerfile.v0",
                    "created": "2024-03-31T17:58:02.029073452Z",
                    "created_by": "VOLUME [/opt/Dockovpn_data]",
                    "empty_layer": true
                },
                {
                    "comment": "buildkit.dockerfile.v0",
                    "created": "2024-03-31T17:58:02.029073452Z",
                    "created_by": "ENTRYPOINT [\"dumb-init\" \"./start.sh\"]",
                    "empty_layer": true
                },
                {
                    "comment": "buildkit.dockerfile.v0",
                    "created": "2024-03-31T17:58:02.029073452Z",
                    "created_by": "CMD [\"\"]",
                    "empty_layer": true
                }
            ],
            "creation_time": "2024-09-12 09:22:29.434000+00:00",
            "description": "[author]: <> (dockovpn)\n[shortDescription]: <> (DockOvpn \u2014 is an out of the box dockerized OpenVPN server, which starts in just a few seconds and runs forever.)\n[subTitle]: <> (Out of the box stateless openvpn-server docker image which starts in less than 2 seconds)\n\n<p align=center><img src=\"https://alekslitvinenk.github.io/docker-openvpn/assets/img/logo-s.png\"></p><br>\n\n<p align=\"center\">\n<a href=\"https://github.com/alekslitvinenk/docker-openvpn/blob/master/README.md\">[English]</a>\n<a href=\"https://github.com/alekslitvinenk/docker-openvpn/blob/master/docs/README_RU.md\">[\u0420\u0443\u0441\u0441\u043a\u0438\u0439]</a>\n<a href=\"https://github.com/alekslitvinenk/docker-openvpn/blob/master/docs/README_CN.md\">[\u4e2d\u56fd\u4eba]</a>\n<br>\n\n![Build Version](http://cicd.dockovpn.io/version/dockovpn)\n![Build Status](http://cicd.dockovpn.io/build/dockovpn)\n[![Tests Status](http://cicd.dockovpn.io/tests/dockovpn)](https://cicd.dockovpn.io/reports/dockovpn)\n![Build Time](http://cicd.dockovpn.io/built/dockovpn)\n[![Docker Pulls](https://img.shields.io/docker/pulls/alekslitvinenk/openvpn.svg)](https://hub.docker.com/r/alekslitvinenk/openvpn/)\n[![Gitter chat](https://img.shields.io/badge/chat-on_gitter-50b6bb.svg)](https://gitter.im/docker-openvpn/community)\n![GitHub](https://img.shields.io/github/license/dockovpn/dockovpn)\n\n# \ud83d\udd10DockOvpn\n<p align=center><a href=\"https://techround.co.uk/vpns/11-dockovpn-solutions/\" target=\"_blank\"><img src=\"https://alekslitvinenk.github.io/docker-openvpn/assets/img/VPN53-Badge-300x300.png\"  width=\"198\" height=\"198\"></a></p><br>\n\nOut of the box stateless VPN server docker image which starts in just a few seconds and doesn't require persistent storage. To get it running,  just copy & paste the snippet below and follow instructions in your terminal:\n\n```bash\ndocker run -it --rm --cap-add=NET_ADMIN \\\n-p 1194:1194/udp -p 80:8080/tcp \\\n--name dockovpn alekslitvinenk/openvpn\n```\n\nTo get more detailed information, go to [Quick Start](#-quick-start) tutorial or watch [video](https://youtu.be/y5Dwakc6hMs).\n\n## Supporting Dockovpn\n\nDockovpn is a team of cybersecurity experts developing leading edge projects in Networking, VPN, DevOPS and SecOPS domains. Project is supported entirely by volonteers.\nIf you'd like to help support the future of the project, please consider:\n- Giving developer time (see [Contrubition Guidelines](https://github.com/alekslitvinenk/docker-openvpn/blob/master/CONTRIBUTING.md))!\n- Giving funds by becoming a sponsor on [GitHub](https://github.com/sponsors/dockovpn) or [OpenCollective](https://opencollective.com/dockovpn)!\n\n## Content\n\n[Resources](#resources) \\\n[Container properties](#container-properties) \\\n[Video Guide](#-video-guide) \\\n[Quick Start](#-quick-start) \\\n[Persisting configuration](#persisting-configuration) \\\n[Alternative way. Run with docker-compose](#alternative-way-run-with-docker-compose) \\\n[Other resources](#other-resources)\n\n## Resources\n\n### Real-time Chat\n[Slack](https://dockovpn.slack.com) ([registration](https://join.slack.com/t/dockovpn/shared_invite/zt-200sz4vdi-w2qCtjlN7YIu~ZQPfph_Ow))\n\n### Website\n\n<https://dockovpn.io>\n\n### Social media\n\n| Name | URL |\n| :--: | :-----: |\n| LinkedIn | <https://www.linkedin.com/company/dockovpn> |\n| Facebook | <https://www.facebook.com/dockovpn> |\n\n### Repos\n\n| Name | URL |\n| :--: | :-----: |\n| GitHub | <https://github.com/dockovpn/dockovpn> |\n| Docker Hub | <https://hub.docker.com/r/alekslitvinenk/openvpn> |\n\n## Container properties\n\n<p align=center><a href=\"https://dockovpn.io\" target=\"_blank\"><img src=\"https://alekslitvinenk.github.io/docker-openvpn/assets/img/container.svg\"  width=\"150\" height=\"110\"></a></p>\n\n### Docker Tags\n\n| Tag    | Description |\n| :----: | :---------: |\n| `latest` | This tag is added to every newly built version be that `v#.#.#` or `v#.#.#-regen-dh` |\n| `v#.#.#` | Standard fixed release version, where {1} is _major version_, {2} - _minor_ and {3} is a _patch_. For instance, `v1.1.0` |\n| `v#.#.#-regen-dh` | Release version with newly generated Deffie Hellman security file. In order to keep security high this version is generated every hour. Tag example - `v1.1.0-regen-dh` |\n| `dev` | Development build which contains the most recent changes from the active development branch (master) |\n\n### Environment variables\n\n| Variable | Description | Default value |\n| :------: | :---------: | :-----------: |\n| NET_ADAPTER | Network adapter to use on the host machine | eth0 |\n| HOST_ADDR | Host address override if the resolved address doesn't work | localhost |\n| HOST_TUN_PORT | Tunnel port to advertise in the client config file | 1194 |\n| HOST_TUN_PROTOCOL | Tunnel protocol (`tcp` or `udp`) | udp |\n| HOST_CONF_PORT | HTTP port on the host machine to download the client config file | 80 |\n| CRL_DAYS | CRL days until expiration, i.e. invalid for revocation checking | 3650 |\n\n**\u26a0\ufe0f Note:** In the provided code snippet we advertise the configuration suitable for the most users. We don't recommend setting custom\nNET_ADAPTER and HOST_ADDR unless you absolutely have to. Now host address is resolved automatically when container starts..\nMore often you'd like to customize HOST_TUN_PORT, HOST_CONF_PORT or HOST_TUN_PROTOCOL. If this is the case, use the snippet below (dont forget to replace `<custom port>` and `<custom protocol>`  with your values):\n\n```shell\nDOCKOVPN_CONFIG_PORT=<custom port>\nDOCKOVPN_TUNNEL_PORT=<custom port>\nDOCKOVPN_TUNNEL_PROTOCOL=<custom protocol>\ndocker run -it --rm --cap-add=NET_ADMIN \\\n-p $DOCKOVPN_TUNNEL_PORT:1194/$DOCKOVPN_TUNNEL_PROTOCOL -p $DOCKOVPN_CONFIG_PORT:8080/tcp \\\n-e HOST_CONF_PORT=\"$DOCKOVPN_CONFIG_PORT\" \\\n-e HOST_TUN_PORT=\"$DOCKOVPN_TUNNEL_PORT\" \\\n-e HOST_TUN_PROTOCOL=\"$DOCKOVPN_TUNNEL_PROTOCOL\" \\\n--name dockovpn alekslitvinenk/openvpn\n```\n\n### Container options\n\n| Short name | Long name | Description |\n| :-: | :---: | :-----: |\n| `-r` | `--regenerate` | Regenerates PKI and DH file |\n| `-n` | `--noop` | Initialise container, but don's start VPN server |\n| `-q` | `--quit` | Quit after container was initialized |\n| `-s` | `--skip` | Skip client generation on first start |\n\n**\u26a0\ufe0f Note:** We strongly recommend always run your container with `-r` option, even though it will take container a bit longer to start. In future releases we will apply this option by default:\n\n```bash\ndocker run -it --rm --cap-add=NET_ADMIN \\\n-p 1194:1194/udp -p 80:8080/tcp \\\n--name dockovpn alekslitvinenk/openvpn -r\n```\n\n### Container commands\n\nAfter container was run using `docker run` command, it's possible to execute additional commands using `docker exec` command. For example, `docker exec <container id> ./version.sh`. See table below to get the full list of supported commands.\n\n| Command  | Description | Parameters | Example |\n| :------: | :---------: | :--------: | :-----: |\n| `./version.sh` | Outputs full container version, i.e `Dockovpn v1.2.0` |  | `docker exec dockovpn ./version.sh` |\n| `./genclient.sh` | Generates new client configuration | `z` \u2014 Optional. Puts newly generated client.ovpn file into client.zip archive.<br><br>`zp paswd` \u2014 Optional. Puts newly generated client.ovpn file into client.zip archive with password `pswd` <br><br>`o` \u2014 Optional. Prints cert to the output. <br><br>`oz` \u2014 Optional. Prints zipped cert to the output. Use with output redirection. <br><br>`ozp paswd` \u2014 Optional. Prints encrypted zipped cert to the output. Use with output redirection.  <br><br>`n profile_name` \u2014 Optional. Use specified profile_name parameter instead of random id. Prints client.ovpn to the output<br><br>`np profile_name` \u2014 Optional. Use specified profile_name parameter instead of random id and protects by password asked by stdin. Password refers to the connection and it will be asked during connection stage. Prints client.ovpn to the output | `docker exec dockovpn ./genclient.sh`<br><br>`docker exec dockovpn ./genclient.sh z`<br><br>`docker exec dockovpn ./genclient.sh zp 123` <br><br>`docker exec dockovpn ./genclient.sh o > client.ovpn`<br><br>`docker exec dockovpn ./genclient.sh oz > client.zip` <br><br>`docker exec dockovpn ./genclient.sh ozp paswd > client.zip`<br><br>`docker exec dockovpn ./genclient.sh n profile_name`<br><br>`docker exec -ti dockovpn ./genclient.sh np profile_name` |\n| `./rmclient.sh` | Revokes client certificate thus making him/her anable to connect to given Dockovpn server. | Client Id, i.e `vFOoQ3Hngz4H790IpRo6JgKR6cMR3YAp` | `docker exec dockovpn ./rmclient.sh vFOoQ3Hngz4H790IpRo6JgKR6cMR3YAp` |\n| `./listconfigs.sh` | List all generated available config IDs |  | `docker exec dockovpn ./listconfigs.sh` |\n| `./getconfig.sh` | Return previously generated config by client ID | Client Id, i.e `vFOoQ3Hngz4H790IpRo6JgKR6cMR3YAp` | `docker exec dockovpn./getconfig.sh vFOoQ3Hngz4H790IpRo6JgKR6cMR3YAp` |\n\n **\u26a0\ufe0f Note:** If you generated a new client configuration with custom name e.g `dockovpn exec ./genclient.sh n customname` and then chose to remove this config using `dockovpn exec ./rmclient.sh customname`, the client certificate is revoked permanently in this server, therefore, you cannot create client configuration with the same name again. Doing so will result in error `Sat Oct 28 10:05:17 2023 Client with this id [customname] already exists`.\n\n## \ud83d\udcfa Video Guide\n\n<p align=center><a href=\"https://youtu.be/y5Dwakc6hMs\"><img src=\"https://alekslitvinenk.github.io/docker-openvpn/assets/img/video-cover-play.png\"></a></p><br>\n\n## \ud83d\ude80 Quick Start\n\n### Prerequisites\n\n1. Any hardware or vps/vds server running Linux. You should have administrative rights on this machine.\n2. Docker installation on your server.\n3. Public ip address assigned to your server.\n\n### 1. Run dockovpn\n\nCopy & paste the following command to run docker-openvpn:<br>\n\n```bash\ndocker run -it --rm --cap-add=NET_ADMIN \\\n-p 1194:1194/udp -p 80:8080/tcp \\\n--name dockovpn alekslitvinenk/openvpn\n```\n\n**\u26a0\ufe0f Note:** This snippet runs Dockovpn in attached mode, which means if you close your terminal window, container will be stopped.\nTo prevent this from happening, you first need to detach container from ssh session. Type `Ctrl+P Ctrl+Q`.\n\nIf everything went well, you should be able to see the following output in your console:\n\n```bash\nSun Jun  9 08:56:11 2019 Initialization Sequence Completed\nSun Jun  9 08:56:12 2019 Client.ovpn file has been generated\nSun Jun  9 08:56:12 2019 Config server started, download your client.ovpn config at http://example.com:8080/\nSun Jun  9 08:56:12 2019 NOTE: After you download you client config, http server will be shut down!\n ```\n\n### 2. Get client configuration\n\nNow, when your dockovpn is up and running you can go to `<your_host_public_ip>:8080` on your device and download ovpn client configuration.\nAs soon as you have your config file downloaded, you will see the following output in the console:<br>\n\n```bash\nSun Jun  9 09:01:15 2019 Config http server has been shut down\n```\n\nImport `client.ovpn` into your favourite openvpn client. In most cases it should be enough to just doubleclick or tap on that file.\n\n### 3. Connect to your docker-openvpn container\n\nYou should be able to see your newly added client configuration in the list of available configurations. Click on it, connection process should initiate and be established within few seconds.\n\nCongratulations, now you're all set and can safely browse the internet.\n\n## Persisting configuration\n\nThere's a possibility to persist generated files in volume storage. Run docker with\n\n```bash\n-v openvpn_conf:/opt/Dockovpn_data\n```\n\n## Alternative way. Run with docker-compose\n\nSometimes it is more convenient to use [docker-compose](https://docs.docker.com/compose/).\n\nTo run dockvpn with docker-compose run:\n\n```bash\ndocker-compose up -d && \\\ndocker-compose exec -d dockovpn wget -O /opt/Dockovpn/client.ovpn localhost:8080\n```\n\nAfter run this command you can find your `client.ovpn` inside `openvpn_conf` folder.\n\n## Other resources\n\n[Privacy Policy](https://github.com/alekslitvinenk/docker-openvpn/blob/master/PRIVACY_POLICY.md) \\\n[Contrubition Guidelines](https://github.com/alekslitvinenk/docker-openvpn/blob/master/CONTRIBUTING.md) \\\n[Code Of Conduct](https://github.com/alekslitvinenk/docker-openvpn/blob/master/CODE_OF_CONDUCT.md) \\\n[Release Guideline](https://github.com/alekslitvinenk/docker-openvpn/blob/master/docs/RELEASE_GUIDELINE.md) \\\n[License Agreement](https://github.com/alekslitvinenk/docker-openvpn/blob/master/LICENSE)\n",
            "id": 45,
            "metadata": {
                "author": "dockovpn",
                "shortDescription": "DockOvpn \u2014 is an out of the box dockerized OpenVPN server, which starts in just a few seconds and runs forever.",
                "subTitle": "Out of the box stateless openvpn-server docker image which starts in less than 2 seconds"
            },
            "name": "vpn/openvpn",
            "project_id": 36,
            "pull_count": 0,
            "update_time": "2024-09-13 04:02:03.217000+00:00"
        }
    ],
    "togglable": null,
    "update_time": "2024-09-12 08:15:24.445000+00:00"
}