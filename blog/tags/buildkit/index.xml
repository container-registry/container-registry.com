<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>BuildKit on Container Registry</title><link>https://container-registry.com/blog/tags/buildkit/</link><description>Recent content in BuildKit on Container Registry</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 30 Mar 2023 01:07:02 +0000</lastBuildDate><atom:link href="https://container-registry.com/blog/tags/buildkit/index.xml" rel="self" type="application/rss+xml"/><item><title>Lifting Developersâ€™ Productivity with BuildKit CLI for kubectl</title><link>https://container-registry.com/posts/productivity-lift-buildkit-cli-for-kubectl/</link><pubDate>Thu, 07 Jan 2021 00:00:00 +0000</pubDate><guid>https://container-registry.com/posts/productivity-lift-buildkit-cli-for-kubectl/</guid><description>&lt;p>Developing and testing software on Kubernetes usually means building and moving container images from the developer workstation to a container registry, and ultimately, Kubernetes. When considering all the moving parts, the complexity and context switches break the development flow. Gone are the days where developers just hit a command and a few seconds later the newly built software is ready for testing.&lt;/p>
&lt;p>What if there was some magical tool that you could simply feed instructions like: &amp;ldquo;Build this Dockerfile &lt;em>here&lt;/em> and replace any existing image on &lt;em>that&lt;/em> Kubernetes cluster with the results!&amp;rdquo; ASAP. Spoiler Alert! That is exactly what BuildKit CLI for kubectl is there to do.&lt;/p></description></item></channel></rss>