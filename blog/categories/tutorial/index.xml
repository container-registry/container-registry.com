<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tutorial on Container Registry</title><link>https://container-registry.com/blog/categories/tutorial/</link><description>Recent content in Tutorial on Container Registry</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 10 Dec 2023 22:49:44 +0100</lastBuildDate><atom:link href="https://container-registry.com/blog/categories/tutorial/index.xml" rel="self" type="application/rss+xml"/><item><title>How to automate Flask development workflow with Container Registry and GitHub Actions</title><link>https://container-registry.com/posts/how-to-automate-flask-development-workflow-with-container-registry-and-github-actions/</link><pubDate>Sun, 10 Dec 2023 00:00:00 +0000</pubDate><guid>https://container-registry.com/posts/how-to-automate-flask-development-workflow-with-container-registry-and-github-actions/</guid><description>In this tutorial, we will develop an automated workflow to build a containerized Flask application.
This workflow will build a new container image every time a new commit is pushed to our GitHub repository. We will be using a simple Flask application for this tutorial. But you can use this workflow to build a Flask application of any complexity.
We will run the workflow with GitHub Actions and use 8gears Container Registry as our image repository.</description></item></channel></rss>