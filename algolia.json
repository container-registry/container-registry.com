[{"category":"User Guides","content":"How to Setup Google Workspace as OIDC Provider for Your Container Registry In this tutorial, we will show you how to configure all necessary settings in your Google Workspace. The steps appear in chronological order but some of them may be skipped if you already dealt with Google Cloud before. The other tutorial explains what you should do in your Container Registry instance if you want to use OIDC authentication in general. However, before doing anything in Container Registry, you need to complete the configuration on the provider side. Prerequisites You need a custom domain on Container Registry. 1 - Create a New Project in the Google Cloud Platform Although it is not mandatory, we recommend you to create a new project in the Google Cloud Platform for managing your OIDC authentication. You can find detailed instructions in the Google official documentation. If you want to use an existing project, feel free to skip the next part. Steps Upon your first registration in Google Cloud, one project is automatically generated for you. It is usually called My First Project. You will see it on the top left of your console. If you click on the arrow next to it, the list of your projects will be displayed. Here, you can find the New Project button. Give your project a name and hit Create. You will be redirected back to your default project. Click on the arrow next to its name again, select the right project, and hit Open. We will add it to your DNS record and your domain will appear as authorized in the Google Cloud Console. This may take a couple of days. 2 - Configure Google OAuth Consent Screen If you decided to create a new project or if your current one does not have a consent screen yet, you have to configure it before you can acquire your credentials. Inside your Container Registry project: Find APIs and services on the left pane; Select OAuth consent screen; Select User Type; Consult Google official documentation to choose the right one for you; Fill in the mandatory fields: your application name; user support email: an email that users can reach out to you with; developer contact information for the external type of use; Add an authorized domain: use your custom domain name that needs to be authorized in Google Cloud before as explained above. Save your changes, and you will be re-directed to the Scopes configuration. 3 - Configure OAuth Scopes for Container Registry Scopes specify what kind of user data Container Registry can access in your Google account. You need to add three types of scopes: your OpenID; your email; your general profile information, such as your username. To do so: on the Scopes screen, simply click Add or remove scopes; normally, the scopes you need will appear on the top of the list; they should have no description in the API field; scroll down the form and hit Update; You will see the scopes added to non-sensitive scopes: Click Save and continue on the bottom of the scopes page. 4 - Adding Users On the next page, you will be able to add users that must be able to log in to Container Registry. Click Save and Continue when you are finished. 5 - Publish Your Application In the last step, after adding the users, you can review your consent screen data. After that: scroll down the page and hit Back to Dashboard; on the Dashboard, click Publish app and then Confirm to activate the consent screen. Your consent screen – called application – must yet be approved by the Google team. After that, it will be shown as published. In the meantime, you can create your API credentials. 6 - Create Your Google API Credentials for OIDC Find APIs and services on the left pane; Select Credentials; Click + Create credentials; Select OAuth client ID; In the Application type, select Web application from the dropdown; Give it a name; In Authorized redirect URIs, enter the following: https://your-custom-domain.com/c/oidc/callback Hit Create. You will see a dialogue window with your credentials that you can copy directly using the Copy buttons next to them or download as a JSON file. Your credentials can be accessed, edited, downloaded, or deleted at any time on the Credentials page. 7 - Configure OIDC Authentication in Your Container Registry Instance Keep your credentials at hand and proceed to this tutorial to finish the OIDC authentication setup for your Container Registry instance.","date":"2021-10-01T00:00:00Z","description":"","href":"https://container-registry.com/docs/user-guide/oidc-configuration-for-google-workspaces/","objectID":"da5cdf744ac43dccfdf6d61be7fe2b3e_0","order":0,"tags":null,"title":"OIDC configuration for Google Workspaces"},{"category":"User Manual","content":"Why Use Container Registry as a Service Container registries are storages for your container images. It is an essential service for containerization technology that saves you a lot of headaches when you run Kubernetes clusters to test and deploy your containerized applications. Why Use a Container Registry When you work with Kubernetes deployments, you face the chicken-egg dilemma: you cannot keep the images in the cluster but you need them to run it. A container registry keeps all your images that you pull into a Kubernetes cluster when you start it. But Container Registry is even more than that: it is a SaaS platform that helps you to manage your Docker images. Challenges There are quite a few challenges associated with managing your container images. You need to pull container images quickly. You can have more control over the costs of your incoming Kubernetes traffic. Since the traffic might go from one cluster into the other, this might result in additional costs. You need to protect certain images from unauthorized access. You want to avoid bugs and data breaches that can spread between containers since they are built upon each other. If one Docker container has security issues in the source code, all the images built from it will inherit these issues. You want a better structure of your image storage. You do not want to throw them all untagged into the same repository without a chance to find anything inside it later. Solution Consequently, you get enough reasons for using Container Registry: a container registry service that solves all of these problems. Developer Tools You get a solution that can be managed through API and robot accounts (integration users). It can also be operated through CLI tools. You can create webhooks to trigger events further down your CI/CD pipeline. You can replicate images to/from another repository (multiple providers are supported). Storage and Costs The images pushed to Container Registry are compressed and do not require much storage space. Besides, you can control the size of your storage to avoid cost explosion. For enterprise customers, we offer a custom storage. Security Features User Authorization and Authentication You can create users with different roles and permissions deriving from their roles (RBAC). Users can be onboarded using an OIDC provider or LDAP/AD server. Vulnerability Scanning You can run vulnerability checks using different providers. More than one developer may be working on an image and some imperfections may always slip your team\u0026rsquo;s attention. It is important not to let the other images inherit it and ruin your deployments. 2 pre-installed vulnerability scanners. Other Security Features Container Registry supports content trust: enforcing only sign images. Managing Images You can organize your images into projects, as well as tag and label them directly in the GUI. You can make certain tags immutable. You can retire tags automatically. You can delete unused and/or untagged images on schedule. You can get log data that tracks the history of everything that happened in the project. You have access to the build history of every image in the repository. Other Supported Artifacts Container Registry supports Open Container Initiative (OCI). You can store helm charts to manage your Kubernetes deployments. Admin Features In-browser admin portal, accessible from everywhere, on any device. Apart from this, Container Registry provides a simple graphical user interface. Although pushing images requires you to use a command line tool, all other actions can be done with a mouse click. Why Use Container Registry as a Service With our service, you have the latest Harbor technology but do not have to install it by yourself. You only need to log in to your account using a browser. That means that you can access your registry from everywhere. Besides, we fixed quite a few of Harbor\u0026rsquo;s and Docker Hub\u0026rsquo;s issues and offer much better image scanners and other security features.","date":"2021-09-09T00:00:00Z","description":"","href":"https://container-registry.com/docs/user-manual/why-use-container-registry/","objectID":"7cc66c81d3ca6b57e8358749b925b2b9_0","order":0,"tags":null,"title":"Why Use Container Registry"},{"category":"Administration Manual","content":"Database Authentication The database user authnetication mode is applied by default. With this mode, all user management happens in the Container Registry GUI and the data is stored in the local database. When selecting this authentication mode, keep in mind that once you added any users (except for yourself) to the instance using the database mode, the instance will be locked from switching to any other mode. Nonetheless, this mode has a few advantages. As a system admin, you can reset or change user passwords and enable self-registration to facilitate the onboarding process of a new users. Activate Database Authentication Mode In the navigation pane on the left, select Administration; Click on Configuration; Select Authentication tab; In Auth Mode, in the dropdown, select Database; Hit Save. Self-Registration You can allow users to sign up for an account in your instance by activating the self-registration feature: In this case, when users access the URL of your instance, they see the Sign up for an account link. If they click on the link, they will be shown a registration form where they can create their user name. Once a new user filled in and submitted the signup form, this user is added to the instance automatically and appears immediately in the list of users under Administration -\u0026gt; Users.","date":"2021-08-18T00:00:00Z","description":"","href":"https://container-registry.com/docs/administration-manual/authentication/database-authentication/","objectID":"ed5bde98367c62b5f085437e50f2a8d9_0","order":0,"tags":null,"title":"Database Authentication"},{"category":"Getting Started Guide","content":"Getting Started If you want to start using Container Registry in a few simple steps, please check the instructions in this chapter. They will help you to get quickly to the point. These tutorials describe registration process and how to push and pull images and provide a short overview of the features. Here is a breakdown of the Table of contents. Feel free to access the individual sections by clicking on the titles in the left sidebar. Prerequisites New User Sign Up Push and Pull Images Other Useful Features","date":"2021-08-09T00:00:00Z","description":"","href":"https://container-registry.com/docs/getting-started-guide/","objectID":"7659d80287131c0137b04dfd52d360ca_0","order":0,"tags":null,"title":"Getting Started Guide"},{"category":"User Manual","content":"Robot Accounts Robot accounts are used to access your project through an API. They perform a limited range of actions that you can specify per account and are generally used for workflow, deployment, and testing automation. Robot accounts created on the project level can access only one project. They cannot be transferred to other projects. To create robots that have access to multiple projects, create system robot accounts as explained here. Overview of Existing Robot Accounts Inside a project, under the Robot Accounts tab, you will find a list of the robot accounts associated with the project. For each robot account, you can see its: name; enabled state; permissions; created time; expiration date if any; description. Robot Account Name The robot account name is used to log in to an external client as a user name. It\u0026rsquo;s built following this naming convention: robot_: permanent part for all robot accounts; project name; the + sign; the variable name that you can specify for this particular robot. Robot Account Secret Robot accounts use a CLI secret to log in to external clients. This secret is generated and displayed once on creation of the account but is not stored anywhere in the project or instance. However, it can be resetted later to generate a new secret. Docker Login With Robot Account Below is an example of how to log in with a robot account in Docker: docker login your-subdomain.container-registry.com -u robot_project_name+robot_variable_name -p 3xiYiY9eaenXDhZHj8k7WGcF5IfSSGVk Robot Account Permissions Upon creation, you can grant the new account all or a few selected permissions: Push artifacts Pull artifacts Delete artifacts Read Helm charts Create a Helm chart version Delete a Helm chart version Create a tag Delete a tag Create artifact labels Create a scan Create a Robot Account Use + NEW ROBOT ACCOUNT to add a new one: Specify its variable name; Set when it should expire: after how many days; or never; Check the permissions you need (by default, all of them are selected); Save it and then make sure that you save the token/CLI secret using one of the methods: copy the token into clipboard with the copy icon and paste it into some text editor (1); EXPORT TO FILE to export it as a JSON file(2). The JSON file looks like the following: { \u0026#34;creation_time\u0026#34;:\u0026#34;2021-08-04T13:58:45.934Z\u0026#34;, \u0026#34;expires_at\u0026#34;:1628949525, \u0026#34;id\u0026#34;:1, \u0026#34;name\u0026#34;:\u0026#34;robot_documentation+test\u0026#34;, \u0026#34;secret\u0026#34;:\u0026#34;D4pGyGP3eFaW8Ako4249kSNCtZ0McxgV\u0026#34; } exprires_at is shown as Unix Epoch. When it is set to never, it shows -1: { \u0026#34;creation_time\u0026#34;:\u0026#34;2021-08-04T14:17:44.764Z\u0026#34;, \u0026#34;expires_at\u0026#34;:-1, \u0026#34;id\u0026#34;:2, \u0026#34;name\u0026#34;:\u0026#34;robot_documentation+test2\u0026#34;, \u0026#34;secret\u0026#34;:\u0026#34;3xiYiY9eaenXDhZHj8k7WGcF5IfSSGVk\u0026#34; } The id in the JSON file reflects a simple sequential numbering of all robot accounts that have ever been created in the instance. Refresh Or Specify Own Secret If you lost the CLI secret (token) for a robot account or you want to specify it by yourself, you can do the following: Select the robot with a checkbox; Go to Actions; Select Refresh robot secret. This will open the following dialogue window. By default, without enabling a manual secret, you can generate a new one by clicking on Refresh: You will see the same dialogue window that was displayed upon creation of the robot account, with the copy to clipboard and export to file options for saving the new token. It won\u0026rsquo;t be possible to retrieve the new secret later. Specify the New Secret Manually If you enable this feature, you can enter your own secret. It should be: between 8 and 20 characters long; the combination of: at least 1 uppercase, at least 1 lowercase; at least 1 number Enable and Disable Robot Accounts Every newly created robot account is enabled by default. You can disable robot accounts. They will stay in the project and can be re-enabled again at any time. It is not possible to change enable status for more than one robot at once; you have to repeat the procedure for every account. Select the robot with a checkbox; Go to Actions; Click Disable/Enable. Edit or Delete Robot Accounts To edit the data that you entered during account creation or to delete one or a few robots: Select the robot with a checkbox (it is not possible to edit them in bulks); Go to Actions; Click Edit or Delete. Change Robot Account Permissions The Edit will open the dialogue window where you can also change permissions.","date":"2021-08-04T12:11:51+02:00","description":"","href":"https://container-registry.com/docs/user-manual/projects/configuration/robot-accounts/","objectID":"5178bd29379b88948070e2d625baa8b7_0","order":0,"tags":null,"title":"Robot Accounts"},{"category":"User Manual","content":"Repositories Repositories can be described as folders within one project. If a project is a storage for images involved in the same application, the repositories can be a method to sort these images depending on the application feature, stage in the development life cycle, or any other factor. Browse and Filter Repositories Inside every project, you will see the list of all its repositories. Similarly to filtering and searching through projects, you can use a search field to find a repository by its name: Create a Repository New repositories can only be created using the command line tool. When you tag an image before pushing it into your project on Container Registry, the first part of the tag is the repository: docker tag hello-world your-subdomain.container-registry.com/library/repository:tag Read more about tagging and pushing images in this tutorial. Refresh Repositories List When you push an image to a new repository and have the project page open in your browser at the same time, you need to refresh the view to see the newly created repository: Change View You can switch between the default list view and card view: The view wil be resetted to the default list view every time you leave the project page. Delete a Repository Deleting a repository can only be done from the GUI. In the List View Select repositories you want to delete or select all by checking the tickbox in the upper left corner of the table. Click the Delete button INFO When you deleted a repository but then push the image tagged with it once again, the same repository will be created anew. To be able to delete only certain repositories in bulks, you can first filter them and then use the checkbox to select all repositories in the result list. In the Card View In the card view, the Delete button is hidden under Actions: Push Command Inside the project, you will find push command templates that help you to tag and push images, Helm charts and other artifacts. Inside a Repository Inside the repository, you can see a list of different artifacts – images, OCI indexes, and helm charts – and some general information about them. Repository Description You can provide your repository with a description in plain text or Markdown format. Inside the repository, go to the Info section: The Markdown format will create a well structured description of your repository. Managing Artifacts Refer to this guide to learn about managing artifacts (images, Helm charts, and tags) in your repository.","date":"2021-08-03T12:11:51+02:00","description":"","href":"https://container-registry.com/docs/user-manual/projects/repositories/","objectID":"f76c1c66f68421d986b43a00196ef85d_0","order":0,"tags":null,"title":"Repositories"},{"category":"Getting Started Guide","content":"Prerequisites The only prerequisite for you is to install Docker or any other compatible container runtime environment, such as Podman. Check the system and hardware requirements for Docker in its official documentation and follow the instructions to get it running on your machine.","date":"2021-07-23T12:11:51+02:00","description":"","href":"https://container-registry.com/docs/getting-started-guide/prerequisites/","objectID":"4a7ac3c25523c387f4947978f8e3bcfd_0","order":0,"tags":null,"title":"Prerequisites"},{"category":"Administration Manual","content":"Manage Pre-Installed Scanners You can find pre-installed vulnerability scanners under Administration -\u0026gt; Interrogation Services -\u0026gt; Scanners. If you click on an arrow next to a scanner, you\u0026rsquo;ll see the most important details about it. If you select a scanner using the small circle next to its name, you can perform the following actions with it Set a Default Vulnerability Scanner Use the Set as Default button to set a new default scanner for your instance: Edit Existing Scanner Click on the Action button and then select Edit: That will open a dialogue window where you can change: the scanner\u0026rsquo;s name; its description; the endpoint URL; authorization method; certification verification; registry address option; as described here. Disable or Enable a Scanner When you disable a scanner, project admins won\u0026rsquo;t be able to add it to their projects or use it as a scanner if it has been already added before disabling. To allow using the scanner again, enable it. Delete a Scanner You can delete a system scanner using the Action button.","date":"2021-09-06T00:00:00Z","description":"","href":"https://container-registry.com/docs/administration-manual/scanners/manage-pre-installed-scanners/","objectID":"2542c73c29a893d7199f90a9a2466186_0","order":0,"tags":null,"title":"Manage Pre-Installed Scanners"},{"category":"Administration Manual","content":"Registration for System Admins: Create a New Instance All accounts with a Dedicated Service subscription can have multiple users. For the first time, the system administrator must complete the subscription purchase and configure the instance to enable other users to work with it later. Users of Individual accounts are considered system admins of their accounts. The registration is the same. To start working with Container Registry: Go to our pricing page; Select your subscription or start a free trial; Fill in the form and provide your credit card details; Check your emails: you must have received a confirmation that your account has been created; Inside the email, click on password to display your password; you will be re-directed to a single use secure URL generated by OneTimeSecret where you can see your password for the Container Registry account; INFO The password will be kept by OneTimeSecret for a while but try to finish the registration within a few hours. The same email will contain a subdomain that was automatically generated for your instance; click on it to go to your account; Use admin as your user name and the password kept in OneTimeSecret as your password.","date":"2021-08-18T00:00:00Z","description":"","href":"https://container-registry.com/docs/administration-manual/registration-for-system-admins/","objectID":"5a91f757a9ffd1569a35c13f79e90142_0","order":0,"tags":null,"title":"Registration for System Admins"},{"category":"Administration Manual","content":"UAA Authentication A user authentication and authorization server issues access tokens for your application to make it able to access another application: in this case, your Container Registry instance. You can configure a UAA server by yourself or select a provider that will set up for you a UAA instance. This instance will generate a token every time the user identity was confirmed – the user was authenticated – to enable user authorization that allows the user to perform certain actions in the system he was successfully logged in to. Most of the UAA providers work with either SAML 2.0, OAuth 2.0, or LDAP protocols. The setups may vary. Please refer to the official documentation of your selected provider. To configure the UAA authentication mode in Container registry, you will need: a UAA endpoint; a UAA client ID; a UAA client secret. Steps Go to the navigation pane on the left side of the GUI; Select Administration; Click on Configuration; Select Authentication tab; In Auth Mode, in the dropdown, select UAA; Fill in the form; Tick the checkbox if your endpoint has a trusted certificate; Click Save.","date":"2021-08-18T00:00:00Z","description":"","href":"https://container-registry.com/docs/administration-manual/authentication/uaa-authentication/","objectID":"942907f9031700add02a828de7cde273_0","order":0,"tags":null,"title":"UAA Authentication"},{"category":"User Manual","content":"Push and Pull Images Pushing and pulling images is explained in detail in this getting started guide.","date":"2021-08-13T00:00:00Z","description":"","href":"https://container-registry.com/docs/user-manual/images/push-and-pull-images/","objectID":"a309841863b58ed4653f01a171fed5f8_0","order":0,"tags":null,"title":"Push and Pull Images"},{"category":"User Manual","content":"Tag Retention Instead of deleting tags manually, you can set when they should \u0026ldquo;expire\u0026rdquo; by defining the tag retention. WARNING Once you set a retention rule, the artifacts that are not covered by it, will be deleted. However, the operation is conducted at the artifact level. Artifacts that have more than one tag will be retained even if not all their tags are covered by the retention policy. Create a New Tag Retention Policy Inside a project, go to the Policy tab (1); Switch to TAG RETENTION (2); Click ADD RULE (3); A dialogue window will appear: Select Repos To specify repositories where the policy should look for the tags to be retained: type certain repositories in separating them by commans or use a double- or single-starred pattern; select between matching and excluding from the dropdown to include or exclude specified repositories; Select Tag Age or Number To specify how artifacts should be selected for retention, use one of the following options from the second dropdown: to refer to the number of artifacts stored in a repo: select retain the most recently pushed # artifacts and type in the number of artifacts to be retained in the COUNT field; select retain the most recently pulled # artifacts and type in the number of artifacts to be retained in the COUNT field; to refer to the artifacts \u0026ldquo;age\u0026rdquo;: select retain the artifacts pushed within the last # days and fill in the DAYS field; select retain the artifacts pulled within the last # days and fill in the DAYS field; select retain always will keep the artifacts and tags forever. Select Tags by Name To specify the tags to be retained: type in certain tags separated by commas or use a double- or single-starred pattern; select between matching and excluding to include or exclude selected tags; check untagged artifacts if you want to include artifacts that have no tag. Manage Tag Retention Rules You can edit, disable/enable, and delete a tag retention rule using the Action button next to each rule. Disabled rules will be marked with a red exclamation mark. Run Retention Rules Retention rules do nothing until they are run proactively. Indeed, it means that no tags or artifacts are deleted before you run a retention rule. You can do it either manually or create a schedule for it. Run the Retention Manually If you want the retention to take an effect immediately, you can use the RUN NOW (1) button. But, before doing this, we highly recommend using DRY RUN (2) which only simulates the retention policy execution and provides a log (4) describing once again which artifacts and tags are to be deleted or retained. Use ABORT (3) to stop an execution. Example of the log data: 2021-08-12T14:27:34Z [INFO] [/pkg/retention/job.go:83]: Run retention process. Repository: library/test Rule Algorithm: or Dry Run: true 2021-08-12T14:27:34Z [INFO] [/pkg/retention/job.go:98]: Load 2 candidates from repository library/test 2021-08-12T14:27:34Z [INFO] [/pkg/retention/job.go:201]: | Digest | Tag | Kind | Labels | PushedTime | PulledTime | CreatedTime | Retention | |-------------------------------------------------------------------------|----------|-------|--------|---------------------|---------------------|---------------------|-----------| | sha256:1b26826f602946860c279fce658f31050cff2c596583af237d971f4629b57792 | 4.0,test | image | | 2021/08/12 14:26:29 | 2021/08/11 14:32:52 | 2021/08/11 08:30:49 | RETAIN | | sha256:1649f969e17dff21275d1e227581fd492c77c9d856f989c2a1188a5798f6dfd2 | 2.0,1.0 | image | | 2021/08/04 12:47:31 | 2021/08/11 14:32:53 | 2021/07/29 12:02:18 | DEL | Schedule the Execution of the Retention Rule To make the retention execution happen automatically and on a regular basis, you can create a schedule for the policy to run. Go to the Schedule; Click EDIT; Select a schedule from the dropdown; If you select CRON, you need to create specify the frequency using the online CRON formatter (copy and paste the value from it); Alternatively, consult our short knowledge article by clicking on the i icon and create the schedule by yourself.","date":"2021-08-13T00:00:00Z","description":"","href":"https://container-registry.com/docs/user-manual/images/tags/tag-retention/","objectID":"98755519e4e51c05422526d0c350fc3e_0","order":0,"tags":null,"title":"Tag Retention"},{"category":"User Manual","content":"Table of Contents The current chapter provides general guidelines for users that work with images and helm charts. DEDICATED VS INDIVIDUAL ACCOUNT Throughout this manual, we will often refer to projects, a project administrator role, and permission rights level necessary to perform certain actions. This is only relevant for dedicated accounts since each organization with this type of account can have multiple users and organize repositories into projects. If you have an individual account, your permission level is always sufficient for any kind of an operation since you are a system and project administrator at the same time. When you read about something related to projects, please consider your account as a project. Read more about the differences between dedicated and individual accounts in this article. Why Use Container Registry as a Service What Is Harbor Container Registry User Interface: A Short Overview Working With Projects Repositories Managing Project Users Project Configuration Robot Accounts Webhooks Working With Artifacts Push and Pull Images Artifact Page Working With Tags Tag Policies Tag Retention Tag Immutability Working With Logs Dedicated vs Individual Account Double-Starred Patterns","date":"2021-08-13T00:00:00Z","description":"description_test","href":"https://container-registry.com/docs/user-manual/","objectID":"50e921a7f98d7d8805f5b0dd1d77c3ff_0","order":0,"tags":null,"title":"User Manual"},{"category":"User Manual","content":"Artifact Page When you click on a single artifact, you will be redirected to a view showing detailed information about this artifact. In this view, you can also perform a few additional actions on the selected artifact. Tags Overview Working with tags is described in detail in another tutorial since the features for doing this are distributed across the GUI. The current section explains general GUI features that are available in the single artifact view. The Tags overview table shows all tags assigned to an image. It contains the following columns: Checkboxes allow you to bulk-edit tags, for instance, add new tags or remove existing ones. Name shows the actual tag without the repository path. Pull Command allows you to copy into clipboard the command string that will pull the image with this particular tag. An example: docker pull your-subdomain.container-registry.com/project/repository[:TAG] Signed shows if the image was signed. Pull Time and Push Time show when the image was pulled or pushed for the last time. General Information The next section – Overview, can be expanded or collapsed – shows general information about: the CPU architecture the image was built for; the author nickname; a local path to the configuration file; when the image was created locally (for instance, downloaded from a GitHub repository to the local machine from which it was later pushed to the repository); for which operating system it was built. Additions Vulnerabilities If the image has been scanned and any vulnerabilities were detected, this section will display a detailed report about them. Each vulnerability has a CVE identifier. CVE means Common Vulnerabilities and Exposures. The CVE lists are maintained by the MITRE Corporation, a subsidiary of the US Department of Homeland Security. Each identifier has a year and a sequential number, for instance: CVE-2021-3449 In the Vulnerabilities table, you can click on the arrow next to the identifier to read the description of the vulnerability. The description is identical to that in the official CVE database. It helps you to learn about the origins of vulnerability and its possible consequences. Furthermore, you can click on the i icon twice to retrieve a list of the resources where you can get some additional information about this vulnerability. In the Severity column, you can see the severity level of the vulnerability. The levels are calculated using this methodology proposed by the National Institute of Standards and Technology of the US Department of Commerce. The Package column shows which package (of a programming language) causes this vulnerability. The Current version column shows which version of an operating system is affected by this vulnerability, whereas Fixed in version column shows which version (and higher) of the operating system is free from the problem. You can perform a new scan on the image using the Scan button to refresh the list of vulnerabilities if you have at least project administrator privileges. Build History If you are the person who worked with the image before pushing it to the repository, the history of your changes is retrievable locally using this command: docker image history [IMAGE] In Container Registry, you can see the same history in the Build History section. It may be useful if you want to locate the origin of the source code and track other changes.","date":"2021-08-12T00:00:00Z","description":"","href":"https://container-registry.com/docs/user-manual/images/artifact-page/","objectID":"6f0fdf501dd7338001db6350ff053a68_0","order":0,"tags":null,"title":"Artifact Page"},{"category":"User Manual","content":"Managing Project Users The user that created a project and the super admin of the instance can add users to projects to enable them to perform different actions. It is possible to pull images from a public repository without being a project member. But a membership grants users other rights depending on the role they are assigned. Project Member Permissions Below is the overview of all project permissions by five types of roles: Action Limited Guest Guest Developer Master Project Admin System Administrator See the project configurations ✓ ✓ ✓ ✓ ✓ ✓ Edit the project configurations ✓ ✓ See a list of project members ✓ ✓ ✓ ✓ ✓ Create/edit/delete project members ✓ ✓ See a list of project logs ✓ ✓ ✓ ✓ ✓ See a list of project replications ✓ ✓ ✓ See a list of project replication jobs ✓ ✓ See a list of project labels ✓ ✓ ✓ Create/edit/delete project labels ✓ ✓ ✓ See a list of repositories ✓ ✓ ✓ ✓ ✓ ✓ Create repositories ✓ ✓ ✓ ✓ Edit/delete repositories ✓ ✓ ✓ See a list of images ✓ ✓ ✓ ✓ ✓ ✓ Retag image ✓ ✓ ✓ ✓ ✓ Pull image ✓ ✓ ✓ ✓ ✓ ✓ Push image ✓ ✓ ✓ ✓ Scan/delete image ✓ ✓ ✓ Add scanners to Harbor ✓ Edit scanners in projects ✓ ✓ See a list of image vulnerabilities ✓ ✓ ✓ ✓ ✓ ✓ See image build history ✓ ✓ ✓ ✓ ✓ ✓ Add/Remove labels of image ✓ ✓ ✓ ✓ See a list of helm charts ✓ ✓ ✓ ✓ ✓ ✓ Download helm charts ✓ ✓ ✓ ✓ ✓ ✓ Upload helm charts ✓ ✓ ✓ ✓ Delete helm charts ✓ ✓ ✓ See a list of helm chart versions ✓ ✓ ✓ ✓ ✓ ✓ Download helm chart versions ✓ ✓ ✓ ✓ ✓ ✓ Upload helm chart versions ✓ ✓ ✓ ✓ Delete helm chart versions ✓ ✓ ✓ Add/Remove labels of helm chart version ✓ ✓ ✓ ✓ See a list of project robots ✓ ✓ ✓ Create/edit/delete project robots ✓ ✓ See configured CVE whitelist ✓ ✓ ✓ ✓ ✓ ✓ Create/edit/remove CVE whitelist ✓ ✓ Enable/disable webhooks ✓ ✓ ✓ ✓ Create/delete tag retention rules ✓ ✓ ✓ ✓ Enable/disable tag retention rules ✓ ✓ ✓ ✓ Create/delete tag immutability rules ✓ ✓ ✓ Enable/disable tag immutability rules ✓ ✓ ✓ See project quotas ✓ ✓ ✓ ✓ ✓ ✓ Edit project quotas ✓ The matrix applies to the users that are registered in the instance. Unregistered anonymous users can access public projects in the read-only mode and pull any images from such projects and for both types of projects. Adding Project Members By default, any new project has no users except the project admin that created it. Super admins can access projects that they are not members of. To enable your collaborators to work on the project, you need to add them. There are two methods for doing this. An important prerequisite is that they must be users of the same instance. If they are not, refer to this article to add users to the instance. Regardless of the method you want to use for adding project members: Go to the Projects section in the navigation pane; Open the project in detailed view; Go to the Members tab. Adding Users One by One If you want to add single users, use + User button. Start typing in the name and a dropdown with a few suggestions will appear. By default, every new user is granted the project admin role, thus, acquiring the same rights as the project creator has. Remember to change this, if you want to restrict the permissions level. Adding LDAP/AP User Groups Prerequisites This method is available for instances using LDAP/AD authentication. Read about configuring this method of authentication here. Another important Prerequisite is that you must enable the memberof feature on the LDAP/AD server. It is explained in the same guide mentioned above, as well as in this external technical note. Eventually, you need to create user groups on your LADP/AD server since, with this authentication method, the super admins cannot manage users inside the Container Registry interface. Steps Click + Group button; Select a user group: If you use the group option for the first time, and do not have any user groups in your Container Registry yet, select Add a group from LDAP to project member. Enter the LDAP Group DN; Optionally: give your group a catchy name. If you already used some LDAP/AD groups, select Add an existing user group to project members and start typing the name of the group. Assign a role to the new project group. The corresponding permissions will be granted to all users in this group. Adding OIDC User Groups Prerequisites This method is available for instances using OIDC as authentication method. Read about configuring this method of authentication here. User groups must be created in the OIDC provider workspace. Steps Click + Group button; Type in the correct name of the group as it exists in the OIDC provider; Assign a project role to this group. The corresponding permissions will be granted to all users in this group. Deleting Users To delete one or a few users, click on the tickbox next to the user entry, then go to Actions and select Remove. Changing Project Role To change the project role for one or a few users, check the tickboxes next to their names, click Actions, and select a new role.","date":"2021-08-02T12:11:51+02:00","description":"Managing project membership","href":"https://container-registry.com/docs/user-manual/projects/managing-project-users/","objectID":"1f847759880c31287b6366930de41d4c_0","order":0,"tags":null,"title":"Managing Project Users"},{"category":"Getting Started Guide","content":"New User Sign Up Container Registry is a cloud-based solution that you can use in your browser or CLI tool or through an API. Your Instance on Container Registry All accounts with a Dedicated Service subscription receive a subdomain on container-registry.com. Your organization can also request a custom domain. Every subdomain/domain represents one instance. For different instances, you need different login credentials. Registration Methods As a user, you can use one of these methods to register in your Container Registry instance: Your account admin can create a user for you and send you the credentials. If the self-registration is enabled for the instance, then go to the subdomain/custom domain, and click on Sing up for an account, and fill in the form. If the OIDC login is enabled for the instance, go to the subdomain/custom domain, click on Login via OIDC provider, and use one of your federated identity profiles. The last two methods must be configured by your Container Registry administrator. If you are the administrator, please refer to this tutorial in our administrator guide.","date":"2021-07-23T12:11:51+02:00","description":"","href":"https://container-registry.com/docs/getting-started-guide/new-user-sign-up/","objectID":"33eb530bb48210b190977f985db76538_0","order":0,"tags":null,"title":"New User Sign Up"},{"category":"User Manual","content":"What Is Harbor? Our service is built upon Harbor. Harbor is an open-source technology for storing and managing container images. It was developed by VMware, a leading provider of virtual machines, and then transferred to the Cloud Native Computing Foundation (CNCF), one of the biggest open-source initiatives. In its turn, the Harbor project evolved out of Docker\u0026rsquo;s source code. Its contributors attempted to enhance the latter and eliminate its security problems. A lot of developers all over the world worked on both projects. This may have led to a certain inconsistency in the code. At Container Registry, we have been making our solution more secure than its ancestors. Harbor is cloud-native. Moreover, it does not only store images but can scan their contents for security issues. Harbor also allows developers to sign the images that they push to the registry with their personal keys, thus, marking the images as trustworthy. For more information on Harbor, visit the official Harbor project website.","date":"2021-07-23T12:11:51+02:00","description":"","href":"https://container-registry.com/docs/user-manual/what-is-harbor/","objectID":"687e3e2d35fc5f51212dcc45f7420084_0","order":0,"tags":null,"title":"What Is Harbor?"},{"category":"Administration Manual","content":"Table of Contents The current chapter explains how to administer your Container Register system. An important prerequisite for using the features mentioned in is chapter is the system administrator role. System admins can see and access the Administration tab on the navigation pane on the left side, which is invisible for other users. The administration manual includes the following articles: Register at Container Registry: Admin Registration Configure User Authentication Database Authentication UAA Authentication LDAP/AD Authentication User Management System Robot Accounts Endpoints for Replication and Proxy Cache Configure Artifacts Replication Configure Replication Rules System-Wide Labels Project Quotas Vulnerability Scanner Manage Pre-Installed Scanners Add New Scanners Scanning Artifacts General Configurations Terminal Deletion of Images Other System Settings","date":"2021-09-09T00:00:00Z","description":"","href":"https://container-registry.com/docs/administration-manual/","objectID":"3f9591e0a890413447ef93711c89353d_0","order":0,"tags":null,"title":"Administration Manual"},{"category":"Administration Manual","content":"Add New Scanners Although vulnerability scanning is a highly unified procedure, different scanners may capture different vulnerabilities. Some scanners are developed to act in a more severe way than others to meet specific compliance requirements. Nonetheless, adding more scanners may increase the general coverage and improve your cyber security. To add a new scanner: Expand Administration; Go to Interrogation Services; On the Scanners tab, click + New Scanner; Fill in the form: Give your scanner a name; Optionally, add a description; Enter the endpoint URL or IP address (if you are using an internal server); Choose your authorization method: For Basic one, enter your username and password which you received from the scanner provider; For Bearer, enter the secret token from your provider; For API key, enter the API key from your account on the scanner service provider. Choose if you want to activate certificate verification; If you entered an IP instead of an URL, select Use internal registry address to allow this. Test the new connection and save the scanner if it was successful.","date":"2021-09-06T00:00:00Z","description":"","href":"https://container-registry.com/docs/administration-manual/scanners/add-new-scanners/","objectID":"3846e09f899e1179c19d7e0548fec9ea_0","order":0,"tags":null,"title":"Add New Scanners"},{"category":"Administration Manual","content":"LDAP/AD Authentication Every company needs a directory where all user login data is kept. There are two popular technologies for configuring and managing such directories – Windows Active Directory (AD) and Lightweight Directory Access Protocol – that are Harbor-compatible. It means that you can use an LDAP/AD server to add new users to the Container Registry instance and manage existing accounts on the server. Indeed, you need to set up and configure such a server before you can activate this kind of user authentication in Container Registry. How you do it, depends on your provider. You can look for instructions on the official website of the OpenLDAP project or in the Windows server official documentation. Limitations of LDAP/AD Authentication If you select this authentication mode, then, as a system admin, you will only be able to see a list of users in your Container Registry admin console but you won\u0026rsquo;t be able to perform any actions with them in the GUI, neither create and delete users nor change and reset their passwords. That all must be done on the LDAP or AD server. For the users, the self-registration option is not available in this mode (and you cannot enable it as an admin). Advantages of LDAP/AD Authentication If you already have an LDAP/AD server, you can onboard Container Registry users quicker. You can use the same LDAP/AD server to add and manage users of more than one Container Registry instance. You can create user groups and assign multiple users to projects in one leap. Enable LDAP/AD User Authentication Information You Need for Configuring LDAP/AD Authentication All entries in an LDAP directory are organized into a structure resembling roots of a tree or a reverted tree. There is a root node – the highest one in the structure – where a few brunches with more nodes originate; other nodes have own brunches, etc. Each entry – a node – has a unique identifying path, called a distinguished name or DN. Every time a user submits his credentials, a search is performed inside this structure to match the provided user credentials with an entry and authenticate the user. That\u0026rsquo;s why you need to keep at hand the following information about your LDAP server to configure it in Container Registry. LDAP Search DN. This node coincides with the user who has access to the LDAP server which is usually an admin. This parameter should be specified as cn=admin, dc=your-subdomain.container-registry.com where the attribute cn stands for \u0026ldquo;common name\u0026rdquo; and dc stands for \u0026ldquo;domain component\u0026rdquo;. LDAP Search Password. Consequently, here you need to enter the password of the user you specified in the previous parameter. LDAP Base DN. Theoretically, you may use your LDAP server not only for managing Container Registry but also for other applications. In this case, the tree would have nodes/entries that are irrelevant to Container Registry users. Thus, you need to specify a node where the search for the relevant entries should start. This is your subdomain or custom domain in our service. This parameter needs to be specified as dc=your-subdomain.container-registry.com. LDAP Scope. This parameter specifies the depth of the search in relation to the starting point: the previous parameter. You have a choice between the following values: Base: to search the entire tree; the base DN will be ignored; Subtree: to search the nodes below the starting point; OneLevel: to search the nodes on the same level as the start node. LDAP Filter. With this, you can narrow the search down to users or user groups. This will facilitate the search but, more importantly, restricts access to your Container Registry. You can use more than one attribute in the filter, as well as wildcards. A detailed tutorial on writing LDAP filters can be found here. LDAP UID. Every entry in the LDAP has multiple attributes. The LDAP UID parameter specifies which of the attributes must be used as a key to match the user credentials (of the user who tries to log in to the system) with the entries in the tree. Typically, either the uid or the cn attribute are used. Steps in the GUI In the navigation pane on the left, select Administration; Click on Configuration; Select Authentication tab; In Auth Mode, in the dropdown, select LDAP/AD; Fill in the form; Select if you want to use a server certificate or not by using a checkbox; TEST LDAP SERVER to ensure that you\u0026rsquo;ve entered correct parameters; If you see an affirmative message, hit Save. LDAP User Groups Optionally, you can create user groups to be able to assign users to projects in bulks in the Container Registry GUI. Since an LDAP directory is a tree-like structure, it\u0026rsquo;s naturally hierarchical. Groups are a way to put entities – in our case, users – together independently of that hierarchy. One user can be a member of more than one group. On the LDAP/AD server, you need to use the memberof attribute of the entries. If you are new to this technology, look into this tutorial that explains how to create groups on the LDAP server and add users into them. Once you created LDAP groups on the server, you have to configure group settings in the Container Registry GUI as well. You also cannot leave these settings empty if there are groups on your LDAP server. The parameters are similar to those in the general server configuration. LDAP Group Base DN. Like LDAP Search DN, it specifies a starting point in the tree structure of nodes/entries with user accounts and other records, with the only difference that this parameter may rather refer to a group or organizational unit name. For the latter, use the ou attribute. LDAP Group Filter. Like LDAP Filter, it limits the search to certain nodes. First of all, you need to specify that you want to search only within groups and not all other nodes. If you use OpenLDAP, the filter is objectclass=groupOfNames. If you use Active Directory, apply the objectclass=group filter. In addition to that,","date":"2021-08-19T00:00:00Z","description":"","href":"https://container-registry.com/docs/administration-manual/authentication/ldap-ad-authentication/","objectID":"500c07706a2a9b987e967f1c74040751_0","order":0,"tags":null,"title":"LDAP/AD Authentication"},{"category":"Administration Manual","content":"you can use other LDAP attributes to make your search more precise. LDAP Group GUID. This parameter specifies which attribute of a node is reserved for the name of the group. Typically, this would be cn. LDAP Group Admin DN. In this field, you can enter the distinguished name of an LDAP/AD group the members of which will all be granted system admin access rights for your Container Registry instance. LDAP Group Membership. This is also an attribute of a node but this attribute applies to the nodes holding user accounts. Thus, it specifies which attribute should the search look at to identify of which group the user is a member of. The default node attribute that identifies group membership is memberof. LDAP Scope. Identical to the LDAP Scope mentioned before but applies to the group nodes.","date":"2021-08-19T00:00:00Z","description":"","href":"https://container-registry.com/docs/administration-manual/authentication/ldap-ad-authentication/","objectID":"500c07706a2a9b987e967f1c74040751_1","order":1,"tags":null,"title":"LDAP/AD Authentication"},{"category":"Administration Manual","content":"Configure User Authentication Configuring user authentication can be accessed in the navigation pane, then Administration -\u0026gt; Configuration -\u0026gt; Authentication tab. Once you created your account as a system admin, you can choose between four methods of user authentication that will also specify how you add and manage users in your instance. The difference between the four methods is how identity management, user authentication, and authorization are performed: locally, using an external server, or an external provider. Identity management keeps user account data such as their user names and IDs; User authentication procedure proves the user identity; User authorization enables authenticated users to perform certain actions. Considering these differences, you can configure one of the following authentication modes: database mode: the user accounts are created and managed using the Container Registry GUI; authentication happens by comparing their credentials against the data in this local database; UAA mode: you will need an external user identity, authentication, and authorization provider or server; it will keep the user data, perform user authentication, and communicate the result of such authentication back to the Container Registry instance; LDAP/AP mode: you will need an external LDAP/AD server where the new user accounts will be created and managed and that will perform user authentication; OIDC mode: similarly to UAA, user accounts will be created and managed by a Single Sign-On provider, and this provider will perform user authentication. When you sign up for the first time as a system admin, the database mode is activated by default. Before you start adding new users in this mode, you can switch to a different one. Restrictions on Switching Between User Authentication Modes As you may know, generally, you can always migrate your user accounts from an LDAP/Active directory server to a OpenID provider. The steps depend on the latter. Most OIDC providers, such as Google, Azure, etc, provide tools for migrating user accounts with functionalities for matching user records. Once you\u0026rsquo;ve done the migration, you can switch the user authentication mode in the Container Registry administration console. IMPORTANT Switching the authentication mode between the internal database (database mode) and LDAP/OIDC is only possible without users in the system. Before you can switch to a different authentication method, the system admin (admin) needs to delete all users manually in the UI or via API. It is also not possible to export or migrate user accounts from the Container Registry GUI.","date":"2021-08-18T00:00:00Z","description":"","href":"https://container-registry.com/docs/administration-manual/authentication/","objectID":"a2a9fba40fdd48ea01829409f8c44e2a_0","order":0,"tags":null,"title":"Configure User Authentication"},{"category":"User Manual","content":"Tag Immutability What Is Tag Immutability and Why You Need It Harbor, the technology behind Container Registry, cannot (yet) deal with the situation when more than one image has the same tag. When there is an image in the registry with a certain tag, and then another image with the same tag is pushed to it, the first image loses its tag. The second image, pushed later, retains the tag but only until the next image with the same tag is pushed. Thus, the very purpose of tags existence – helping to differentiate between images – becomes a bit meaningless since the images override each other. The reason behind this trouble is that, for now, Harbor cannot match tags and SHA256 hashes. Therefore, hashes remain the only reliable image reference. To rehabiliate the tags, Harbor allows you to specify tag immutability rules, although they must be set manually for each tag that can be a subject to repetition. The immutability won\u0026rsquo;t allow an image with the same tag to be pushed into the repository. To be more precise, the policy is about a pair of an artifact and its tag. INFO If you add a tag into an immutability policy, you won\u0026rsquo;t be able to perform the following actions with this artifact from anywhere in the GUI or you command line tool: delete the tagged artifact completely; re-tag the artifact that is assigned the tag involved in the immutability policy; alter the tagged artifact through a replication from another target registry or in any other way. You still can perform any operations with other tags assigned to the same artifact, even though the tags are attached to the same SHA256 hash/digest. Create a Tag Immutability Policy Inside a project, go to the Policy tab; Switch to TAG IMMUTABILITY (2); Click ADD RULE (3); To select repositories and tags, specify matching patterns as explained here; Manage Immutability Policies You can edit, disable/enable, and delete a tag immutability rule using the Action button next to each rule. Disabled rules will be marked with a red exclamation mark.","date":"2021-08-13T00:00:00Z","description":"","href":"https://container-registry.com/docs/user-manual/images/tags/tag-immutability/","objectID":"ba4c6a11b181ace05476eddcb34b692e_0","order":0,"tags":null,"title":"Tag Immutability"},{"category":"User Manual","content":"Working With Tags Image tags have a function similar to those of the branch refs in Git: pointing to a state of the artifact at a specific time. Originally, the purpose of image tags was to differentiate between multiple versions of the same image. But more often than not different tags may refer to the same image. The tags come in handy when you want to pull and run an image. SHA256 hashes – the native identifiers of the Docker images and their versions – are difficult to read and impossible to memorize. Tags replace them in a way and help to spot the image you need quickly and refer to it in a more human way. Contrary to the labels, tags are not only visible inside your Container Registry project but they remain \u0026ldquo;attached\u0026rdquo; to the image after it is pulling from the repository and as long as they are not removed using the Container registry GUI or a command line tool. Managing Tags Overview of the Image Tags You can check which tags are assigned to an image using one of the methods: Inside the repository, in the artifacts list, hover over the entry in the Tags column to make the following popup message appear: In the artifact view, you can see all tags in the Tags table: Adding New Tags / Tagging Images You can add tags to image versions inside the Container Registry GUI. Since you are not building the image at this moment, the old tag and the new tag will refer to the same image. It may make sense, though, if you want to tag the latest image which has a default \u0026ldquo;latest\u0026rdquo; tag to make it more catchy and easy to find. In the artifact view, select the tags you want to use for the new tag using checkboxes; Click + ADD TAG and type in the new tag. INFO If you try to tag an artifact with the tag that already exists in the same repository, the error message will appear and you will need to select another tag: Retagging Images Retagging images in the Container Registry GUI is different from adding tags since it copies the artifact into another repository and/or project. To retag an artifact: In the artifacts list inside the repository, select an artifact using the checkbox; Go to Actions; Click Copy; Specify the destination: Start typing the project name to retrieve a dropdown; Prerequisites In the source repository, you need at least guest access which is read access; in the target repository, you need at least developer access or above to have writer permissions. Removing Tags / Detagging Images INFO Removing tags in the Container Registry GUI is different from removing tags using docker rmi command in a command line tool. Even if you remove all tags, the image – the artifact – won\u0026rsquo;t be deleted. To remove one or more tags: In the artifact view, tick the checkboxes of the tags you want to remove; Click REMOVE TAG; Confirm that you want them removed.","date":"2021-08-12T00:00:00Z","description":"","href":"https://container-registry.com/docs/user-manual/images/working-with-tags/","objectID":"e1d8ab7ab9d1ae19e1952a2010c42675_0","order":0,"tags":null,"title":"Working With Tags"},{"category":"User Manual","content":"Project Configuration For each project, you can configure a wide range of properties and features. We already touched on some of them in the general description, repositories section, and the section about project members. In addition to that, for each project, you can manage the following: helm charts; labels; scanners; tag policies; robot accounts; webhooks; project type; deployment security; CVE allowlists. Labels and tags are explained in a separate chapter that deals with images in general. In this chapter, we will go through the rest. Prerequisites To change any of the project configurations, you need to have one of the roles: System administrator; Project administrator. Labels tab In addition to tags, you can create labels for images. Labels will only be visible for the users that can log in to the Container Registry GUI. Create a Label Inside a project, go to the Labels tab; Click +NEW LABEL; Enter the label name; Select a color or enter a color hash; Enter a description. Edit or Delete Labels To edit or delete a label: Tick the checkbox next to it; Click on either Edit or Delete. You can delete more than label at once if you select a few of them. Scanner Tab In this tab, you can select the vulnerability scanner you want to use for the images in the project. Only one scanner can activate at the same time for a certain project. At the instance level, only superadmins can add scanners, enable them, and set default scanners. When a project is created, it inherits the instance\u0026rsquo;s default vulnerability scanner. To select another one, use Select Scanner button under the Scanner tab. This will open the list of enabled scanners where you can pick up the one you need for your project: Configuration Tab Some of the important properties and features can be found in the Configuration tab. Type of Project You can change the type of project after it has been created from private to public or the other way around. Deployment Security This configuration allows you to make your deployments more secure by limiting which images can be deployed. This can be done using two features. Content Trust When this feature is enabled, you can only deploy (pull) images that were signed. After enabling this feature in the Container Registry GUI, you can still push unsigned images into your project. But since none can pull them, it makes sense to start pushing only signed images. Prevent Vulnerable Images From Running When you have active vulnerability scanners in your project, they will calculate a vulnerability score following the methodology created by the National Institute of Standards and Technology of the US Department of Commerce. Its common Common Vulnerability Scoring System Calculator (CVSS Version 3.1) and the list of the involved metrics can be accessed here. The specification document can be viewed here. Accordingly, your project scanner will mark certain images as having one of the vulnerability severity levels: None; Low; Medium; High; Critical. Both Trivy and Clair, default Container Registry scanners, use this scale. In the current setting, you can specify which of the levels is not acceptable. The images marked with this level and all severity levels that are higher, will be suppressed from deployment. Vulnerability Scanners Scanners can be added to the instance and its projects only by superadmins but project admins can specify if images should be automatically scanned on push. If this feature is not enabled but you have scanners in your project, you still can scan images manually. CVE Allowlists This is another setting that is applied to vulnerability scanners. Common Vulnerabilities and Exposures List is a project by the US Department of Homeland Security and Cybersecurity and Infrastructure Security Agency. The aim of it is to \u0026ldquo;to identify, define, and catalog publicly disclosed cybersecurity vulnerabilities.\u0026rdquo; Each vulnerability is associated with a string type record in the CVE database. These records have IDs. With our CVE allowlist feature, you can use these CVE IDs to make the scanner ignore certain vulnerabilities. There are multiple ways to add CVE IDs to your project. System Allowlist When you select this option, all CVE IDs that were configured on the instance level by your superadmin (as described here) will be inherited by the project. Project Allowlist Alternatively, you can create your own lists manually or adjust the system-level allowlist. Use ADD to add the IDs manually using commas or putting each ID on a new line. You can search for CVE IDs in this database. Adding using commas: Adding using line breaks: Result for both: Use COPY FROM SYSTEM to copy the instance-level CVE IDs and then use X to delete any of them. You can also add new ones using ADD as in the previous case to expand the copied allowlist. System vs Project Allowlist: Which Overrides Which? When you never created any project-wide lists, then the system-wide (instance-wide) allowlist will be applied to all of your projects, as well as to all other projects in the instance. You do not need to select the System allowlist option pro-actively, it is set by default upon creation of the project. Once you create any project-wide allowlists, the project-wide lists will override the system-wide ones. It means that if you copy any allowlists from system but then modify them, the new custom allowlist will be applied to this specific project. Thus, be careful with deleting items from the system-wide allowlists when re-using them as project-wide allowlists to avoid any security issues in your images. Also note, that removing CVE IDs from the system won\u0026rsquo;t automatically remove them from the project if you re-used these IDs in a per-project allowlist. Set Expiration Date By default, no expiration date will be set for your CVE allowlist. They will remain active forever. To set a particular expiration date for either system-wide or project-wide lists, use the calendar to select a date. Once the date is set, the Never expires checkbox will be unticked automatically.","date":"2021-08-03T12:11:51+02:00","description":"","href":"https://container-registry.com/docs/user-manual/projects/configuration/","objectID":"e7f371c63d1f2e27600c8bd63f4c1c37_0","order":0,"tags":null,"title":"Project Configuration"},{"category":"Getting Started Guide","content":"Push and Pull Images Log In to Your Private Registry If you use a private registry, you need to use Docker login to push and pull images to and from Container Registry. For this, you can use your Container Registry username but you need to generate your CLI login for Docker first. Go to your user profile in the upper right corner of the cockpit: Copy the CLI secret: In your command line tool, log in to Docker: docker login your-subdomain.container-registry.com -u USER_NAME -p CLI Push Images Before Tagging: Projects and Repositories Container Registry Structure Inside your Container Registry instance, you can have two types of \u0026ldquo;folders\u0026rdquo; to sort your artifacts and control user access. Projects are bigger ones and contain repositories, the smaller folders. User access is managed on the project level. Default Project Upon your first registration, a sample public project called library already exists in your Container Registry instance. You can pull and push your images from or into it. Alternatively, you can create your own public or private project following the instructions from this tutorial. Fully Qualified Repository Name A fully qualified repository name includes a project and repository name and is used on the next step. You can pull or push your images from/into an existing repository inside your project or create a new repository while pushing an image to Container Registry. Tag the Image Tag the image you want to push; use the qualified name of your repository as repository and some tag as tag: docker tag SOURCE_IMAGE[:TAG] your-subdomain.container-registry.com/library/repository[:TAG] Alternatively: Build Image You can also build a new image with a tag: docker build -t SOURCE_IMAGE[:TAG] -t your-subdomain.container-registry.com/library/repository[:TAG] Push the Image Push the image using its tag to Container Registry: docker push your-subdomain.container-registry.com/library/repository[:TAG] In case of success, you will see the Docker image\u0026rsquo;s ID in your command line tool and in your project repository in Container Registry, under the Artifacts section together with the push timestamp like this: TIP To make pushing images easier for you, we prepared the sample tag and push commands that you can access through the GUI. You only need to change the source image tag and the final tag which you what to use in your Container Registry. Inside the project, click on the PUSH COMMAND as shown on the screenshot: Pull Images If you want to pull images from a private registry, login to it first as described above. Use the following sample command in your command line tool: docker pull your-subdomain.container-registry.com/library/repository:TAG Pulling by Tag or Hash You can pull images using their tags or SHA265 hashes (digests). The hashes are more reliable since tags do not catch all changes in image layers. Pull by Hash In the Container Registry GUI, open the project, then the registry. You will see the list of artifacts. Click on the copy icon in the Pull command column next to an artifact to get a pull command with the hash. If you already have the same image on your PC, they will be matched and the Image is up to date status will be shown in your command line tool. Example pull comand: docker pull your-subdomain.container-registry.com/library/repository@sha256:1b26826f602946860c279fce658f31050cff2c596583af237d971f4629b57792 Pull by Tag If you do not know the exact tag, go to your Container Registry account, open the project and the repository, and look for the image you need. The tag is displayed next to it, as well as information about when it was pushed. Annotations and labels can also provide you with a hint. Click on the image to get to the overview of its tags and click on the Pull command icon next to a tag to copy the following command into clipboard: docker pull your-subdomain.container-registry.com/library/repository:TAG","date":"2021-07-28T12:11:51+02:00","description":"","href":"https://container-registry.com/docs/getting-started-guide/push-and-pull-images/","objectID":"451a6c963048508fd4c3189d59bd605d_0","order":0,"tags":null,"title":"Push and Pull Images"},{"category":"User Manual","content":"Container Registry User Interface: A Short Overview When you log in to your Container Registry account as a user, you will see the following console. INFO If you log in as an administrator, you will see an additional administration section. Refer to our Administration Guide for the GUI features overview. Main GUI Features The navigation pane provides you access to your projects and logs. Projects are folders for your images which can be assigned certain settings. Logs contain information about push and pull actions, created repositorues, and a few others. Inside each project, you can also access logs for only this particular project. More about it in the section about working with logs. Both logs and projects have a detailed view where you can search and filter your projects or logs (1) and set the page size to increase or limit the number of displyed items (2). Event Log stores information about local events that do not have directly to do with your registry. User profile and settings contain your user name (which can\u0026rsquo;t be changed after your initial registration), your email, your name, and some additional information. Besides, in your user profile, you can access and manage your CLI secret. Manage Your CLI Secret If you click on the three dots next to the CLI, you will see two additional options: Generate secret will generate a new CLI secret; Upload your own secret will open another dialogue window where you can type in your own secret. Additional GUI Features To search through all project names, repository names, and charts, use the search field on the top pane of the console. In the upper right corner, you can switch language and select from one of the following: English (default language) Chinese Japanese Spanish French Portugese Turkish German In the bottom left corner of the console, you can change the colour theme of the interface from light to dark. Next to it, you have a link that brings you to our Swagger-based API documentation.","date":"2021-03-27T12:11:51+02:00","description":"","href":"https://container-registry.com/docs/user-manual/container-registry-user-interface-a-short-overview/","objectID":"a8666d936bd011108595485e496b09ed_0","order":0,"tags":null,"title":"Container Registry User Interface: A Short Overview"},{"category":"Administration Manual","content":"OpenID Connect Single Sign-On Authentication Currently, we support all OIDC compliant identity providers. In the User Guides section, you can find selected configuration tutorials that explain how the settings look like on the provider side. In this tutorial, we show what you need to do in your Container Registry instance to start using OIDC login. Usually, you should proceed with this tutorial only after you\u0026rsquo;ve set up everything in your account in the provider\u0026rsquo;s cloud. Besides, make sure that you made yourself familiar with general notes on different authentication modes as each of them may have its advantages and disadvantages. Steps in Your Container Registry Instance In the navigation pane, select Administration; Click on Configuration; Open the Authentication tab; In the Auth Mode, select OIDC from the dropdown; Enter the OIDC Endpoint: an URL of the authorization server specified in your provider\u0026rsquo;s official documentation on the OpenID usage; Fill in the fields with information you copied from your workspace on the provider side; OIDC Client ID; OIDC Client Secret; Enter the Group Claim Name which relates to OIDC groups; it must be a name/value pair: a name is a property that is used to store group names in your OIDC provider, values are the list of the groups you want to add; In OIDC Scope, enter openid ; further scopes can be specified depending on your provider; they must be separated by commas; Tick on Verify Certificate if your provider offers a certificate (which will be almost always the case); Specify if users will be enabled to change their username when signing up for the first time: if you select Automatic Onboarding, the onboarding screen won\u0026rsquo;t be shown, and users will be automatically assigned their usernames as they appear in the OpenID; If you activated Automatic Onboarding, you may also specify another property of the ID token that will be used to generate usernames in your Container Registry instance. Test the connection and hit Save if it worked out well. When you log out and then log in again, a new Login via OIDC provider button will appear on the login screen. As a system admin, you will continue to use your old credentials and Username and Password field to access your instance. On the Provider Side Independently from your provider, you need to set the Redirect URI to https://your-subdomain.container-registry.com/c/oidc/callback or, if you have a custom domain: https://your-custom-domain.com/c/oidc/callback It will be generated while you configure your OIDC authentication in your Container Registry instance. OIDC Groups You can create user groups in your OIDC provider workspace. It can be achieved by adding the memberof attribute to every ID token, similarly to how it is done in case of LDAP/AD authentication. Refreshing CLI Secret in the OIDC Authnetication Mode Users\u0026rsquo; CLI secrets can be set to expire after a while as expained here. If a user\u0026rsquo;s CLI expired, and the user tried to copy his new secret but it seems invalid, then the user must log out and log in to Container Registry and try to obtain the new secret again. The reason is that the CLI must be refreshed on the OIDC provider side, and this may fail sometimes.","date":"2021-09-30T00:00:00Z","description":"","href":"https://container-registry.com/docs/administration-manual/authentication/oidc-authentication/","objectID":"b0fa7bdc2697390155fe7a10f1d4d171_0","order":0,"tags":null,"title":"OIDC Authentication"},{"category":"Administration Manual","content":"Scanning Artifacts Read more about vulnerability scanning and how the health score is calculated here. Running a System-Wide Scan As a system administrator, you can scan all artifacts in your instance at once. Go to Administration; Click Interrogation Services; Select Vulnerability tab; Click Scan now. This will set the whole process in motion. You can watch the progress. Schedule a Scan Inside the vulnerability tab, you can schedule a system-wide scan. It will scan all artifacts in all projects. The scan can be set to run: hourly; daily; weekly; or on a custom schedule entered in the CRON format. How to Scan Only Selected Artifacts To do this, you need to go to a certain project to pick up artifacts. Click Projects in the navigation pane; Click on a project in the project overview); Click on a repository; Select artifacts; Optionally, filter artifacts; Click Scan.","date":"2021-09-06T00:00:00Z","description":"","href":"https://container-registry.com/docs/administration-manual/scanners/scanning-artifacts/","objectID":"315f3dbb8ad511192ccd502221e2a77f_0","order":0,"tags":null,"title":"Scanning Artifacts"},{"category":"Administration Manual","content":"User Management Add Another System Admin You can make another user a system admin: In the navigation pane, expand the Administration section; Select Users; Select a user name from the list; Click SET AS ADMIN. The new admin will have the same rights as the existing ones. Revoke System Admin Access To revoke admin access rights, repeat the steps from the previous section. Instead of Set as Admin, you will see REVOKE ADMIN after selecting user names. Click this button. User Management in the Database Mode Prerequisites User management is only possible in the GUI if you have set the authentication mode to database as explained here. Add New Users In the navigation pane, expand the Administration section and select Users; Then, click New User; Fill in the form; do not forget to note the password; Hit Save; Communicate the credentials to the new user; we recommend using OneTimeSecret. Validation Rules for User Names and Passwords Each user name must be unique within the instance. The minimal length for the password is 8 characters. It must include: 1 lowercase letter; 1 uppercase letter; 1 number. Changing and Resetting User Passwords As an admin, you can change the user password. In the Users tab, tick the checkbox next to the user; Click Actions and then Reset password; In the dialogue window, type in the new password and communicate it to the user. We recommend one-time notes from OneTimeSecret. Allow Users to Reset Their Passwords Instead of resetting user passwords manually, you can configure an email server to let users reset their passwords by themselves. They will use the Forgot password link below the sign-in form and receive a link to their email box. Steps to Configure Email Server Indeed, you need to set up such a server internally or using an external provider. In the navigation pane, expand the Administration section; Go to the Configuration section; Click on the Email tab; Fill in the following fileds : email server; email server port; email username; email password; email sender; can be configured as Container Registry Password Reset \u0026lt;hello@your-subdomain.container-registry.com\u0026gt; Select if you want to use an SSL and/or a trusted certificate. Test the server connection; Hit Save if everything works fine. Delete Users In the navigation pane, expand the Administration section; Select the Users tab; Select the users you want to delete; Click Actions; Select Delete.","date":"2021-08-19T00:00:00Z","description":"","href":"https://container-registry.com/docs/administration-manual/user-management/","objectID":"2696d8f6e8e87ed7a390fd2ee39bcf4e_0","order":0,"tags":null,"title":"User Management"},{"category":"User Manual","content":"Tag Policies Managing Tag Policies Prerequisites These rules require a project administrator permission level and are applied on the repository level. Another way to manage tags in bulks is to define specific rules. Two types of such rules are possible: tag retention rules; tag immutability rules. For both retention and immutability, you can create up to 15 rules that will be applied using an OR algorithm. It means that the rules are calculated independently from each other.","date":"2021-08-13T00:00:00Z","description":"","href":"https://container-registry.com/docs/user-manual/images/tags/","objectID":"b89f3577edd8c943787ee84d0869b2b7_0","order":0,"tags":null,"title":"Tag Policies"},{"category":"User Manual","content":"Webhooks Webhooks are API push notifications sent in the form of HTTP or HHTPS POST requests. They pro-actively deliver messages to other applications when some event occurs inside their own application. They can inform or trigger further events in the destination application. For instance, you can directly deploy an application upon the image push. This allows you to automate your deployments. In Container Registry, you can add either an HTTP or Slack-based HTTPS URL that will be used for receiving the messages by the target application. You have a choice between the following events that can initiate a push message: Artifact deleted Artifact pulled Artifact pushed Chart deleted Chart downloaded Chart uploaded Quota exceed Quota near threshold Replication finished Scanning failed All incoming messages (payloads) will be in JSON format. Below is an example from the push artifact event message: { \u0026#34;type\u0026#34;: \u0026#34;PUSH_ARTIFACT\u0026#34;, \u0026#34;occur_at\u0026#34;: 1586922308, \u0026#34;operator\u0026#34;: \u0026#34;username\u0026#34;, \u0026#34;event_data\u0026#34;:{ \u0026#34;resources\u0026#34;: [ { \u0026#34;digest\u0026#34;: \u0026#34;sha256:1b26826f602946860c279fce658f31050cff2c596583af237d971f4629b57792\u0026#34;, \u0026#34;tag\u0026#34;: \u0026#34;5.0\u0026#34;, \u0026#34;resource_url\u0026#34;: \u0026#34;epic-exoscale.container-registry.com/documentation/test_slack:5.0\u0026#34; } ], \u0026#34;repository\u0026#34;: { \u0026#34;date_created\u0026#34;: 1628167510, \u0026#34;name\u0026#34;: \u0026#34;test_slack\u0026#34;, \u0026#34;namespace\u0026#34;: \u0026#34;documentation\u0026#34;, \u0026#34;repo_full_name\u0026#34;: \u0026#34;documentation/test_slack\u0026#34;, \u0026#34;repo_type\u0026#34;: \u0026#34;private\u0026#34; } } } Prerequisites Webhooks must be enabled on the instance level by your system administrator (super admin). The instructions are available here. You must be a project administrator to add webhooks to the project. Get Your Webhook URL You need an endpoint URL that is able to receive HTTP/HTTPS POST requests. HTTP or HTTPS Configure a webhook listener on a server that will receive messages and perform further actions if their content requires so. Slack You can configure Slack, a popular team messenger, to receive notifications from your project. For this, you need: a Slack account; a Slack workspace; a target channel inside this workspace; an app with enabled incoming webhooks. For the last step, there are two methods to implement it: Add the existing legacy Incoming Webhooks app from the Slack marketplace: Go to https://slack.com/apps/A0F7XDUAZ-incoming-webhooks?tab=more_info; Click Install; On the following page, select your channel and click Add Incoming WebHooks Integration. Alternatively, create a new Slack channel: You\u0026rsquo;ll be redirected to the Setup Instructions page where you can copy your webhook URL: After you add your webhook in the Container Registry GUI, you will start receiving Slack notifications that look like this: Create your own Slack app and enable webhooks for it. Go to https://api.slack.com and click Create an app or Go directly to https://api.slack.com/apps?new_app=1; Select From an app manifest if you only need it for the webhooks; Select your workspace; Inside the YAML or JSON file, change the name of your app; Hit Next and then Create; You\u0026rsquo;ll land in the basic information view of your new Slack app; Click Incoming Webhooks; Activate incoming webhooks for this app with the slider and then click Add New WebHook to Workspace; Select the target channel to post notifications and click Allow; Your Slack webhook URL was now generated and can be copied: Your new app will be visible among your Slack apps: After you add your webhook in the Container Registry GUI, you will start receiving Slack notifications that look like this: Webhook Triggers The table contains the details about available webhook triggers and what they do. Event Webhook Event Type Contents of Notification Push artifact to registry PUSH_ARTIFACT Repository namespace name, repository name, resource URL, tags, manifest digest, artifact name, push time timestamp, username of user who pushed artifact Pull artifact from registry PULL_ARTIFACT Repository namespace name, repository name, manifest digest, artifact name, pull time timestamp, username of user who pulled artifact Delete artifact from registry DELETE_ARTIFACT Repository namespace name, repository name, manifest digest, artifact name, artifact size, delete time timestamp, username of user who deleted image Upload Helm chart to chartMuseum UPLOAD_CHART Repository name, chart name, chart type, chart version, chart size, tag, timestamp of push, username of user who uploaded chart Download Helm chart from chartMuseum DOWNLOAD_CHART Repository name, chart name, chart type, chart version, chart size, tag, timestamp of push, username of user who pulled chart Delete Helm chart from chartMuseum DELETE_CHART Repository name, chart name, chart type, chart version, chart size, tag, timestamp of delete, username of user who deleted chart Image scan completed SCANNING_COMPLETED Repository namespace name, repository name, tag scanned, image name, number of critical issues, number of major issues, number of minor issues, last scan status, scan completion time timestamp, vulnerability information (CVE ID, description, link to CVE, criticality, URL for any fix), username of user who performed scan Image scan failed SCANNING_FAILED Repository namespace name, repository name, tag scanned, image name, error that occurred, username of user who performed scan Project quota exceeded QUOTA_EXCEED Repository namespace name, repository name, tags, manifest digest, artifact name, push time timestamp, username of user who pushed artifact Project quota near threshold QUOTA_WARNING Repository namespace name, repository name, tags, manifest digest, artifact name, push time timestamp, username of user who pushed artifact Artifact replication finished REPLICATION Repository namespace name, repository name, tags, manifest digest, artifact name, push time timestamp, username of user who triggered the replication You can use any combination of them or all triggers. Creating a New Webhook in the Container Registry GUI Go to the Webhooks tab in your project; Click + NEW WEBHOOK: Select slack if you copied your endpoint/webhook URL from a Slack application, or select http if you use another application to receive push notifications; Paste the endpoint URL; For HTTP endpoint URLs, you can provide the Authorization Header that specifies your authorization type and contains your credentials, if required, for instance: Authorization: Bearer {{token}} Select an option to verify remote certificates; For HTTP endpoint, disable the feature; For HTTPS, enable it. Webhooks Overview and Details If you click on the arrow next to a webhook, you can open a detailed overview of the triggers and when they ran for the last time. You may need to flick through the triggers using the arrows in the bottom right corner. Enabling/Disabling, Editing, and Deleting Webhooks You can delete webhooks manually or in bulks if you tick the checkboxes and click Delete under the Action menu. You can disable/re-enable and edit","date":"2021-08-05T12:11:51+02:00","description":"","href":"https://container-registry.com/docs/user-manual/projects/configuration/webhooks/","objectID":"b135e4c7439b19538cce7a471fc23d4f_0","order":0,"tags":null,"title":"Webhooks"},{"category":"User Manual","content":"webhooks one by one if you tick the checkboxes and click Disable/Enable or Edit under the Action menu.","date":"2021-08-05T12:11:51+02:00","description":"","href":"https://container-registry.com/docs/user-manual/projects/configuration/webhooks/","objectID":"b135e4c7439b19538cce7a471fc23d4f_1","order":1,"tags":null,"title":"Webhooks"},{"category":"User Manual","content":"Working With Projects This article contains basic information about projects in Container Registry. What Projects Are For When you log in to your Container Registry account, you will land in the Projects section. Projects play a central role in Container Registry for two reasons. Projects host all repositories of the application that you need images for. Basically, a simple rule will be one project = one application. Inside a project, you can have multiple repositories. Consequently, you can only start working with images, if you have at least one project. By default, upon your initial registration, a sample project will be created for you automatically. The repositories can be created with the push or from the console UI. Permissions are set on the project level in the form of Role-Based Access Control (RBAC). Look here to learn about certain actions that users with different roles can perform. Types of Projects Harbor allows two types of projects: public and private. Public projects do not require project membership to pull images from this kind of project. The users do not even need login credentials for their Docker clients. On the contrary, to access private projects, you have to be added to it by the project administrator. The project administrator is another user and not necessarily the system administrator / superadmin of your instance. Read more about assigning users to projects in this article. Create New Project Navigate to the Projects section; Use the + NEW PROJECT button; Give your project a name; Set the access level to public or private. Set Project Quotas Project quotas are storage quotas for your images. If you create a project as a user, ask your superadmin to adjust the storage quotas (refer to the administration manual). If you create a project as a superadmin, you will be able to set the quotas directly in the dialogue window: Set a number and select the scale; Type in -1 to set an unlimited storage quota. Filter or Search Projects In the Project section, you can filter your projects by: their type: public or private; their name. To filter by project type, use the following dropdown: To filter by project name, use the search field: You can also search for projects using the seach icon in the Project Name column header: To display all projects again, delete your search string and click X. Refresh Existing Projects Since more than one project admin is possible per project, more than one collaborator can create and delete projects in the same instance. If you notice that some repositories or certain images are missing, try to refresh the list of existing projects to make sure that you are looking at the actual view: Delete Projects If you have a project admin role in the project, you can delete your projects. Inside the Projects section, select the projects you want to delete and click Delete: Project Summary Summary of All Projects When you are on the highest level of the project section, you can see the following summary of your projects and repositories: Project List Inside the project section, you can see the list of all projects you are the member of, as well as some basic information about them: Project names; Their type (shown as Acess Level column); Your role in each project; The type of the entry; Number of the repositories Number of charts; Creation time. Summary of Each Project Inside every project, you can get a similar summary that includes: number of repositories in the project (1); project quotas: storage consumption (2); number of helm charts (3); number of project members per project role (4).","date":"2021-03-30T12:11:51+02:00","description":"","href":"https://container-registry.com/docs/user-manual/projects/","objectID":"6c5ad82046c6871478f1acb26afac188_0","order":0,"tags":null,"title":"Working With Projects"},{"category":"Getting Started Guide","content":"Other Useful Features Our Harbor-based cloud service allows you to manage your images easier. Apart from pulling and pushing images to and from your container registry, you can: Facilitate your Kubernetes deployments by seamless integration between your Kubernetes clusters and Harbor-based container registries; using Kubernetes YAML manifests: Helm Charts; access your Chart Museum directly from the GUI Bypass connectivity issues by using a proxy cache: a pull-through cache for another target registry; a cached copy is checked against the target and is always up-to-date. Better manage your images by organizing them into projects; creating repositories inside projects; tagging images; creating labels and annotations for images; Improve your security by running vulnerability checks on images; using identity providers, such as Google and Azure; distributing commercial images safely; applying role-based access control to all artifacts; Automate your workflow by creating robot accounts; creating, refreshing, and synchronizing their secrets programmatically with Harbor Sync; creating webhooks; specifying a P2P preheat policy for commercial distribution of the images; Have a better overview of your costs by monitoring project quotas.","date":"2021-03-29T12:11:51+02:00","description":"A brief overview of the available features","href":"https://container-registry.com/docs/getting-started-guide/other-useful-features/","objectID":"5580fb613387ff9877f009f1f3f0f259_0","order":0,"tags":null,"title":"Other Useful Features"},{"category":"Administration Manual","content":"General Configurations System-Wide CVE Allowlist You can manage your deployment security by excluding certain vulnerabilities – entries in the Common Vulnerabilities and Exposures List – from the health score calculation. Project admins can do this on the project level re-using system-wide CVE lists or creating their own. Add Items to a System-Wide CVE Allowlist In the navigation pane, expand Administration; Go to Configuration; Open System Settings; Scroll down to Deployment Security; Click ADD; Find the vulnerability in this database; Enter the items separated by simple commans or line breaks; Select an expiration date for the allowlist or click Never expires; Click ADD; Click Save. Edit Existing System-Wide CVE Allowlist Still in the Deployment security, click on the x next to the CVE index to remove it from the system-wide allowlist. Vulnerability Database Updates If you have vulnerability scanners Clair or Anchore, you can see when these databases were updated for the last time. The timestamp can be accessed under Administration -\u0026gt; Interrogation Services -\u0026gt; Vulnerability.","date":"2021-09-08T00:00:00Z","description":"","href":"https://container-registry.com/docs/administration-manual/scanners/general-configurations/","objectID":"0a64c1e8701adbcfd2c5b799763c29cb_0","order":0,"tags":null,"title":"General Configurations"},{"category":"Administration Manual","content":"System Robot Accounts Robot accounts are used to let another application log in to Container Registry automatically. The overview of all robot accounts in your instance is available from Navigation -\u0026gt; Robot Accounts. Please note that all robot accounts get a prefix to their names when they are created. By default, the prefix is robot$. It is possible to configure another prefix as described here. Available Robot Account Permissions Robot accounts can access Container Registry through API or a command line tool but never the GUI. They can perform one or more of the following actions based on the permissions you granted them: Push artifacts Pull artifacts Delete artifacts Read Helm charts Create a Helm chart version Delete a Helm chart version Create a tag Delete a tag Create artifact labels Create a scan System robot accounts may be granted such permissions for more than one project or even for the entire system. Create a System Robot Account The procedure is similar to creating robot accounts on the project level as described here with the difference that, as a system admin, you can create robots that have access to multiple projects. To create a system robot account: Go to the Administration tab; Select Robot Accounts; Click New Robot Account; Fill in the form: Give your robot a catchy name; Select from the dropdown if its token should expire and how soon; INFO The tokens can be refreshed upon expiration or at any other time as described here. Optionally, add a description; Set which projects it should have access to: A) Select Cover all projects and set permissions that apply to all projects. Select or de-select them from the dropdown. B) If you have a lot of projects, filter them by name and then click Cover all Projects to include the selected results. IMPORTANT The filter that you created in this step will be saved in the robot account configuration. It means that if you later create a project with the name matching the same pattern, the existing robot account will be automatically granted access rights to this project. C) Or check the tickboxes next to specific projects. In this case, you will need to set permissions for each project individually. As a shortcut, you can use the Reset Permissions button to revoke certain permissions from all projects in the list. Hit ADD to add the new system robot account. Upon creation of the new robot account, the secret token for this account will be displayed once. You can also save it as a JSON file if you use the Export to file button. If you do not copy or export the token immediately, you will need to reset it later since the original one won\u0026rsquo;t be accessible any longer due to the restrictions of the underlying Harbor technology. Managing System Robot Accounts From the system robot accounts overview, under Administration -\u0026gt; Robot Accounts, you can manage your robots. To do this, tick the checkbox next to an account and click on Action button. You cannot manage items in bulk. Refresh System Robot Account Token Robot account secret tokens must be refreshed when they expired or can be refreshed when you have not saved the original ones or want to refresh them for security reasons. To do this, use the Refresh Secret button and then Refresh in the opened dialogue window. The new secret will be generated automatically. After you hit Refresh, you will see the dialogue window that allows you either to copy your secret or download it as a JSON file. Remember, that, like in the case of new account creation, this secret token won\u0026rsquo;t be saved anywhere in the system, so make sure you save it immediately. Optionally, you can type in your own secret if you enable this option using the slider. Requirements for the Manual Secret 8-20 characters including: at least 1 uppercase; at least 1 lowercase; at least one number. Edit System Robot Account Still in the Robot Accounts overview, use Action button and then Edit to edit general attributes of the robot account, such as expiration period, description, and permissions. You cannot rename existing robot accounts. Delete System Robot Accounts In the same Robot Accounts overview, use Action button and then Delete to remove any system robot accounts completely. Disable and Enable System Robot Accounts Instead of deleting system robot accounts, you can disable them using Action - \u0026gt; Disable in the Robot Accounts overview. The accounts will be kept in the system and can be enabled using the same Action button. Additional Configuration You can configure a few features that apply to the creation of new system robot accounts. This needs to be done from a different section in the navigation. Go to Administration; Click on Configuration; Then open the System Settings tab. Changing Default Robot Accounts Prefix By default, all new accounts are created with a robot$ prefix that is attached to the name that you provide manually. You can set a different default prefix in the System Settings. In the Robot Name Prefix, type in the new prefix string. The prefix will be applied to all new system and project robot accounts. The robot accounts with the old prefix will be marked as legacy. Robot Accounts Expiration By default, when you create a new system or project robot account, the Expiration time field is filled with a value which is 30 (days). You can set a different default value which will be also in days counted from the creation of a robot account. In the same System Settings tab, you can specify the default expiration period for the tokens of all newly created robot accounts. However, you still can set the expiration period manually while creating a robot.","date":"2021-08-19T00:00:00Z","description":"","href":"https://container-registry.com/docs/administration-manual/system-robot-accounts/","objectID":"07692a3e1de0c414bbc9f9d6bbc7c326_0","order":0,"tags":null,"title":"System Robot Accounts"},{"category":"User Manual","content":"Working With Images, OCI Indexes, Tags, and Helm Charts Needless to say, Docker images are the reason why you actually want to work with Container Registry. This section will describe general features available for managing images and helm charts. To learn about working with tags, refer to this section. To learn how to push and pull images, refer to this tutorial. Types of Artifacts When you open a repository in a project, you will see a list of the available artifacts: items stored in the same repository. The following types of artifacts are possible: Images: items with the Docker whaleship icons; Helm charts: items with the \u0026ldquo;Helm\u0026rdquo; icon; OCI indexes: items with the three-bubbled icon on the left and a folder icon on the right. What are OCI indexes and why do you need them? Some images may be gathered in lists using the OCI index. In general, every Docker image has a manifest: information about its layers, size, digest, as well as for which operating system and type of CPU architecture it was built, etc. Images are only templates that do not change. The changes are stored in the image layers. In Harbor, you can create manifest lists that are basically lists of the layers of the same image. Manifest lists appear in Container Registry as artifacts with a folder icon. When you click on the icon, the entire list of the image manifests will be displayed. Refer to the official Docker documentation to create a manifest list using your command line tool. SHA256 Hash The artifacts are named using a SHA256 hash. A hash can be described as a key or a representation of a text message. It is similar to encryption but it can be decrypted into the original message easily. SHA256 hashes refer to the JSON file that keeps the image manifest and are generated when the image is compressed for being pushed. Since such compression is also a kind of change, a new image layer is created during this preparation for a push. Consequently, this layer needs a new manifest that is pushed to a repository. Further, the manifest is written in a new JSON file. Eventually, this file becomes its own new unique hash. INFO To display the type of the artifact as well as its complete hash, hover over one of them respectively: Displaying artifact type: Displaying artifact hash: You do not need to memorize the hash, though. It can be copied into clipboard. Overview of the Stored Images/Artifacts The overview table has the following columns: Artifacts. Pull Command: when you click on the copy icon next to an artifact, the pull command for this artifact will be copied to clipboard and can be used in your command line tool to pull the artifact. Example of the copied command: docker pull your-subdomain.container-registry.com/library/test@sha256:1b26826f602946860c279fce658f31050cff2c596583af237d971f4629b57792 Since there are different types of artifacts stored in repositories, they are all referred to using their SHA256 hashes. Tags. Read more about Docker image tags here. Some artifacts can have multiple tags. Hover over the entry to display an overview of all tags or check them in the artifact view. Size. This column shows the size of the compressed artifact. When you pull it to your local machine, it will be decompressed to its original size again. Vulnerabilities. This column shows the results of the image scan if any scan has been run upon it. Hover over the entry to display all vulnerabilities or check them in the artifact view. Annotation. This column displays additional information that was added to the image manifest. It can include: type of CPU architecture; architecture variant; operating system and, optionally, its versions and features. Read more about setting images annotations here. Labels shows labels that you or your project collaborators assigned to the artifact. Push Time shows when the artifact was pushed for the last time. Pull Time shows when the artifact was pulled for the last time. Filtering Artifacts You can filter artifacts in the repository using the magnifier in the top right corner of the table. Click on it to access different filtering options. Filter Artifacts by Type You can restrict the artifacts overview to a specific type by selecting one of the types in the dropdown: Filter Artifacts by Tags You can display only tagged or untagged images. Filter Artifacts by Label You can display only artifacts that have the same label. You can select more than one label in this operation. Managing Artifacts In the artifacts overview, a few basic operations with artifacts are available. Every time you need to perform one of them: Tick the checkbox next to the artifact; Click Actions: Per-Item Actions These kinds of actions can only be applied to one artifact at a time. Copy Digest This button will open another dialogue window where you can copy the digest to clipboard. Add Labels Labels are another way to add some short information to your artifacts to sort them later or to make them more eye-catching in the overview. Labels must be added to the project by the project administrator as described here. Bulk Actions: Delete or Scan Artifacts These actions can be applied to more than one artifact at a time. INFO To scan images, you need at least the project administrator privileges.","date":"2021-08-11T00:00:00Z","description":"","href":"https://container-registry.com/docs/user-manual/images/","objectID":"867296aa8812795d3fcf8878e82a9ea6_0","order":0,"tags":null,"title":"Working With Artifacts"},{"category":"Administration Manual","content":"Endpoints For Replications and Proxy Cache Projects Endpoints are container image registries. They can be instances of the Container Registry platform, or other Harbor-based registries, or even non-Harbor-based ones. Non-Harbor Registries: General Information Supported Non-Harbor Registries For Replications Ali Cloud Container Registry (Alibaba ACR); Artifact Hub; AWS Elastic Container Registry; Azure Container Registry; Docker Hub; Docker registry; DTR; GitHub GHCR; Gitlab; Google Container Registry; Harbor; Huawei SWR; Jfrog Artifactory; Quay; Tencent TCR. For Proxy Cache Projects Harbor; Docker Hub; AWS Elastic Container Registry; Azure Container Registry; Google Container Registry; Quay. INFO We update these lists regularly but you can also check for the original ones here. Getting Your Access ID and Access Secret from Other Providers When you create a new endpoint as described below, you will need to enter an Access ID and Access Secret. Different providers have different names for that. Amazon ECR In the case of AWS ECR, those are not your (root) user credentials but the so-called keys for programmatic access. Read this AWS documentation article to understand how you can access these keys in your AWS account. Google Container Registry (GCR) In GCR, those can be downloaded as a JSON file following the instructions from the official documentation. Quay Without Authorization If your Quay registry does not require authorization, do not enter anything in the Access ID and Access Secret fields. With Authorization In this case, you need to leave the Access ID field empty and enter all credentials into the Access Secret field in JSON format, like this: { \u0026#34;oauth2_token\u0026#34;: \u0026#34;YmQZ1QZENVmOD6v9kENzmfptNVhgBuy5oVl85eGV\u0026#34;, \u0026#34;account_name\u0026#34;: \u0026#34;account_name\u0026#34;, \u0026#34;docker_cli_password\u0026#34;: \u0026#34;q6NVazikNqIf4coiQ+JvV4iqiCpkNjE0DLX8ZMQuFRbkHk5iMv6/hd4WdV3W3nyX\u0026#34; } The OAuth2 token can be skipped if you do not want to create a new organization; Account name: If you use robot account credentials, be aware that it can only be used in one Container registry system at the same time. Thus, you will need different robot accounts for every Container Registry instance; Alternatively, and this is even recommended, use your personal account name; Docker CLI password is your general CLI password. Create New Endpoint In the navigation pane: Go to Administration; Then to Registries; Click + New Endpoint. Fill in the form; For the endpoint URL, use the URL of the registry; If you want to connect to another Harbor-based registry, use the account name of your robot account as Access ID and its token as Access Secret; Select if there is a security certificate on the other side or not. Test the connection; Save the endpoint if the test ran successfully. Manage Existing Endpoints You can either edit or delete any of the existing endpoints. In the Registries overview, select one endpoint for editing or one or multiple ones for deleting.","date":"2021-08-27T00:00:00Z","description":"","href":"https://container-registry.com/docs/administration-manual/endpoints-for-replications-and-proxy-cache/","objectID":"e7cec8f5c23fa5955f485fbbc7a310bd_0","order":0,"tags":null,"title":"Endpoints For Replications and Proxy Cache"},{"category":"User Manual","content":"Working With Logs Logs track everything that happens in your system. You can access logs from different places in the GUI. Event Logs You will see this side bar on the right from everywhere in Container Registry. Hover over the EVENT LOG tab to exapnd it. Event log includes high-level events, for instance, adding or deleting a new user to the system: In some cases, project-related events will be also displayed in this section. Local events are shown in groups: All; Running; Failed. All Projects Logs Events that happen within certain projects can be found in the Logs section of the Navigation pane on the left. Each log entry includes the following information: username; resource; resource type: tag; artifact; project; operation; timestamp. You can type your search string and use a dropdown filter to narrow the search down to: username; resource; resource type: operation. Project Logs In addition to the Logs section and Event Log, you can dig into log data generated for particular projects. For this, go to the Logs tab inside the project. Each project log entry includes the following information: Username of the project memeber who initialized the operation; Resource: an image or project name depending on the level the operation happened on; Resource type: artifact/image; project; Operation: create; delete; push; pull; Timestamp. Here, you can filter your logs by: user name: date of the operations; type of the operation. For the last two filters to appear, use Advanced filer mode.","date":"2021-08-17T00:00:00Z","description":"","href":"https://container-registry.com/docs/user-manual/working-with-logs/","objectID":"e148e2ad617e81f30991a395ad4e97a2_0","order":0,"tags":null,"title":"Working With Logs"},{"category":"Administration Manual","content":"Configure Replication Rules Replication rules specify which artifacts will be moved between registries and how they should be moved. Each replication rule includes: a filter to catch particular artifacts; a scheduler; a flattening rule. Create or Configure a Replication Rule Prerequisite You need at least one endpoint – a registry to push or pull images from – to create a new replication rule. Steps In the navigation, select Administration and then Replications; Click + New Replication Rule; If you want to edit an existing one, select it for editing as explained below; Fill in the form: Name should not have any white spaces; Description is optional; Replication mode: Push-based means that you will push images from your current Container Registry instance into a remote one; Pull-based means that you will pull images to your current Container registry instance from a remote one; Resource filter: in the push replication mode, your current instance is the resource, whereas, in the pull mode, the resource is the remote registry; the resource filter selects which artifacts should be included in the replication: Name is the repository name; however, you can include all repositories by specifying in this field only the name of the project or using patterns; Tag is the artifact tag; Label; In the Resource dropdown, you can choose between the artifact type: chart, image, or any artifact. Destination/Source registry: you need to specify the remote registry by selecting an existing endpoint from the dropdown; In the Destination Namespace you can enter a custom name for the namespace where the artifacts should be pushed; if you leave it empty, the namespace existing in the source will be created in the destination and the artifacts will be stored there; In you specify a destination namespace or tag, you will need to select a Flattening rule for them (read more about flattening below); Trigger will specify when a replication should run: manually: when you start it pro-actively; scheduled: the replication runs repeatedly after the same time interval; this interval must be specified using the CRON format; event-based runs when an event happens; for manual and scheduled triggers, specify if you want the artifacts with the same name to be overridden in the destination; for event-based trigger, specify if you want to synchronize delete operations. INFO The resource filter is an AND filter. The more conditions you add, the narrow is the selection. Which Events Trigger a Replication or Not The following events will trigger a replication that is set to be event-based: a new artifact has been pushed into the resource registry; an artifact was re-tagged in the resource registry; optionally: an artifact has been deleted from the resource registry; to activate this one, you need to tick the checkbox near Delete remote resources when locally deleted. INFO Changes in the artifact labels do not count as events and never trigger a replication. Flattening Docker images have multiple layers that reflect all changes you\u0026rsquo;ve done to the original image. Layers are organized into hierarchies. When a layer in the hierarchy is changed, Docker will propagate the changes to all the layers below this one. The hierarchy may have more than one brunch. Consequently, you need to make sure that you keep track of where certain layers come from, which changes were applied to them, and how to find the \u0026ldquo;original\u0026rdquo; layer. You can also choose not to track this information if you do not need it. An image hierarchy can be visualized in your command line tool using the tool known as dockviz and looks like this: $ dockviz images -t -l └─511136ea3c5a Virtual Size: 0.0 B ├─f10ebce2c0e1 Virtual Size: 103.7 MB │ └─74fe38d11401 Virtual Size: 209.6 MB Tags: ubuntu:12.04, ubuntu:precise ├─ef519c9ee91a Virtual Size: 100.9 MB │ └─a7cf8ae4e998 Virtual Size: 171.3 MB Tags: ubuntu:12.10, ubuntu:quantal │ ├─5c0d04fba9df Virtual Size: 513.7 MB Tags: nate/mongodb:latest │ └─f832a63e87a4 Virtual Size: 243.6 MB Tags: redis:latest └─02dae1c13f51 Virtual Size: 98.3 MB └─316b678ddf48 Virtual Size: 169.4 MB Tags: ubuntu:13.04, ubuntu:raring In your repository, this hierarchy is represented through slashes in the artifact name. The highest level appears in the image name on the left, before the very first slash. By selecting a flattening rule, you keep some or all or none of the hierarchy levels. It is pretty much like removing parts of the image name. When you drop – flatten – one or a few levels, one or a few slashes and characters between them will be removed from the artifact name. INFO Chartmuseum always needs two levels left on the chart name. Options for the scope of flattening: Flatten All Levels will remove the complete hierarchy leaving only the tag of the last layer; No Flatteing will keep the hierarchy as it appears in the resource registry; Other options always remove a number of levels (parts of the image name starting from the left): Flattening 1 level; Flattening 2 levels; Flattening 3 levels. Pattern Matching Rules for the Name and Tag Resource Filter You can use double-starred patterns as explained here to include only certain repositories in the project or certain tags. The pattern will be matched with the names of repositories or artifacts. In addition to that, you can use two more pattern matching methods. Contrary to double-starred patterns that take any match independently of the number of the characters that can be added to the pattern to build a match, with the question mark, you can specify that only one character can be added. For instance, test? will be matched with test1 and test2 but not with test12. To enter more than one pattern as a match, create a list of them using curly brackets and separating single patterns with simple commas. You can use ? and asterisk in the patterns inside the list. General Information About Replication Tasks Failed Tasks Replication tasks are running replications. Failed replication tasks undergo a few execution attempts automatically. Reasons for Replication Task Failure Most of the time, two reasons for the replication task failure are possible: network issues; insufficient user","date":"2021-09-03T00:00:00Z","description":"","href":"https://container-registry.com/docs/administration-manual/replication/configure-replication-rules/","objectID":"532f4df93a6fbcb23bd8df5c974f17d7_0","order":0,"tags":null,"title":"Configure Replication Rules"},{"category":"Administration Manual","content":"rights in the destination registry. Managing Replication Rules To manage replication rules, select one of them by clicking on the circle next to a rule and then perform one of the following actions using buttons in the replication rules overview. Run a Replication Manually The Replicate button will run the selected replication. This is possible for replications with any type of trigger but is the only way to run the replication with the manual trigger type. Disable or Enable a Replication Rule Replication rules can be disabled and enabled again if you only want to pause them for a while. Edit or Delete a Replication Rule You can delete or edit any replication rule using the Actions button. INFO If a replication that you want to edit or delete is running at the moment, you will need to wait until all replication tasks are finished successfully. You can check their status as explained below. Check the Status of Replication Tasks To check the status of all past and present replication tasks, select a replication rule and the list of its executions will appear below. Click on the execution ID and you will be redirected to the overview of the replication tasks for this execution. Replication Logs For each replication task, you can access its logs by clicking on the log icon next to the task in the replication task overview. Stop a Running Replication To stop a running replication, select a replication rule to display the list of executions. Select the one that is still in progress by using the checkbox and press Stop. The same button is also available in the replication task overview.","date":"2021-09-03T00:00:00Z","description":"","href":"https://container-registry.com/docs/administration-manual/replication/configure-replication-rules/","objectID":"532f4df93a6fbcb23bd8df5c974f17d7_1","order":1,"tags":null,"title":"Configure Replication Rules"},{"category":"Administration Manual","content":"Configure Artifacts Replication In Container Registry, artifacts – images and helm charts – can be pushed or pulled between registries in bulks, even between those that are outside of our platform. This process is known as replication. Artifacts are replicated based on a filter: a replication rule. The external registry does not need to be Harbor-based. A replication can be initiated manually but its main advantage is that it can be set to run on a schedule or trigger. Configuring a replication – manual or rule-based automated – includes two major steps: creating a replication endpoint; creating a replication rule. Manual replications still need a rule but must be initiated by hand. Namespace Match With the Destination Registry When you push artifacts to a registry using replication, you do not need to create the namespace – project and repository – in the destination registry before. Exactly as in the case of pushing images to Container Registry from your local machine, the repository will be created in the destination. It also plays no role if the destination is your Container Registry system or an external one. Exception In Quay.io you need to create namespaces in advance before using the endpoint.","date":"2021-08-27T00:00:00Z","description":"","href":"https://container-registry.com/docs/administration-manual/replication/","objectID":"3e5bf2321ed976b6648ad5858d7fc30c_0","order":0,"tags":null,"title":"Configure Artifacts Replication"},{"category":"Administration Manual","content":"System-Wide Labels Labels are colored tags that can be added to artifacts and are only visible in the Container Registry GUI. They help you to find artifacts quickly since they can be used in some filters and since they are more eye-catchy than tags. They can be added on the project level by project administrators as explained here, but system administrators can also create system-wide labels that can be used for all projects. Add a New System-Wide Label In the navigation, go to Administration; Select Labels; Click + New Label; Give it a name; Assign it some color; Optionally, add a description. Edit or Delete a System-Wide Label To edit or delete an existing system-wide label: Go to the Labels tab in the Administration; Check a tick box next to a label; Press either Edit or Delete. It is possible to delete labels in bulks, but editing only works for one label at a time.","date":"2021-09-03T00:00:00Z","description":"","href":"https://container-registry.com/docs/administration-manual/system-wide-labels/","objectID":"ec4a5bb5bca3185e9b32d4cf7b38cc27_0","order":0,"tags":null,"title":"System-Wide Labels"},{"category":"Administration Manual","content":"Project Quotas Individual accounts have 1 GB of storage included. Dedicated accounts have 100 GB. You can set the upper limit for storage usage for every project. Overview of the Storage Usage In the Project Quotas tab of the navigation pane, you can check how much storage is used and by which projects. Default disk space per project shows how much storage every newly created project will be assigned. The bar in the Storage column of the overview shows the percentage of storage use. If it is green, you are below the first half of the storage reserved for this project. The yellow color shows that you are above the first half. The red color shows that the project is close to exhausting its available storage. INFO Default disk space per project is not the total storage use per instance, nor it is the sum of all other project quotas. Changing Project Quotas If you are a system administrator of your Container Registry instance, you will be able to set project quotas during the creation of new projects. For the projects created by other users of your instance, you can adjust quotas afterward or specify a default storage quota. Set Default Storage Quota Per Project In the navigation pane, expand Administration; Find Default disk space per project und click Edit next to it: Choose the volume measure from the dropdown; Type in the amount of storage you need; Set it at -1 for unlimited storage. Change Quotas for Existing Projects In the navigation pane, expand Administration; Click Project Quotas; In the project list, select a checkbox next to the project you want to change the quota for; Click Edit; Select the volume measure from the dropdown; Enter the amount of storage you need; Set it at -1 for unlimited storage. INFO When you change the default project quota and there are some existing projects in the instance, that won\u0026rsquo;t change their storage quotas. General Information About the Storage Size A few notes on when you should expect changes in your storage usage: what makes your storage quotas exhausted quickly and what makes some storage space vacant again. INFO Helm Charts do not influence the storage usage that you see in the project quotas overview. Every Docker image has at least one – usually, numerous – layers. Those layers are \u0026ldquo;stored\u0026rdquo; in blobs: binary files. The track of layers is kept in the image manifest. Shared Blobs and Project Quotas The hierarchy of the image layers was explained in detail here. From this perspective, one can say that some image layers are included in more than one image. But the underlying Harbor technology does not multiply identical layers but rather maps different images to store one unique layer only once and to spare some storage space. Consequently, shared blobs – identical layers – add to the exhaustion of the project storage only once. However, shared blobs stretched across different projects add to the exhaustion of every project. What Happens With the Storage on Image Push On image push, blob files are transmitted first. The manifest is pushed only upon their successful arrival in the registry. Therefore, you may exceed your project quota but you won\u0026rsquo;t be notified about it immediately after you\u0026rsquo;ve started the push. The storage may be exhausted in the process but Container Registry can reject the push only when its manifest arrives and gets rejected due to the quota exceeded by the blobs. Rejection or acceptance happens on \u0026ldquo;First come, first served\u0026rdquo; principle, in the order image manifests arrive. Keep this in mind when pushing a few images in parallel. They may race with each other and the first to be pushed is not necessarily the one to be stored successfully. Images with blobs already existing in the registry will squeeze through faster than those with completely new layers. What Happens With the Storage on Retagging Images Retagging images increases storage exhaustion if you copy an image from one project to another. It does not change project quota exhaustion if you tag the image but leave it in the same project. What Happens With the Storage on Deleting Images Image blobs are not deleted when the image is deleted. Therefore, deleting images won\u0026rsquo;t free any storage space. To remove the blobs completely and to reduce the storage exhaustion in the project, run Garbage Collection as described here.","date":"2021-09-06T00:00:00Z","description":"","href":"https://container-registry.com/docs/administration-manual/project-quotas/","objectID":"82a32351b9f6562064e3f1fe3200e614_0","order":0,"tags":null,"title":"Project Quotas"},{"category":"Administration Manual","content":"Vulnerability Scanners Docker images may contain vulnerabilities that are dangerous from a cyber security point of view. Multiple providers offer software that allows for scanning images for such vulnerabilities and can be integrated into your Container Registry instance. Every instance comes with the two pre-installed vulnerability scanners: Trivy, the default one, and Clair, both open-source. What Vulnerability Scanners Do Known cyber security vulnerabilities are pieces of the source code that can lead to security breaches. They are listed in the ever-growing database Common Vulnerabilities and Exposures List. Vulnerability scanners go through the underlying source code of a Docker image and check if some parts of it match the known vulnerabilities. Some of the vulnerabilities you can exclude from matching as explained here. As a system admin, you manage all scanners available in the instance. Project admins can select scanners for adding them to their projects as explained here. Without any active intervention from you or from the project admins, all projects inherit the default system scanner as their active scanner.","date":"2021-09-06T00:00:00Z","description":"","href":"https://container-registry.com/docs/administration-manual/scanners/","objectID":"522135246f895e36e5b76f77ed14a1a5_0","order":0,"tags":null,"title":"Vulnerability Scanners"},{"category":"User Manual","content":"Dedicated vs Individual Account Container Registry offers three types of pricing plans: individual; dedicated; custom/enterprise. The present documentation is mostly written with dedicated accounts in mind. We would like to explain the differences between the three. The table below summarizes critical distinctions. You can also refer to our pricing page. Position Individual Dedicated Custom Tenants 1 tenant Multitenancy Multitenancy Repositores Only private Private and public Private and public Domain c8n.io Subdomain on container-registry.com or custom domain Any Users 1 user Multiple users Mutliple users Storage 1 GB 100 GB Custom Multiregional High Availability Rollouts - - Yes Users, Teams, and RBAC Dedicated and custom enterprise accounts allow you to create user groups that enable fast collaboration on projects. These accounts also fully implement role-based access control allowing you to specify which user can do what. Storage Starting from a dedicated pricing plan, you have more control over the size of your registry storage. Dedicated accounts can obtain additional storage for a monthly fee. Custom enterprise accounts may be provisioned and operated by a selected cloud provider, thus giving their owners full control over their storage sizes. Customization With a dedicated account, you can use your company\u0026rsquo;s subdomain as your instance at Container Registry. For enterprise accounts, we offer a completely customized setup and configuration of the container registry making it a white label product. Additional Enterprise-Only Features With an enterprise account, you can minimize or eliminate any rollout-related downtimes with multi-regional HA rollouts. You also receive enterprise-level customer support. Pricing Individual accounts are completely free of charge. Dedicated accounts provide a free 14-day trial. Prices for custom solutions are calculated individually by our sales team.","date":"2021-08-13T00:00:00Z","description":"description_test","href":"https://container-registry.com/docs/user-manual/dedicated-vs-individual-account/","objectID":"80722198c7394618ee3300790e358830_0","order":0,"tags":null,"title":"Dedicated vs Individual Account"},{"category":"User Manual","content":"Double-Starred Patterns Some of the Container Registry GUI features allow you to use string matching instead of entering complete names of repositories or tags. That comes in handy if you create separate repositories or tags for every stage in the software development lifecycle and follow a naming convention. In this case, you can select more than one repository or tag by typing in only the pattern once instead of listing all their names. The star or asterisk symbol helps you to compile such patterns. Double Star In Harbor, and, consequently, Container Registry, you can use a double star/asterisk to do the following: specify that you want to select all names by using the ** without any other characters; for instance, to select all repositories in the tag retention rule dialogue window: specify a part of the name that is the same for all items; for instance, to select all repositories that have \u0026ldquo;release\u0026rdquo; in the middle of the name, use: *release* Single Star You can also use only one star/asterisk to specify a string that is either the beginning or the end of a name. Pattern Stands at the Beginning For instance, to select all repositories that start with \u0026ldquo;release\u0026rdquo;, use: release* The star at the end will identify that something is going to come after the pattern. Pattern Stands at the End On the contrary, to select all repositories that end with \u0026ldquo;release\u0026rdquo;, use: *release with the matching pattern at the end and the star/asterisk at the beginning showing that something comes before the pattern. INFO Please keep in mind that the single asterisk will stop pattern matching as soon as it stumbles across a separator /. If you need to match any patterns that have separators, typically, a file or repository path, or a complex artifact tag, include the separators into the pattern: release*/test*/** It will match with: release_2021/test_new/1.0","date":"2021-08-13T00:00:00Z","description":"","href":"https://container-registry.com/docs/user-manual/double-starred-patterns/","objectID":"28de6696e91de29259a1e6822829f9d0_0","order":0,"tags":null,"title":"Double-Starred Patterns"},{"category":"Administration Manual","content":"Terminal Deletion of Images: Garbage Collection A simple delete operation is not enough to remove images – to be precise, their blob files – from the system. When you use a delete button on the artifacts overview page inside a repository, it simply deletes the corresponding item from the GUI. It means that simple deletion does not clean up your storage, and you may be hitting your project quotas even if you do not see a lot of artifacts in there. To remove blob files from the system and make some space in your repository, you need to perform an operation known as garbage collection. To access it: Expand Administration in the navigation tab; Click Garbage Collection. Handling Untagged Artifacts When you remove a tag from the image, you hide a layer associated with the tag from the Container Registry GUI. The result of the untagging is equal to deletion and, as in the case of deleting an artifact, it does not remove the blob from the system. Independently of the method you select for garbage collection, make sure to use the slider to specify if you want to include untagged artifacts in the ultimate deletion: Handling Images That Are Still Uploading Since some images may take time to upload, there is a mechanism to prevent them from unintentional removal. Any garbage collection operation (including the dry run) only covers images that were not uploaded within the previous two hours. Garbage Collection Dry Run Garbage collection takes some time and computing capacity. Besides, since some blob files may be shared between artifacts with identical layers, this operation brings some complexity with it. As a result, a running garbage collection may prevent users from working with your repository normally. For this reason and to avoid losing data that you may still need, we recommend performing a test execution first: a dry run. Use the Dry Run button to initiate it and wait for the results to appear; Access Garbage Collecting Log Data Go to the History tab; Find the dry run job that you started; Click on the Log icon; The log data will be displayed in a new browser window; it will list artifact trash candidates and provide a recommendation for whether or not to run a garbage collection. 2021-09-08T15:50:18Z [INFO] [/jobservice/job/impl/gc/garbage_collection.go:145]: Garbage Collection parameters: [delete_untagged: false, dry_run: true, time_window: 2] 2021-09-08T15:50:18Z [INFO] [/jobservice/job/impl/gc/garbage_collection.go:155]: start to run gc in job. 2021-09-08T15:50:18Z [INFO] [/jobservice/job/impl/gc/garbage_collection.go:411]: artifact trash candidates. 2021-09-08T15:50:18Z [INFO] [/jobservice/job/impl/gc/garbage_collection.go:413]: ID-1 MediaType-application/vnd.docker.container.image.v1+json ManifestMediaType-application/vnd.docker.distribution.manifest.v2+json RepositoryName-library/gc_test Digest-sha256:1b26826f602946860c279fce658f31050cff2c596583af237d971f4629b57792 CreationTime-2021-09-08 15:50:13 2021-09-08T15:50:18Z [INFO] [/jobservice/job/impl/gc/garbage_collection.go:203]: no need to execute GC as there is no non referenced artifacts. 2021-09-08T15:50:18Z [INFO] [/jobservice/job/impl/gc/garbage_collection.go:174]: success to run gc in job. You can also see how much space will be freed after the execution. Run Garbage Collection Use the GC Now button to run a real garbage collection. You can access the History tab to monitor the execution and then look into the log file when the job is finished. Schedule Garbage Collection To schedule a garbage collection: Click on Edit next to Schedule to GC; Select a schedule or type in a CRON-formatted schedule; Hit Save.","date":"2021-09-08T00:00:00Z","description":"","href":"https://container-registry.com/docs/administration-manual/terminal-deletion-of-images/","objectID":"5a7f60a6f23d41822520c4e6905e7c11_0","order":0,"tags":null,"title":"Terminal Deletion of Images"},{"category":"Administration Manual","content":"Other System Settings Under Administration -\u0026gt; Configuration -\u0026gt; System Settings you will find a few more system-wide settings. Project Authorship In the dropdown Project Creation, you can specify who can create new projects in your instance. You have a choice between system admins and all other users. Token Expiration You need a token every time you want to login into your private registry from Docker. You can specify how many minutes it is valid. Robot Name Prefix As described here. Robot Token Expiration As explained here. Make Repositories Read-Only If you enable this feature, all users will only be able to pull images. Independent of their permissions, none will be able to push images, tag images, and delete repositories. Deployment Security As explained here. Enable Webhooks As a system admin, you must enable webhooks so that project admins can add webhooks to their projects.","date":"2021-09-09T00:00:00Z","description":"","href":"https://container-registry.com/docs/administration-manual/other-system-settings/","objectID":"336b1d60bfb6975c1b39e5ead6678f09_0","order":0,"tags":null,"title":"Other System Settings"},{"category":"Administration Manual","content":"Proxy Cache Projects Why Use Container Registry as a Proxy Cache Container Registry can be used as a proxy cache for images originally stored on Docker Hub. There are a few reasons why you would avoid pulling images from Docker Hub directly. Docker Rate Limit Docker Hub has a download limit rate which is defined differently for different subscription plans. In our blog post, we explain why you can hit the limits quite quickly and which consequences it may have for your workflows. One of the main reasons why your rate limit may get exhausted is that you often make duplicate (triplicate, etc.) pull requests. A proxy cache prevents duplicate requests. It caches an image that was already pulled and allows you to pull it again from its \u0026ldquo;cache memory\u0026rdquo; without sending the actual pull request to Docker Hub. Nevertheless, you can be sure that you get the latest image version. The proxy accessed the canonical repository and checks if there are newer layers. If yes, then it will pull them, meaning that this request will contribute to the exhaustion of your limit. INFO To explain it in a different way: pulling an image from Docker Hub means sending a GET request, whereas the proxy only sends a HEAD request which does not count into the rate limit exhaustion. Less Bandwidth and no Throttling Sending too many pull requests may eat into your own bandwidth and slow down your network, as well as lead to your being throttled by the server that hosts the original registry. Have Better Control and Enjoy Better Security By using Container Registry, you avoid putting all eggs in one basket: fetching all your images from one place. The opposite situation may make you subject to outages and other failures. Overcome Outages and Air Gaps An outage means that you are left without Internet access. But sometimes your access is restricted permanently. To overcome this, you can use proxy cache: it will access the canonical repository for you and supply you with the images you need. Your own machine remains disconnected from vulnerable public networks. Important Prerequisites Project admins cannot create proxy projects. You have to be a system admin. Apart from this, you will need to create an endpoint as explained here before. This section also provides information about supported third-party solutions. Create a New Proxy Cache Project In the navigation, click on Projects and then on + New Project. In the open dialogue window, use the Proxy Cache slider to make this project a proxy cache. Select the endpoint from the dropdown. To Make Your Proxy Cache Project Work You are just one more step away from using your new proxy cache. Edit your docker pull commands: replace canonical registry and project with the proxy project. Optionally, re-configure your pod manifests in a similar manner. The last two actions are necessary to pull images from the proxy and not directly from the canonical registry. WARNING Remember that proxy cache projects are only for pulling images. By granting users access to a proxy cache project, you automatically grant them access to the canonical registry, and they can pull any images from there. Retention Rules for Proxy-Cached Images Contrary to other solutions, Container Registry won\u0026rsquo;t create any retention rules for your proxy cache projects automatically. It means that not only the latest but all images will be kept. If you want unused images to be deleted from time to time, you can create retention rules as described here.","date":"2021-09-30T00:00:00Z","description":"","href":"https://container-registry.com/docs/administration-manual/proxy-cache-projects/","objectID":"7215fd4df4997a88164f9a8156bf73ba_0","order":0,"tags":null,"title":"Proxy Cache Projects"},{"category":"","content":"","date":"2021-03-27T12:11:51+02:00","description":"","href":"https://container-registry.com/docs/","objectID":"4cdd37113783e47641dd300543c94e1b_0","order":0,"tags":null,"title":"Container Registry Knowledge Base"},{"category":"User Guides","content":"Table of Contents The current chapter contains instructions for specific workflows, best practices, tips and tricks, and other useful information. OIDC Configuration for Google Workspaces","date":"2021-03-27T12:11:51+02:00","description":"","href":"https://container-registry.com/docs/user-guide/","objectID":"ecf7e357d2a131135219db95eddda49c_0","order":0,"tags":null,"title":"User Guides"}]