[{"category":"Administration Manual","content":"Database Authentication The database user authnetication mode is applied by default. With this mode, all user management happens in the Container Registry GUI and the data is stored in the local database. When selecting this authentication mode, keep in mind that once you added any users (except for yourself) to the instance using the database mode, the instance will be locked from switching to any other mode. Nonetheless, this mode has a few advantages. As a system admin, you can reset or change user passwords and enable self-registration to facilitate the onboarding process of a new users. Activate Database Authentication Mode In the navigation pane on the left, select Administration; Click on Configuration; Select Authentication tab; In Auth Mode, in the dropdown, select Database; Hit Save. Self-Registration You can allow users to sign up for an account in your instance by activating the self-registration feature: In this case, when users access the URL of your instance, they see the Sign up for an account link. If they click on the link, they will be shown a registration form where they can create their user name. Once a new user filled in and submitted the signup form, this user is added to the instance automatically and appears immediately in the list of users.","date":"2021-08-18T00:00:00Z","description":"","href":"https://container-registry.com/docs/administration-manual/authentication/database-authentication/","objectID":"ed5bde98367c62b5f085437e50f2a8d9_0","order":0,"tags":null,"title":"Database Authentication"},{"category":"User Manual","content":"Table of Contents The current chapter provides general guidelines for users that work with images and helm charts. DEDICATED VS INDIVIDUAL ACCOUNT Throughout this manual, we will often refer to projects, a project administrator role, and permission rights level necessary to perform certain actions. This is only relevant for dedicated accounts since each organization with this type of account can have multiple users and organize repositories into projects. If you have an individual account, your permission level is always sufficient for any kind of an operation since you are a system and project administrator at the same time. When you read about something related to projects, please consider your account as a project. Read more about the differences between dedicated and individual accounts in this article. Why Use Container Registry as a Service What Is Harbor Container Registry User Interface: A Short Overview Working With Projects Repositories Managing Project Users Project Configuration Preheat Images Robot Accounts Webhooks Working With Artifacts Push and Pull Images Artifact Page Working With Tags Tag Policies Tag Retention Tag Immutability Working With Logs Dedicated vs Individual Account Double-Starred Patterns","date":"2021-08-13T00:00:00Z","description":"description_test","href":"https://container-registry.com/docs/user-manual/","objectID":"50e921a7f98d7d8805f5b0dd1d77c3ff_0","order":0,"tags":null,"title":"User Manual"},{"category":"Getting Started Guide","content":"Getting Started If you want to start using Container Registry in a few simple steps, please check the instructions in this chapter. They will help you to get quickly to the point. These tutorials describe registration process and how to push and pull images and provide a short overview of the features. Here is a breakdown of the Table of contents. Feel free to access the individual sections by clicking on the titles in the left sidebar. Prerequisites Register in Your Instance Push and Pull Images Other Useful Features","date":"2021-08-09T00:00:00Z","description":"","href":"https://container-registry.com/docs/getting-started-guide/","objectID":"7659d80287131c0137b04dfd52d360ca_0","order":0,"tags":null,"title":"Getting Started Guide"},{"category":"User Manual","content":"Preheat Images: P2P Preheat Policies Introduction to P2P Preheat: How It Works Peer-to-peer (or P2P) networks are file sharing systems that do not involve a server. A peer is a computer in such a network. A seeder provides files for a leecher. The seeder uploads and the leecher downloads them. These two operations happen simulteneously, and the files go directly from one peer to the other. Although there is no server, there is a managing software that coordinates uploads and downloads and keeps a record of which files are available for download and from which seeder. This service is also announces - or preheats - the arrival of new files, in this case, new Docker images. The P2P software may run on a server but it won\u0026rsquo;t upload any files on it. In Container Registry, you can configure P2P preheat by specifying which images should be preheated and with what reguylarity this should happen. These rules are called P2P preheat policies. They will put certain images on a candidate list: a list of potential seeders. When a leecher will request an image, the P2P software will go through the suitable images and help the leecher in downloading the first available image on the candidate list. Harbor has integrations with the two most popular providers of P2P service: Dragonfly and Kraken. Prerequisites P2P preheat provider instances must be enabled at the system-level by your system administrator as described here. Create a New P2P Preheat Policy Inside a project, go to P2P Preheat tab; Click + NEW POLICY; Fill in the mask: Select an instance from the list of available instances; Give your policy a name and description; Create Filters; Add Triggers. Filters for P2P Preheating You can set which images should be announced on the network by using: repository names; image tags; image labels. Filter by Repository To select all repositories in the project, enter a double start/asterisk (**); The same effect will be achieved if you type the project name with only one star at the end: project*; To select certain repositories, type in a repository name with a star at the end of it; To enter multiple repositories, separate the entries with commas: test*, test_slack*. Filter by Tags To select all tags in the project, enter a double start/asterisk (**); To select tags matching a string pattern use this method; To enter multiple tags, separate the entries with commas: test*, test_slack*. Filter by Labels To filter by labels, you need to put their complete names. To use more than one label, separate them by comma. NOTE If you put more than one labels into your preheat policy, only the images that have all these labels will be preheated. Triggers for P2P Preheating Even if you set the filters, the preheat will only happen if a trigger fires. You can set the type of such trigger for each preheat policy. The first two are disconnected from the events occuring in your project. The third one is bound to such events. Manual Preheat trigger It is not an actual trigger, you will need to execute the policy manually every time you need to run a preheat. To do this, after creating the policy, still in the P2P Preheat tab Select a policy; Click Action; Click Execute. Scheduled Preheat Regardless of whether new images were pushed or not, they will be preheated only when this is not yet the time for it; it only happenes upon the set schedule; * You can select between a simple schedule, based on a time interval, or create your custom schedule using [CRON format](cron format) Hover over the i icon to display our CRON cheatsheet. Event-Based Preheat Trigger If you select this type of trigger, the policy will be executed every time one of the following happens to an artifact/image: An Artifact is pushed; An Artifact is labeled but not when a label is removed; An Artifact is scanned but not when the scan failed.","date":"2021-08-06T12:11:51+02:00","description":"","href":"https://container-registry.com/docs/user-manual/projects/configuration/preheat-images/","objectID":"6c68ab4bb2ce7c4f28e2aa236c967343_0","order":0,"tags":null,"title":"Preheat Images"},{"category":"User Manual","content":"Robot Accounts Robot accounts are used to access your project through an API. They perform a limited range of actions that you can specify per account and are generally used for workflow, deployment, and testing automation. Robot accounts created on the project level can access only one project. They cannot be transferred to other projects. To create robots that have access to multiple projects, create system robot accounts as explained here. Overview of Existing Robot Accounts Inside a project, under the Robot Accounts tab, you will find a list of the robot accounts associated with the project. For each robot account, you can see its: name; enabled state; permissions; created time; expiration date if any; description. Robot Account Name The robot account name is used to log in to an external client as a user name. It\u0026rsquo;s built following this naming convention: **robot_**: permanent part for all robot accounts; project name; the + sign; the variable name that you can specify for this particular robot. Robot Account Secret Robot accounts use a CLI secret to log in to external clients. This secret is generated and displayed once on creation of the account but is not stored anywhere in the project or instance. However, it can be resetted later to generate a new secret. Docker Login With Robot Account Below is an example of how to log in with a robot account in Docker: docker login your-subdomain.container-registry.com -u robot_project_name+robot_variable_name -p 3xiYiY9eaenXDhZHj8k7WGcF5IfSSGVk Robot Account Permissions Upon creation, you can grant the new account all or a few selected permissions: Push artifacts Pull artifacts Delete artifacts Read Helm charts Create a Helm chart version Delete a Helm chart version Create a tag Delete a tag Create artifact labels Create a scan Create a Robot Account Use + NEW ROBOT ACCOUNT to add a new one: Specify its variable name; Set when it should expire: after how many days; or never; Check the permissions you need (by default, all of them are selected); Save it and then make sure that you save the token/CLI secret using one of the methods: copy the token into clipboard with the copy icon and paste it into some text editor (1); EXPORT TO FILE to export it as a JSON file(2). The JSON file looks like the following: { \u0026#34;creation_time\u0026#34;:\u0026#34;2021-08-04T13:58:45.934Z\u0026#34;, \u0026#34;expires_at\u0026#34;:1628949525, \u0026#34;id\u0026#34;:1, \u0026#34;name\u0026#34;:\u0026#34;robot_documentation+test\u0026#34;, \u0026#34;secret\u0026#34;:\u0026#34;D4pGyGP3eFaW8Ako4249kSNCtZ0McxgV\u0026#34; } exprires_at is shown as Unix Epoch. When it is set to never, it shows -1: { \u0026#34;creation_time\u0026#34;:\u0026#34;2021-08-04T14:17:44.764Z\u0026#34;, \u0026#34;expires_at\u0026#34;:-1, \u0026#34;id\u0026#34;:2, \u0026#34;name\u0026#34;:\u0026#34;robot_documentation+test2\u0026#34;, \u0026#34;secret\u0026#34;:\u0026#34;3xiYiY9eaenXDhZHj8k7WGcF5IfSSGVk\u0026#34; } The id in the JSON file reflects a simple sequential numbering of all robot accounts that have ever been created in the instance. Refresh Or Specify Own Secret If you lost the CLI secret (token) for a robot account or you want to specify it by yourself, you can do the following: Select the robot with a checkbox; Go to Actions; Select Refresh robot secret. This will open the following dialogue window. By default, without enabling a manual secret, you can generate a new one by clicking on Refresh: You will see the same dialogue window that was displayed upon creation of the robot account, with the copy to clipboard and export to file options for saving the new token. It won\u0026rsquo;t be possible to retrieve the new secret later. Specify the New Secret Manually If you enable this feature, you can enter your own secret. It should be: between 8 and 20 characters long; the combination of: at least 1 uppercase, at least 1 lowercase; at least 1 number Enable and Disable Robot Accounts Every newly created robot account is enabled by default. You can disable robot accounts. They will stay in the project and can be re-enabled again at any time. It is not possible to change enable status for more than one robot at once; you have to repeat the procedure for every account. Select the robot with a checkbox; Go to Actions; Click Disable/Enable. Edit or Delete Robot Accounts To edit the data that you entered during account creation or to delete one or a few robots: Select the robot with a checkbox (it is not possible to edit them in bulks); Go to Actions; Click Edit or Delete. Change Robot Account Permissions The Edit will open the dialogue window where you can also change permissions.","date":"2021-08-04T12:11:51+02:00","description":"","href":"https://container-registry.com/docs/user-manual/projects/configuration/robot-accounts/","objectID":"5178bd29379b88948070e2d625baa8b7_0","order":0,"tags":null,"title":"Robot Accounts"},{"category":"User Manual","content":"Repositories Repositories can be described as folders within one project. If a project is a storage for images involved in the same application, the repositories can be a method to sort these images depending on the application feature, stage in the development life cycle, or any other factor. Browse and Filter Repositories Inside every project, you will see the list of all its repositories. Similarly to filtering and searching through projects, you can use a search field to find a repository by its name: Create a Repository New repositories can only be created using the command line tool. When you tag an image before pushing it into your project on Container Registry, the first part of the tag is the repository: docker tag hello-world your-subdomain.container-registry.com/library/repository:tag Read more about tagging and pushing images in this tutorial. Refresh Repositories List When you push an image to a new repository and have the project page open in your browser at the same time, you need to refresh the view to see the newly created repository: Change View You can switch between the default list view and card view: The view wil be resetted to the default list view every time you leave the project page. Delete a Repository Deleting a repository can only be done from the GUI. In the List View Select repositories you want to delete or select all by checking the tickbox in the upper left corner of the table. Click the Delete button NOTE When you deleted a repository but then push the image tagged with it once again, the same repository will be created anew. To be able to delete only certain repositories in bulks, you can first filter them and then use the checkbox to select all repositories in the result list. In the Card View In the card view, the Delete button is hidden under Actions: Push Command Inside the project, you will find push command templates that help you to tag and push images and Helm charts and push CNABs. Inside a Repository Inside the repository, you can see a list of different artifacts – images, OCI indexes, and helm charts – and some general information about them. Repository Description You can provide your repository with a description in plain text or Markdown format. Inside the repository, go to the Info section: The Markdown format will create a well structured description of your repository. Managing Artifacts Refer to this guide to learn about managing artifacts (images, Helm charts, and tags) in your repository.","date":"2021-08-03T12:11:51+02:00","description":"","href":"https://container-registry.com/docs/user-manual/projects/repositories/","objectID":"f76c1c66f68421d986b43a00196ef85d_0","order":0,"tags":null,"title":"Repositories"},{"category":"Getting Started Guide","content":"Prerequisites The only prerequisite for you is to install Docker. Check the system and hardware requirements for Docker in its official documentation and follow the instructions to get it running on your machine.","date":"2021-07-23T12:11:51+02:00","description":"","href":"https://container-registry.com/docs/getting-started-guide/prerequisites/","objectID":"4a7ac3c25523c387f4947978f8e3bcfd_0","order":0,"tags":null,"title":"Prerequisites"},{"category":"User Manual","content":"Why Use Container Registry as a Service Container registries are storages for your container images. It is a great supplementary service for containerization technology that saves you a lot of headaches when you run Kubernetes clusters to test and deploy your containerized applications. Why Use a Container Registry When you work with Kubernetes deployments, you face the chicken-egg dilemma: you cannot keep the images in the cluster but you need them to run it. A container registry keeps all your images that you pull into a Kubernetes cluster when you start it. But Container Registry is even more than that: it is a SaaS platform that helps you to manage your Docker images. Challenges There are a few challenges associated with managing your container images. You need to pull container images quickly. You do not want to pay a lot for Kubernetes incoming traffic. Since the traffic might go from one cluster into the other, this might result in additional costs. You need to protect certain images from unauthorized access. You want to avoid bugs and data breaches that can spread between containers since they are built upon each other. If one Docker container has security issues in the source code, all the images built from it, will inherit these issues. You want a better structure of your image storage. You do not want to throw them all untagged into the same repository without a chance to find anything inside it later. Solution Consequently, you get enough reasons for using Container Registry: a container registry service that solves all of these problems. You need a solution that can be managed through API and robot accounts (integration users). The images pushed to Container Registry are compressed and do not require so much storage space. Besides, you can control the size of your storage to avoid cost explosion. You can create users with different roles and permissions deriving from their roles. You can run vulnerability checks using different providers. More than one developer may be working on an image and some imperfections may always slip your team\u0026rsquo;s attention. It is important not to let the other images inherit it and ruin your deployments. You can organize your images into projects, as well as tag, and labels them. For projects, you get log data that tracks the history of everything that happened in the project. Apart from this, Container Registry provides a simple graphical user interface. Although pushing images requires you to use a command line tool, all other actions can be done with a mouse click. Why Use Container Registry as a Service With our service, you have the latest Harbor technology but do not have to install it by yourself. You only need to log in to your account using a browser. That means that you can access your registry from everywhere. Besides, we fixed quite a few of Harbor\u0026rsquo;s and Docker Hub\u0026rsquo;s issues and offer much better image scanners and other security features.","date":"2021-03-27T12:11:51+02:00","description":"","href":"https://container-registry.com/docs/user-manual/why-use-container-registry/","objectID":"7cc66c81d3ca6b57e8358749b925b2b9_0","order":0,"tags":null,"title":"Why Use Container Registry"},{"category":"Administration Manual","content":"Registration for System Admins: Create a New Instance All accounts with a Dedicated Service subscription can have multiple users. For the first time, the system administrator must complete the subscription purchase and configure the instance to enable other users to work with it later. Users of Individual accounts are considered system admins of their accounts. The registration is the same. To start working with Container Registry: Go to our pricing page; Select your subscription or start a free trial; Fill in the form and provide your credit card details; Check your emails: you must have received a confirmation that your account has been created; Inside the email, click on password to display your password; you will be re-directed to a single use secure URL generated by OneTimeSecret where you can see your password for the Container Registry account; NOTE The password will be kept by OneTimeSecret for a while but try to finish the registration within a few hours. The same email will contain a subdomain that was automatically generated for your instance; click on it to go to your account; Use admin as your user name and the password kept in OneTimeSecret as your password.","date":"2021-08-18T00:00:00Z","description":"","href":"https://container-registry.com/docs/administration-manual/registration-for-system-admins/","objectID":"5a91f757a9ffd1569a35c13f79e90142_0","order":0,"tags":null,"title":"Registration for System Admins"},{"category":"Administration Manual","content":"UAA Authentication A user authentication and authorization server issues access tokens for your application to make it able to access another application: in this case, your Container Registry instance. You can configure a UAA server by yourself or select a provider that will set up for you a UAA instance. This instance will generate a token every time the user identity was confirmed – the user was authenticated – to enable user authorization that allows the user to perform certain actions in the system he was successfully logged in to. Most of the UAA providers work with either SAML 2.0, OAuth 2.0, or LDAP protocols. The setups may vary. Please refer to the official documentation of your selected provider. To configure the UAA authentication mode in Container registry, you will need: a UAA endpoint; a UAA client ID; a UAA client secret. Steps Go to the navigation pane on the left side of the GUI; Select Administration; Click on Configuration; Select Authentication tab; In Auth Mode, in the dropdown, select UAA; Fill in the form; Tick the checkbox if your endpoint has a trusted certificate; Click Save.","date":"2021-08-18T00:00:00Z","description":"","href":"https://container-registry.com/docs/administration-manual/authentication/uaa-authentication/","objectID":"942907f9031700add02a828de7cde273_0","order":0,"tags":null,"title":"UAA Authentication"},{"category":"User Manual","content":"Push and Pull Images Pushing and pulling images is explained in detail in this getting started guide.","date":"2021-08-13T00:00:00Z","description":"","href":"https://container-registry.com/docs/user-manual/images/push-and-pull-images/","objectID":"a309841863b58ed4653f01a171fed5f8_0","order":0,"tags":null,"title":"Push and Pull Images"},{"category":"User Manual","content":"Tag Retention Instead of deleting tags manually, you can set when they should \u0026ldquo;expire\u0026rdquo; by defining the tag retention. WARNING Once you set a retention rule, the artifacts that are not covered by it, will be deleted. However, the operation is conducted at the artifact level. Artifacts that have more than one tag will be retained even if not all their tags are covered by the retention policy. Create a New Tag Retention Policy Inside a project, go to the Policy tab (1); Switch to TAG RETENTION (2); Click ADD RULE (3); A dialogue window will appear: Select Repos To specify repositories where the policy should look for the tags to be retained: type certain repositories in separating them by commans or use a double- or single-starred pattern; select between matching and excluding from the dropdown to include or exclude specified repositories; Select Tag Age or Number To specify how artifacts should be selected for retention, use one of the following options from the second dropdown: to refer to the number of artifacts stored in a repo: select retain the most recently pushed # artifacts and type in the number of artifacts to be retained in the COUNT field; select retain the most recently pulled # artifacts and type in the number of artifacts to be retained in the COUNT field; to refer to the artifacts \u0026ldquo;age\u0026rdquo;: select retain the artifacts pushed within the last # days and fill in the DAYS field; select retain the artifacts pulled within the last # days and fill in the DAYS field; select retain always will keep the artifacts and tags forever. Select Tags by Name To specify the tags to be retained: type in certain tags separated by commas or use a double- or single-starred pattern; select between matching and excluding to include or exclude selected tags; check untagged artifacts if you want to include artifacts that have no tag. Manage Tag Retention Rules You can edit, disable/enable, and delete a tag retention rule using the Action button next to each rule. Disabled rules will be marked with a red exclamation mark. Run Retention Rules Retention rules do nothing until they are run proactively. Indeed, it means that no tags or artifacts are deleted before you run a retention rule. You can do it either manually or create a schedule for it. Run the Retention Manually If you want the retention to take an effect immediately, you can use the RUN NOW (1) button. But, before doing this, we highly recommend using DRY RUN (2) which only simulates the retention policy execution and provides a log (4) describing once again which artifacts and tags are to be deleted or retained. Use ABORT (3) to stop an execution. Example of the log data: 2021-08-12T14:27:34Z [INFO] [/pkg/retention/job.go:83]: Run retention process. Repository: library/test Rule Algorithm: or Dry Run: true 2021-08-12T14:27:34Z [INFO] [/pkg/retention/job.go:98]: Load 2 candidates from repository library/test 2021-08-12T14:27:34Z [INFO] [/pkg/retention/job.go:201]: | Digest | Tag | Kind | Labels | PushedTime | PulledTime | CreatedTime | Retention | |-------------------------------------------------------------------------|----------|-------|--------|---------------------|---------------------|---------------------|-----------| | sha256:1b26826f602946860c279fce658f31050cff2c596583af237d971f4629b57792 | 4.0,test | image | | 2021/08/12 14:26:29 | 2021/08/11 14:32:52 | 2021/08/11 08:30:49 | RETAIN | | sha256:1649f969e17dff21275d1e227581fd492c77c9d856f989c2a1188a5798f6dfd2 | 2.0,1.0 | image | | 2021/08/04 12:47:31 | 2021/08/11 14:32:53 | 2021/07/29 12:02:18 | DEL | Schedule the Execution of the Retention Rule To make the retention execution happen automatically and on a regular basis, you can create a schedule for the policy to run. Go to the Schedule; Click EDIT; Select a schedule from the dropdown; If you select CRON, you need to create specify the frequency using the online CRON formatter (copy and paste the value from it); Alternatively, consult our short knowledge article by clicking on the i icon and create the schedule by yourself.","date":"2021-08-13T00:00:00Z","description":"","href":"https://container-registry.com/docs/user-manual/images/tags/tag-retention/","objectID":"98755519e4e51c05422526d0c350fc3e_0","order":0,"tags":null,"title":"Tag Retention"},{"category":"User Manual","content":"Artifact Page When you click on a single artifact, you will be redirected to a view showing detailed information about this artifact. In this view, you can also perform a few additional actions on the selected artifact. Tags Overview Working with tags is described in detail in another tutorial since the features for doing this are distributed across the GUI. The current section explains general GUI features that are available in the single artifact view. The Tags overview table shows all tags assigned to an image. It contains the following columns: Checkboxes allow you to bulk-edit tags, for instance, add new tags or remove existing ones. Name shows the actual tag without the repository path. Pull Command allows you to copy into clipboard the command string that will pull the image with this particular tag. An example: docker pull your-subdomain.container-registry.com/project/repository[:TAG] Signed shows if the image was signed. Pull Time and Push Time show when the image was pulled or pushed for the last time. General Information The next section – Overview, can be expanded or collapsed – shows general information about: the CPU architecture the image was built for; the author nickname; a local path to the configuration file; when the image was created locally (for instance, downloaded from a GitHub repository to the local machine from which it was later pushed to the repository); for which operating system it was built. Additions Vulnerabilities If the image has been scanned and any vulnerabilities were detected, this section will display a detailed report about them. Each vulnerability has a CVE identifier. CVE means Common Vulnerabilities and Exposures. The CVE lists are maintained by the MITRE Corporation, a subsidiary of the US Department of Homeland Security. Each identifier has a year and a sequential number, for instance: CVE-2021-3449 In the Vulnerabilities table, you can click on the arrow next to the identifier to read the description of the vulnerability. The description is identical to that in the official CVE database. It helps you to learn about the origins of vulnerability and its possible consequences. Furthermore, you can click on the i icon twice to retrieve a list of the resources where you can get some additional information about this vulnerability. In the Severity column, you can see the severity level of the vulnerability. The levels are calculated using this methodology proposed by the National Institute of Standards and Technology of the US Department of Commerce. The Package column shows which package (of a programming language) causes this vulnerability. The Current version column shows which version of an operating system is affected by this vulnerability, whereas Fixed in version column shows which version (and higher) of the operating system is free from the problem. You can perform a new scan on the image using the Scan button to refresh the list of vulnerabilities if you have at least project administrator privileges. Build History If you are the person who worked with the image before pushing it to the repository, the history of your changes is retrievable locally using this command: docker image history [IMAGE] In Container Registry, you can see the same history in the Build History section. It may be useful if you want to locate the origin of the source code and track other changes.","date":"2021-08-12T00:00:00Z","description":"","href":"https://container-registry.com/docs/user-manual/images/artifact-page/","objectID":"6f0fdf501dd7338001db6350ff053a68_0","order":0,"tags":null,"title":"Artifact Page"},{"category":"User Manual","content":"Managing Project Users The user that created a project and the super admin of the instance can add users to projects to enable them to perform different actions. As we mentioned in the previous article, it is possible to pull images from a public repository without being a project member. But a membership grants users other rights depending on the role they are assigned. Project Member Permissions Below is the overview of all project permissions by five types of roles: Action Limited Guest Guest Developer Master Project Admin System Administrator See the project configurations ✓ ✓ ✓ ✓ ✓ ✓ Edit the project configurations ✓ ✓ See a list of project members ✓ ✓ ✓ ✓ ✓ Create/edit/delete project members ✓ ✓ See a list of project logs ✓ ✓ ✓ ✓ ✓ See a list of project replications ✓ ✓ ✓ See a list of project replication jobs ✓ ✓ See a list of project labels ✓ ✓ ✓ Create/edit/delete project labels ✓ ✓ ✓ See a list of repositories ✓ ✓ ✓ ✓ ✓ ✓ Create repositories ✓ ✓ ✓ ✓ Edit/delete repositories ✓ ✓ ✓ See a list of images ✓ ✓ ✓ ✓ ✓ ✓ Retag image ✓ ✓ ✓ ✓ ✓ Pull image ✓ ✓ ✓ ✓ ✓ ✓ Push image ✓ ✓ ✓ ✓ Scan/delete image ✓ ✓ ✓ Add scanners to Harbor ✓ Edit scanners in projects ✓ ✓ See a list of image vulnerabilities ✓ ✓ ✓ ✓ ✓ ✓ See image build history ✓ ✓ ✓ ✓ ✓ ✓ Add/Remove labels of image ✓ ✓ ✓ ✓ See a list of helm charts ✓ ✓ ✓ ✓ ✓ ✓ Download helm charts ✓ ✓ ✓ ✓ ✓ ✓ Upload helm charts ✓ ✓ ✓ ✓ Delete helm charts ✓ ✓ ✓ See a list of helm chart versions ✓ ✓ ✓ ✓ ✓ ✓ Download helm chart versions ✓ ✓ ✓ ✓ ✓ ✓ Upload helm chart versions ✓ ✓ ✓ ✓ Delete helm chart versions ✓ ✓ ✓ Add/Remove labels of helm chart version ✓ ✓ ✓ ✓ See a list of project robots ✓ ✓ ✓ Create/edit/delete project robots ✓ ✓ See configured CVE whitelist ✓ ✓ ✓ ✓ ✓ ✓ Create/edit/remove CVE whitelist ✓ ✓ Enable/disable webhooks ✓ ✓ ✓ ✓ Create/delete tag retention rules ✓ ✓ ✓ ✓ Enable/disable tag retention rules ✓ ✓ ✓ ✓ Create/delete tag immutability rules ✓ ✓ ✓ Enable/disable tag immutability rules ✓ ✓ ✓ See project quotas ✓ ✓ ✓ ✓ ✓ ✓ Edit project quotas ✓ The matrix applies to the users that are registered in the instance. Unregistered anonymous users can access public projects in the read-only mode and pull any images from such projects and for both types of projects. Adding Project Members By default, any new project has no users except the project admin that created it. Super admins can access projects that they are not members of. To enable your collaborators to work on the project, you need to add them. There are two methods for doing this. An important prerequisite is that they must be users of the same instance. If they are not, refer to this article to add users to the instance. Regardless of the method you want to use for adding project members: Go to the Projects section in the navigation pane; Open the project in detailed view; Go to the Members tab. Adding Users One by One If you want to add single users, use + User button. Start typing in the name and a dropdown with a few suggestions will appear. By default, every new user is granted the project admin role, thus, acquiring the same rights as the project creator has. Remember to change this, if you want to restrict the permissions level. Adding LDAP/AP User Groups Prerequisites This method is available for instances using LDAP/AD authentication. Read about configuring this method of authentication here. Another important Prerequisite is that you must enable the memberof feature on the LDAP/AD server. It is explained in the same guide mentioned above, as well as in this external technical note. Eventually, you need to create user groups on your LADP/AD server since, with this authentication method, the super admins cannot manage users inside the Container Registry interface. Steps Click + Group button; Select a user group: If you use the group option for the first time, and do not have any user groups in your Container Registry yet, select Add a group from LDAP to project member. Enter the LDAP Group DN; Optionally: give your group a catchy name. If you already used some LDAP/AD groups, select Add an existing user group to project members and start typing the name of the group. Assign a role to the new project group. The corresponding permissions will be granted to all users in this group. Adding OIDC User Groups Prerequisites This method is available for instances using OIDC as authentication method. Read about configuring this method of authentication here. User groups must be created in the OIDC provider workspace. Steps Click + Group button; Type in the correct name of the group as it exists in the OIDC provider; Assign a project role to this group. The corresponding permissions will be granted to all users in this group. Deleting Users To delete one or a few users, click on the tickbox next to the user entry, then go to Actions and select Remove. Changing Project Role To change the project role for one or a few users, check the tickboxes next to their names, click Actions, and select a new role.","date":"2021-08-02T12:11:51+02:00","description":"Managing project membership","href":"https://container-registry.com/docs/user-manual/projects/managing-project-users/","objectID":"1f847759880c31287b6366930de41d4c_0","order":0,"tags":null,"title":"Managing Project Users"},{"category":"Getting Started Guide","content":"New User Sign Up Container Registry is a cloud-based solution that you can use in your browser. Your Instance on Container Registry All accounts with a Dedicated Service subscription receive a subdomain on container-registry.com. Your organization can also request a custom domain. Every subdomain/domain represents one instance. For different instances, you need different login credentials. Registration Methods As a user, you can use one of these methods to register in your Container Registry instance: Your account admin can create a user for you and send you the credentials. If the self-registration is enabled for the instance, then go to the subdomain/custom domain, and click on Sing up for an account, and fill in the form. If the OIDC login is enabled for the instance, go to the subdomain/custom domain, click on Login via OIDC provider, and use one of your federated identity profiles. The last two methods must be configured by your Container Registry administrator. If you are the administrator, please refer to this tutorial in our administrator guide.","date":"2021-07-23T12:11:51+02:00","description":"","href":"https://container-registry.com/docs/getting-started-guide/new-user-sign-up/","objectID":"33eb530bb48210b190977f985db76538_0","order":0,"tags":null,"title":"New User Sign Up"},{"category":"User Manual","content":"What Is Harbor? Our service is built upon Harbor. Harbor is an open-source technology for storing and managing container images. It was developed by VMware, a leading provider of virtual machines, and then transferred to the Cloud Native Computing Foundation (CNCF), one of the biggest open-source initiatives. In its turn, the Harbor project evolved out of Docker\u0026rsquo;s source code. Its contributors attempted to enhance the latter and eliminate its security problems. A lot of developers all over the world worked on both projects. This may have led to a certain inconsistency in the code. At Container Registry, we have been making our solution more secure than its ancestors. Harbor is cloud-native. Moreover, it does not only store images but can scan their contents for security issues. Harbor also allows developers to sign the images that they push to the registry with their personal keys, thus, marking the images as trustworthy. For more information on Harbor, visit the official Harbor project website.","date":"2021-07-23T12:11:51+02:00","description":"","href":"https://container-registry.com/docs/user-manual/what-is-harbor/","objectID":"bd26f537193b3a9a48f4907201c8496e_0","order":0,"tags":null,"title":"What Is Harbor?"},{"category":"Administration Manual","content":"LDAP/AD Authentication Every company needs a directory where all user login data is kept. There are two popular technologies for configuring and managing such directories – Windows Active Directory (AD) and Lightweight Directory Access Protocol – that are Harbor-compatible. It means that you can use an LDAP/AD server to add new users to the Container Registry instance and manage existing accounts on the server. Indeed, you need to set up and configure such a server before you can activate this kind of user authentication in Container Registry. How you do it, depends on your provider. You can look for instructions on the official website of the OpenLDAP project or in the Windows server official documentation. Limitations of LDAP/AD Authentication If you select this authentication mode, then, as a system admin, you will only be able to see a list of users in your Container Registry admin console but you won\u0026rsquo;t be able to perform any actions with them in the GUI, neither create and delete users nor change and reset their passwords. That all must be done on the LDAP or AD server. For the users, the self-registration option is not available in this mode (and you cannot enable it as an admin). Advantages of LDAP/AD Authentication If you already have an LDAP/AD server, you can onboard Container Registry users quicker. You can use the same LDAP/AD server to add and manage users of more than one Container Registry instance. You can create user groups and assign multiple users to projects in one leap. Enable LDAP/AD User Authentication Information You Need for Configuring LDAP/AD Authentication All entries in an LDAP directory are organized into a structure resembling roots of a tree or a reverted tree. There is a root node – the highest one in the structure – where a few brunches with more nodes originate; other nodes have own brunches, etc. Each entry – a node – has a unique identifying path, called a distinguished name or DN. Every time a user submits his credentials, a search is performed inside this structure to match the provided user credentials with an entry and authenticate the user. That\u0026rsquo;s why you need to keep at hand the following information about your LDAP server to configure it in Container Registry. LDAP Search DN. This node coincides with the user who has access to the LDAP server which is usually an admin. This parameter should be specified as cn=admin, dc=your-subdomain.container-registry.com where the attribute cn stands for \u0026ldquo;common name\u0026rdquo; and dc stands for \u0026ldquo;domain component\u0026rdquo;. LDAP Search Password. Consequently, here you need to enter the password of the user you specified in the previous parameter. LDAP Base DN. Theoretically, you may use your LDAP server not only for managing Container Registry but also for other applications. In this case, the tree would have nodes/entries that are irrelevant to Container Registry users. Thus, you need to specify a node where the search for the relevant entries should start. This is your subdomain or custom domain in our service. This parameter needs to be specified as dc=your-subdomain.container-registry.com. LDAP Scope. This parameter specifies the depth of the search in relation to the starting point: the previous parameter. You have a choice between the following values: Base: to search the entire tree; the base DN will be ignored; Subtree: to search the nodes below the starting point; OneLevel: to search the nodes on the same level as the start node. LDAP Filter. With this, you can narrow the search down to users or user groups. This will facilitate the search but, more importantly, restricts access to your Container Registry. You can use more than one attribute in the filter, as well as wildcards. A detailed tutorial on writing LDAP filters can be found here. LDAP UID. Every entry in the LDAP has multiple attributes. The LDAP UID parameter specifies which of the attributes must be used as a key to match the user credentials (of the user who tries to log in to the system) with the entries in the tree. Typically, either the uid or the cn attribute are used. Steps in the GUI In the navigation pane on the left, select Administration; Click on Configuration; Select Authentication tab; In Auth Mode, in the dropdown, select LDAP/AD; Fill in the form; Select if you want to use a server certificate or not by using a checkbox; TEST LDAP SERVER to ensure that you\u0026rsquo;ve entered correct parameters; If you see an affirmative message, hit Save. LDAP User Groups Optionally, you can create user groups to be able to assign users to projects in bulks in the Container Registry GUI. Since an LDAP directory is a tree-like structure, it\u0026rsquo;s naturally hierarchical. Groups are a way to put entities – in our case, users – together independently of that hierarchy. One user can be a member of more than one group. On the LDAP/AD server, you need to use the memberof attribute of the entries. If you are new to this technology, look into this tutorial that explains how to create groups on the LDAP server and add users into them. Once you created LDAP groups on the server, you have to configure group settings in the Container Registry GUI as well. You also cannot leave these settings empty if there are groups on your LDAP server. The parameters are similar to those in the general server configuration. LDAP Group Base DN. Like LDAP Search DN, it specifies a starting point in the tree structure of nodes/entries with user accounts and other records, with the only difference that this parameter may rather refer to a group or organizational unit name. For the latter, use the ou attribute. LDAP Group Filter. Like LDAP Filter, it limits the search to certain nodes. First of all, you need to specify that you want to search only within groups and not all other nodes. If you use OpenLDAP, the filter is objectclass=groupOfNames. If you use Active Directory, apply the objectclass=group filter. In addition to that,","date":"2021-08-19T00:00:00Z","description":"","href":"https://container-registry.com/docs/administration-manual/authentication/ldap/ad-authentication/","objectID":"500c07706a2a9b987e967f1c74040751_0","order":0,"tags":null,"title":"LDAP/AD Authentication"},{"category":"Administration Manual","content":"you can use other LDAP attributes to make your search more precise. LDAP Group GUID. This parameter specifies which attribute of a node is reserved for the name of the group. Typically, this would be cn. LDAP Group Admin DN. In this field, you can enter the distinguished name of an LDAP/AD group the members of which will all be granted system admin access rights for your Container Registry instance. LDAP Group Membership. This is also an attribute of a node but this attribute applies to the nodes holding user accounts. Thus, it specifies which attribute should the search look at to identify of which group the user is a member of. The default node attribute that identifies group membership is memberof. LDAP Scope. Identical to the LDAP Scope mentioned before but applies to the group nodes.","date":"2021-08-19T00:00:00Z","description":"","href":"https://container-registry.com/docs/administration-manual/authentication/ldap/ad-authentication/","objectID":"500c07706a2a9b987e967f1c74040751_1","order":1,"tags":null,"title":"LDAP/AD Authentication"},{"category":"Administration Manual","content":"Table of Contents The current chapter explains how to administer your Container Register system. An important prereqisite for using the features mentioned in is chapter is the system administrator role. System admins can see and access the Administration tab on the navigation pane on the left side which is invisible for other users. The administration manual includes the following articles: Register at Container Registry: Admin Registration Configure User Authentication [Database Authentication]() []","date":"2021-08-18T00:00:00Z","description":"","href":"https://container-registry.com/docs/administration-manual/","objectID":"3f9591e0a890413447ef93711c89353d_0","order":0,"tags":null,"title":"Administration Manual"},{"category":"Administration Manual","content":"Configure User Authentication Configuring user authentication can be accessed in the navigation pane -\u0026gt; Administration -\u0026gt; Configuration and then Authentication tab. Once you created your account as a system admin, you can choose between four methods of user authentication that will also specify how you add and manage users in your instance. The difference between the four methods is how identity management, user authentication, and authorization are performed: locally, using an external server, or an external provider. Identity management keeps user account data such as their user names and IDs; User authentication procedure proves the user identity; User authorization enables authenticated users to perform certain actions. Considering these differences, you can configure one of the following authentication modes: database mode: the user accounts are created and managed using the Container Registry GUI; authentication happens by comparing their credentials against the data in this local database; UAA mode: you will need an external user identity, authentication, and authorization provider or server; it will keep the user data, perform user authentication, and communicate the result of such authentication back to the Container Registry instance; LDAP/AP mode: you will need an external LDAP/AD server where the new user accounts will be created and managed and that will perform user authentication; OIDC mode: similarly to UAA, user accounts will be created and managed by a Single Sign-On provider, and this provider will perform user authentication. When you sign up for the first time as a system admin, the database mode is activated by default. Before you start adding new users in this mode, you can switch to a different one. Restrictions on Switching Between User Authentication Modes As you may know, generally, you can always migrate your user accounts from an LDAP/Active directory server to a OpenID provider. The steps depend on the latter. A few most popular OIDC providers, such as Google, Azure, etc, provide a tool for migrating user accounts and matching them with any existing records in their databases. Once you\u0026rsquo;ve done the migration, you can switch the user authentication mode in the Container Registry administration console. However, a similar switch between the internal database (database mode) and any other mode is not possible when you already have added users that are not system admins. Unfortunately, it is also not enough to remove all database-mode users before switching to a different mode. The reason is that, if it would have been possible, you would loose the track of the changes that the deleted users have done when they were active. Thus, in the background, the deleted users are only marked as inactive ones but remain in the database. To switch to a different mode, you will need to pull all your artifacts, save them locally, create a new instance, and then push them into it. It is also not possible to export or migrate user accounts from the Container Registry GUI.","date":"2021-08-18T00:00:00Z","description":"","href":"https://container-registry.com/docs/administration-manual/authentication/","objectID":"a2a9fba40fdd48ea01829409f8c44e2a_0","order":0,"tags":null,"title":"Configure User Authentication"},{"category":"User Manual","content":"Tag Immutability What Is Tag Immutability and Why You Need It Harbor, the technology behind Container Registry, cannot (yet) deal with the situation when more than one image has the same tag. When there is an image in the registry with a certain tag, and then another image with the same tag is pushed to it, the first image loses its tag. The second image, pushed later, retains the tag but only until the next image with the same tag is pushed. Thus, the very purpose of tags existence – helping to differentiate between images – becomes a bit meaningless since the images override each other. The reason behind this trouble is that, for now, Harbor cannot match tags and SHA256 hashes. Therefore, hashes remain the only reliable image reference. To rehabiliate the tags, Harbor allows you to specify tag immutability rules, although they must be set manually for each tag that can be a subject to repetition. The immutability won\u0026rsquo;t allow an image with the same tag to be pushed into the repository. To be more precise, the policy is about a pair of an artifact and its tag. NOTE If you add a tag into an immutability policy, you won\u0026rsquo;t be able to perform the following actions with this artifact from anywhere in the GUI or you command line tool: delete the tagged artifact completely; re-tag the artifact that is assigned the tag involved in the immutability policy; alter the tagged artifact through a replication from another target registry or in any other way. You still can perform any operations with other tags assigned to the same artifact, even though the tags are attached to the same SHA256 hash/digest. Create a Tag Immutability Policy Inside a project, go to the Policy tab; Switch to TAG IMMUTABILITY (2); Click ADD RULE (3); To select repositories and tags, specify matching patterns as explained here; Manage Immutability Policies You can edit, disable/enable, and delete a tag immutability rule using the Action button next to each rule. Disabled rules will be marked with a red exclamation mark.","date":"2021-08-13T00:00:00Z","description":"","href":"https://container-registry.com/docs/user-manual/images/tags/tag-immutability/","objectID":"ba4c6a11b181ace05476eddcb34b692e_0","order":0,"tags":null,"title":"Tag Immutability"},{"category":"User Manual","content":"Working With Tags Image tags have a function to those of the branch refs in Git: pointing to a state of the artifact at a specific time. Originally, the purpose of image tags was to differentiate between multiple versions of the same image. But more often than not different tags may refer to the same image. The tags come in handy when you want to pull and run an image. SHA256 hashes – the native identifiers of the Docker images and their versions – are difficult to read and impossible to memorize. Tags replace them in a way and help to spot the image you need quickly and refer to it in a more human way. Contrary to the labels, tags are not only visible inside your Container Registry project but they remain \u0026ldquo;attached\u0026rdquo; to the image after it is pulling from the repository and as long as they are not removed using the Container registry GUI or a command line tool. Managing Tags Overview of the Image Tags You can check which tags are assigned to an image using one of the methods: Inside the repository, in the artifacts list, hover over the entry in the Tags column to make the following popup message appear: In the artifact view, you can see all tags in the Tags table: Adding New Tags / Tagging Images You can add tags to image versions inside the Container Registry GUI. Since you are not building the image at this moment, the old tag and the new tag will refer to the same image. It may make sense, though, if you want to tag the latest image which has a default \u0026ldquo;latest\u0026rdquo; tag to make it more catchy and easy to find. In the artifact view, select the tags you want to use for the new tag using checkboxes; Click + ADD TAG and type in the new tag. NOTE If you try to tag an artifact with the tag that already exists in the same repository, the error message will appear and you will need to select another tag: Retagging Images Retagging images in the Container Registry GUI is different from adding tags since it copies the artifact into another repository and/or project. To retag an artifact: In the artifacts list inside the repository, select an artifact using the checkbox; Go to Actions; Click Copy; Specify the destination: Start typing the project name to retrieve a dropdown; Prerequisites In the source repository, you need at least guest access which is read access; in the target repository, you need at least developer access or above to have writer permissions. Removing Tags / Detagging Images NOTE Removing tags in the Container Registry GUI is different from removing tags using docker rmi command in a command line tool. Even if you remove all tags, the image – the artifact – won\u0026rsquo;t be deleted. To remove one or more tags: In the artifact view, tick the checkboxes of the tags you want to remove; Click REMOVE TAG; Confirm that you want them removed.","date":"2021-08-12T00:00:00Z","description":"","href":"https://container-registry.com/docs/user-manual/images/working-with-tags/","objectID":"e1d8ab7ab9d1ae19e1952a2010c42675_0","order":0,"tags":null,"title":"Working With Tags"},{"category":"User Manual","content":"Project Configuration For each project, you can configure a wide range of properties and features. We already touched on some of them in the general description, repositories section, and the section about project members. In addition to that, for each project, you can manage the following: helm charts; labels; scanners; P2P preheat policies; tag policies; robot accounts; webhooks; project type; deployment security; CVE allowlists. Labels and tags are explained in a separate chapter that deals with images in general. In this chapter, we will go through the rest. Prerequisites To change any of the project configurations, you need to have one of the roles: System administrator; Project administrator. Labels tab In addition to tags, you can create labels for images. Labels will only be visible for the users that can log in to the Container Registry GUI. Create a Lable Inside a project, go to the Labels tab; Click +NEW LABEL; Enter the label name; Select a color or enter a color hash; Enter a description. Edit or Delete Labels To edit or delete a label: Tick the checkbox next to it; Click on either Edit or Delete. You can delete more than label at once if you select a few of them. Scanner Tab In this tab, you can select the vulnerability scanner you want to use for the images in the project. Only one scanner can activate at the same time for a certain project. At the instance level, only superadmins can add scanners, enable them, and set default scanners. When a project is created, it inherits the instance\u0026rsquo;s default vulnerability scanner. To select another one, use Select Scanner button under the Scanner tab. This will open the list of enabled scanners where you can pick up the one you need for your project: Configuration Tab Some of the important properties and features can be found in the Configuration tab. Type of Project You can change the type of project after it has been created from private to public or the other way around. Deployment Security This configuration allows you to make your deployments more secure by limiting which images can be deployed. This can be done using two features. Content Trust When this feature is enabled, you can only deploy (pull) images that were signed following this procedure. After enabling this feature in the Container Registry GUI, you can still push unsigned images into your project. But since none can pull them, it makes sense to start pushing only signed images. Look into this section to learn about implementing content trust in Docker. Prevent Vulnerable Images From Running When you have active vulnerability scanners in your project, they will calculate a vulnerability score following the methodology created by the National Institute of Standards and Technology of the US Department of Commerce. Its common Common Vulnerability Scoring System Calculator (CVSS Version 3.1) and the list of the involved metrics can be accessed here. The specification document can be viewed here. Accordingly, your project scanner will mark certain images as having one of the vulnerability severity levels: None; Low; Medium; High; Critical. Both Trivy and Clair, default Container Registry scanners, use this scale. In the current setting, you can specify which of the levels is not acceptable. The images marked with this level and all severity levels that are higher, will be suppressed from deployment. Vulnerability Scanners Scanners can be added to the instance and its projects only by superadmins but project admins can specify if images should be automatically scanned on push. If this feature is not enabled but you have scanners in your project, you still can scan images manually after they have been pushed as described in detail here. CVE Allowlists This is another setting that is applied to vulnerability scanners. Common Vulnerabilities and Exposures List is a project by the US Department of Homeland Security and Cybersecurity and Infrastructure Security Agency. The aim of it is to \u0026ldquo;to identify, define, and catalog publicly disclosed cybersecurity vulnerabilities.\u0026rdquo; Each vulnerability is associated with a string type record in the CVE database. These records have IDs. With our CVE allowlist feature, you can use these CVE IDs to make the scanner ignore certain vulnerabilities. There are multiple ways to add CVE IDs to your project. System Allowlist When you select this option, all CVE IDs that were configured on the instance level by your superadmin (as described here) will be inherited by the project. Project Allowlist Alternatively, you can create your own lists manually or adjust the system-level allowlist. Use ADD to add the IDs manually using commas or putting each ID on a new line. You can search for CVE IDs in this database. Adding using commas: Adding using line breaks: Result for both: Use COPY FROM SYSTEM to copy the instance-level CVE IDs and then use X to delete any of them. You can also add new ones using ADD as in the previous case to expand the copied allowlist. System vs Project Allowlist: Which Overrides Which? When you never created any project-wide lists, then the system-wide (instance-wide) allowlist will be applied to all of your projects, as well as to all other projects in the instance. You do not need to select the System allowlist option pro-actively, it is set by default upon creation of the project. Once you create any project-wide allowlists, the project-wide lists will override the system-wide ones. It means that if you copy any allowlists from system but then modify them, the new custom allowlist will be applied to this specific project. Thus, be careful with deleting items from the system-wide allowlists when re-using them as project-wide allowlists to avoid any security issues in your images. Also note, that removing CVE IDs from the system won\u0026rsquo;t automatically remove them from the project if you re-used these IDs in a per-project allowlist. Set Expiration Date By default, no expiration date will be set for your CVE allowlist. They will remain active forever. To set a particular expiration date for either system-wide or","date":"2021-08-03T12:11:51+02:00","description":"","href":"https://container-registry.com/docs/user-manual/projects/configuration/","objectID":"e7f371c63d1f2e27600c8bd63f4c1c37_0","order":0,"tags":null,"title":"Project Configuration"},{"category":"User Manual","content":"project-wide lists, use the calendar to select a date. Once the date is set, the Never expires checkbox will be unticked automatically.","date":"2021-08-03T12:11:51+02:00","description":"","href":"https://container-registry.com/docs/user-manual/projects/configuration/","objectID":"e7f371c63d1f2e27600c8bd63f4c1c37_1","order":1,"tags":null,"title":"Project Configuration"},{"category":"Getting Started Guide","content":"Push and Pull Images Push Images: Steps Log In to Docker You need to log in to Docker to push and pull images to and from Container Registry. For this, you can use your Container Registry username but you need to generate your CLI login for Docker first. Go to your user profile in the upper right corner of the cockpit: Copy the CLI secret: In your command line tool, log in to Docker: docker login your-subdomain.container-registry.com -u USER_NAME -p CLI Default Project and Repository Upon your first registration, a sample public project called library will be generated in your Container Registry account. You can push your images into it. Alternatively, you can create your own public or private project following the instructions from this tutorial. You need the project name to push the images since you are going to use its URL for tagging images on the next step. You can push your images into an existing repository inside your project or create a new repository while tagging and pushing an image to Container Registry. Tag the Image Tag the image you want to push; use the URL of your repository as repository and some tag as tag: docker tag SOURCE_IMAGE[:TAG] your-subdomain.container-registry.com/library/repository[:TAG] Push the Image Push the image using its tag to Container Registry: docker push your-subdomain.container-registry.com/library/repository[:TAG] In case of success, you will see the Docker image\u0026rsquo;s ID in your command line tool and in your project repository in Container Registry, under the Artifacts section together with the push timestamp like this: NOTE To make pushing images easier for you, we prepared the sample tag and push commands that you can access through the GUI. You only need to change the source image tag and the final tag which you what to use in your Container Registry. Inside the project, click on the PUSH COMMAND as shown on the screenshot: Pull Images: Steps Log in to Docker as described above. Use the following sample command in your command line tool: docker pull your-subdomain.container-registry.com/library/repository:TAG If you do not know the exact tag, go to your Container Registry account, open the project and the repository, and look for the image you need. The tag is displayed next to it, as well as information about when it was pushed. Annotations and labels can also provide you with a hint. Click on the copy icon in the Pull command column to get a complete pull command for this image. The image tag will consist of the SHA256 hash instead of the image tag itself but it makes no difference. If you already have the same image on your PC, they will be matched and the Image is up to date status will be shown in your command line tool.","date":"2021-07-28T12:11:51+02:00","description":"","href":"https://container-registry.com/docs/getting-started-guide/push-and-pull-images/","objectID":"451a6c963048508fd4c3189d59bd605d_0","order":0,"tags":null,"title":"Push and Pull Images"},{"category":"User Manual","content":"Container Registry User Interface: A Short Overview When you log in to your Container Registry account as a user, you will see the following console. NOTE If you log in as an administrator, you will see an additional administration section. Refer to our Administration Guide for the GUI features overview. Main GUI Features The navigation pane provides you access to your projects and logs. Projects are folders for your images which can be assigned certain settings. Logs contain information about push and pull actions, created repositorues, and a few others. Inside each project, you can also access logs for only this particular project. More about it in the next section. Both logs and projects have a detailed view where you can search and filter your projects or logs (1) and set the page size to increase or limit the number of displyed items (2). Event Log stores information about local events that do not have directly to do with your registry. User profile and settings contain your user name (which can\u0026rsquo;t be changed after your initial registration), your email, your name, and some additional information. Besides, in your user profile, you can access and manage your CLI secret as explained in detail here. Additional GUI Features To search through all project names, repository names, and charts, use the search field on the top pane of the console. In the upper right corner, you can switch language and select from one of the following: English (default language) Chinese Japanese Spanish French Portugese Turkish German In the bottom left corner of the console, you can change the colour theme of the interface from light to dark. Next to it, you have a link that brings you to our Swagger-based API documentation.","date":"2021-03-27T12:11:51+02:00","description":"","href":"https://container-registry.com/docs/user-manual/container-registry-user-interface-a-short-overview/","objectID":"a8666d936bd011108595485e496b09ed_0","order":0,"tags":null,"title":"Container Registry User Interface: A Short Overview"},{"category":"Administration Manual","content":"User Management Add Another System Admin You can make another user a system admin: In the navigation pane, expand the Administration section; Select Users; Select a user name from the list; Click SET AS ADMIN. The new admin will have the same rights as the existing ones. Revoke System Admin Access To revoke admin access rights, repeat the steps from the previous section. Instead of Set as Admin, you will see REVOKE ADMIN after selecting user names. Click this button. User Management in the Database Mode Prerequisites User management is only possible in the GUI if you have set the authentication mode to database as explained here. Add New Users In the navigation pane, expand the Administration section and select Users; Then, click New User; Fill in the form; do not forget to note the password; Hit Save; Communicate the credentials to the new user; we recommend using OneTimeSecret. Validation Rules for User Names and Passwords Each user name must be unique within the instance. The minimal length for the password is 8 characters. It must include: 1 lowercase letter; 1 uppercase letter; 1 number. Changing and Resetting User Passwords As an admin, you can change the user password. In the Users tab, tick the checkbox next to the user; Click Actions and then Reset password; In the dialogue window, type in the new password and communicate it to the user. We recommend one-time notes from OneTimeSecret. Allow Users to Reset Their Passwords Instead of resetting user passwords manually, you can configure an email server to let users reset their passwords by themselves. They will use the Forgot password link below the sign-in form and receive a link to their email box. Steps to Configure Email Server Indeed, you need to set up such a server internally or using an external provider. In the navigation pane, expand the Administration section; Go to the Configuration section; Click on the Email tab; Fill in the following fileds : email server; email server port; email username; email password; email sender; can be configured as Container Registry Password Reset \u0026lt;hello@your-subdomain.container-registry.com\u0026gt; Select if you want to use an SSL and/or a trusted certificate. Test the server connection; Hit Save if everything works fine. Delete Users In the navigation pane, expand the Administration section; Select the Users tab; Select the users you want to delete; Click Actions; Select Delete.","date":"2021-08-19T00:00:00Z","description":"","href":"https://container-registry.com/docs/administration-manual/user-management/","objectID":"2696d8f6e8e87ed7a390fd2ee39bcf4e_0","order":0,"tags":null,"title":"User Management"},{"category":"User Manual","content":"Tag Policies Managing Tag Policies Prerequisites These rules require a project administrator permission level and are applied on the repository level. Another way to manage tags in bulks is to define specific rules. Two types of such rules are possible: tag retention rules; tag immutability rules. For both retention and immutability, you can create up to 15 rules that will be applied using an OR algorithm. It means that the rules are calculated independently from each other.","date":"2021-08-13T00:00:00Z","description":"","href":"https://container-registry.com/docs/user-manual/images/tags/","objectID":"b89f3577edd8c943787ee84d0869b2b7_0","order":0,"tags":null,"title":"Tag Policies"},{"category":"User Manual","content":"Webhooks Webhooks are API push notifications sent in the form of HTTP or HHTPS POST requests. They pro-actively deliver messages to other applications when some event occurs inside their own application. They can inform or trigger further events in the destination application. For instance, you can directly deploy an application upon the image push. This allows you to automate your deployments. In Container Registry, you can add either an HTTP or Slack-based HTTPS URL that will be used for receiving the messages by the target application. You have a choice between the following events that can initiate a push message: Artifact deleted Artifact pulled Artifact pushed Chart deleted Chart downloaded Chart uploaded Quota exceed Quota near threshold Replication finished Scanning failed All incoming messages (payloads) will be in JSON format. Below is an example from the push artifact event message: { \u0026#34;type\u0026#34;: \u0026#34;PUSH_ARTIFACT\u0026#34;, \u0026#34;occur_at\u0026#34;: 1586922308, \u0026#34;operator\u0026#34;: \u0026#34;username\u0026#34;, \u0026#34;event_data\u0026#34;:{ \u0026#34;resources\u0026#34;: [ { \u0026#34;digest\u0026#34;: \u0026#34;sha256:1b26826f602946860c279fce658f31050cff2c596583af237d971f4629b57792\u0026#34;, \u0026#34;tag\u0026#34;: \u0026#34;5.0\u0026#34;, \u0026#34;resource_url\u0026#34;: \u0026#34;epic-exoscale.container-registry.com/documentation/test_slack:5.0\u0026#34; } ], \u0026#34;repository\u0026#34;: { \u0026#34;date_created\u0026#34;: 1628167510, \u0026#34;name\u0026#34;: \u0026#34;test_slack\u0026#34;, \u0026#34;namespace\u0026#34;: \u0026#34;documentation\u0026#34;, \u0026#34;repo_full_name\u0026#34;: \u0026#34;documentation/test_slack\u0026#34;, \u0026#34;repo_type\u0026#34;: \u0026#34;private\u0026#34; } } } Prerequisites Webhooks must be enabled on the instance level by your system administrator (super admin). The instructions are available here. You must be a project administrator to add webhooks to the project. Get Your Webhook URL You need an endpoint URL that is able to receive HTTP/HTTPS POST requests. HTTP or HTTPS Configure a webhook listener on a server that will receive messages and perform further actions if their content requires so. Slack You can configure Slack, a popular team messenger, to receive notifications from your project. For this, you need: a Slack account; a Slack workspace; a target channel inside this workspace; an app with enabled incoming webhooks. For the last step, there are two methods to implement it: Add the existing legacy Incoming Webhooks app from the Slack marketplace: Go to https://slack.com/apps/A0F7XDUAZ-incoming-webhooks?tab=more_info; Click Install; On the following page, select your channel and click Add Incoming WebHooks Integration. Alternatively, create a new Slack channel: You\u0026rsquo;ll be redirected to the Setup Instructions page where you can copy your webhook URL: After you add your webhook in the Container Registry GUI, you will start receiving Slack notifications that look like this: Create your own Slack app and enable webhooks for it. Go to https://api.slack.com and click Create an app or Go directly to https://api.slack.com/apps?new_app=1; Select From an app manifest if you only need it for the webhooks; Select your workspace; Inside the YAML or JSON file, change the name of your app; Hit Next and then Create; You\u0026rsquo;ll land in the basic information view of your new Slack app; Click Incoming Webhooks; Activate incoming webhooks for this app with the slider and then click Add New WebHook to Workspace; Select the target channel to post notifications and click Allow; Your Slack webhook URL was now generated and can be copied: Your new app will be visible among your Slack apps: After you add your webhook in the Container Registry GUI, you will start receiving Slack notifications that look like this: Webhook Triggers The table contains the details about available webhook triggers and what they do. Event Webhook Event Type Contents of Notification Push artifact to registry PUSH_ARTIFACT Repository namespace name, repository name, resource URL, tags, manifest digest, artifact name, push time timestamp, username of user who pushed artifact Pull artifact from registry PULL_ARTIFACT Repository namespace name, repository name, manifest digest, artifact name, pull time timestamp, username of user who pulled artifact Delete artifact from registry DELETE_ARTIFACT Repository namespace name, repository name, manifest digest, artifact name, artifact size, delete time timestamp, username of user who deleted image Upload Helm chart to chartMuseum UPLOAD_CHART Repository name, chart name, chart type, chart version, chart size, tag, timestamp of push, username of user who uploaded chart Download Helm chart from chartMuseum DOWNLOAD_CHART Repository name, chart name, chart type, chart version, chart size, tag, timestamp of push, username of user who pulled chart Delete Helm chart from chartMuseum DELETE_CHART Repository name, chart name, chart type, chart version, chart size, tag, timestamp of delete, username of user who deleted chart Image scan completed SCANNING_COMPLETED Repository namespace name, repository name, tag scanned, image name, number of critical issues, number of major issues, number of minor issues, last scan status, scan completion time timestamp, vulnerability information (CVE ID, description, link to CVE, criticality, URL for any fix), username of user who performed scan Image scan failed SCANNING_FAILED Repository namespace name, repository name, tag scanned, image name, error that occurred, username of user who performed scan Project quota exceeded QUOTA_EXCEED Repository namespace name, repository name, tags, manifest digest, artifact name, push time timestamp, username of user who pushed artifact Project quota near threshold QUOTA_WARNING Repository namespace name, repository name, tags, manifest digest, artifact name, push time timestamp, username of user who pushed artifact Artifact replication finished REPLICATION Repository namespace name, repository name, tags, manifest digest, artifact name, push time timestamp, username of user who triggered the replication You can use any combination of them or all triggers. Creating a New Webhook in the Container Registry GUI Go to the Webhooks tab in your project; Click + NEW WEBHOOK: Select slack if you copied your endpoint/webhook URL from a Slack application, or select http if you use another application to receive push notifications; Paste the endpoint URL; For HTTP endpoint URLs, you can provide the Authorization Header that specifies your authorization type and contains your credentials, if required, for instance: Authorization: Bearer {{token}} Select an option to verify remote certificates; For HTTP endpoint, disable the feature; For HTTPS, enable it. Webhooks Overview and Details If you click on the arrow next to a webhook, you can open a detailed overview of the triggers and when they ran for the last time. You may need to flick through the triggers using the arrows in the bottom right corner. Enabling/Disabling, Editing, and Deleting Webhooks You can delete webhooks manually or in bulks if you tick the checkboxes and click Delete under the Action menu. You can disable/re-enable and edit","date":"2021-08-05T12:11:51+02:00","description":"","href":"https://container-registry.com/docs/user-manual/projects/configuration/webhooks/","objectID":"b135e4c7439b19538cce7a471fc23d4f_0","order":0,"tags":null,"title":"Webhooks"},{"category":"User Manual","content":"webhooks one by one if you tick the checkboxes and click Disable/Enable or Edit under the Action menu.","date":"2021-08-05T12:11:51+02:00","description":"","href":"https://container-registry.com/docs/user-manual/projects/configuration/webhooks/","objectID":"b135e4c7439b19538cce7a471fc23d4f_1","order":1,"tags":null,"title":"Webhooks"},{"category":"User Manual","content":"Working With Projects This article contains basic information about projects in Container Registry. What Projects Are For When you log in to your Container Registry account, you will land in the Projects section. Projects play a central role in Container Registry for two reasons. Projects host all repositories of the application that you need images for. Basically, a simple rule will be one project = one application. Inside a project, you can have multiple repositories. Consequently, you can only start working with images, if you have at least one project. By default, upon your initial registration, a sample project will be created for you automatically. The repositories can be created with the push or from the console UI. Permissions are set on the project level in the form of Role-Based Access Control (RBAC). Look here to learn about certain actions that users with different roles can perform. Types of Projects Harbor allows two types of projects: public and private. Public projects do not require project membership to pull images from this kind of project. The users do not even need login credentials for their Docker clients. On the contrary, to access private projects, you have to be added to it by the project administrator. The project administrator is another user and not necessarily the system administrator / superadmin of your instance. Read more about assigning users to projects in this article. Create New Project Navigate to the Projects section; Use the + NEW PROJECT button; Give your project a name; Set the access level to public or private. Set Project Quotas Project quotas are storage quotas for your images. If you create a project as a user, ask your superadmin to adjust the storage quotas (refer to the administration manual). If you create a project as a superadmin, you will be able to set the quotas directly in the dialogue window: Set a number and select the scale; Type in -1 to set an unlimited storage quota. Filter/Search Projects In the Project section, you can filter your projects by: their type: public or private; their name. To filter by project type, use the following dropdown: To filter by project name, use the search field: You can also search for projects using the seach icon in the Project Name column header: To display all projects again, delete your search string and click X. Refresh Existing Projects Since more than one project admin is possible per project, more than one collaborator can create and delete projects in the same instance. If you notice that some repositories or certain images are missing, try to refresh the list of existing projects to make sure that you are looking at the actual view: Delete Projects If you have a project admin role in the project, you can delete your projects. Inside the Projects section, select the projects you want to delete and click Delete: Project Summary Summary of All Projects When you are on the highest level of the project section, you can see the following summary of your projects and repositories: Project List Inside the project section, you can see the list of all projects you are the member of, as well as some basic information about them: Project names; Their type (shown as Acess Level column); Your role in each project; The type of the entry; Number of the repositories Number of charts; Creation time. Summary of Each Project Inside every project, you can get a similar summary that includes: number of repositories in the project (1); project quotas: storage consumption (2); number of helm charts (3); number of project members per project role (4).","date":"2021-03-30T12:11:51+02:00","description":"","href":"https://container-registry.com/docs/user-manual/projects/","objectID":"6c5ad82046c6871478f1acb26afac188_0","order":0,"tags":null,"title":"Working With Projects"},{"category":"Getting Started Guide","content":"Other Useful Features Our Harbor-based cloud service allows you to manage your images easier. Apart from pulling and pushing images to and from your container registry, you can: Facilitate your Kubernetes deployments by seamless integration between your Kubernetes clusters and Harbor-based container registries; using Kubernetes YAML manifests: Helm Charts; access your Chart Museum directly from the GUI Bypass connectivity issues by using a proxy cache: a pull-through cache for another target registry; a cached copy is checked against the target and is always up-to-date. Better manage your images by organizing them into projects; creating repositories inside projects; tagging images; creating labels and annotations for images; Improve your security by running vulnerability checks on images; using identity providers, such as Google and Azure; setting up a private registry; distributing commercial images safely; applying role-based access control to all artifacts; Automate your workflow by creating robot accounts; creating, refreshing, and synchronizing their secrets programmatically with Harbor Sync; creating webhooks; specifying a P2P preheat policy for commercial distribution of the images; Have a better overview of your costs by monitoring project quotas.","date":"2021-03-29T12:11:51+02:00","description":"A brief overview of the available features","href":"https://container-registry.com/docs/getting-started-guide/other-useful-features/","objectID":"5580fb613387ff9877f009f1f3f0f259_0","order":0,"tags":null,"title":"Other Useful Features"},{"category":"User Guides","content":"Table of Contents User Guides 4.1 How to push helm charts 4.2 OIDC configuration for Google Workspaces 4.3 Using container registry with Kubernetes cluster 4.4 Deploying with High Availability via Helm","date":"2021-03-27T12:11:51+02:00","description":"","href":"https://container-registry.com/docs/user-guide/","objectID":"ecf7e357d2a131135219db95eddda49c_0","order":0,"tags":null,"title":"User Guides"},{"category":"Administration Manual","content":"System Robot Accounts The procedure is similar to creating robot accounts on the project level as described here with the difference that, as a system admin, you can create robots that have access to multiple projects. To create a system robot account: Go to the Administration tab; Select Robot Accounts; Click Create New Robot Account; Fill in the form: Give your robot a catchy name; Select if it should expire and how soon from the dropdown; Optionally, add a description; Set which projects it should have access to: Select Cover all projects and set permissions that apply to all projects. Select or de-select them from the dropdown. Or","date":"2021-08-19T00:00:00Z","description":"","href":"https://container-registry.com/docs/administration-manual/system-robot-accounts/","objectID":"07692a3e1de0c414bbc9f9d6bbc7c326_0","order":0,"tags":null,"title":"System Robot Accounts"},{"category":"User Manual","content":"Working With Images, OCI Indexes, Tags, and Helm Charts Needless to say, Docker images are the reason why you actually want to work with Container Registry. This section will describe general features available for managing images and helm charts. To learn about working with tags, refer to this section. To learn how to push and pull images, refer to this tutorial. Types of Artifacts When you open a repository in a project, you will see a list of the available artifacts: items stored in the same repository. The following types of artifacts are possible: Images: items with the Docker whaleship icons; Helm charts: items with the \u0026ldquo;Helm\u0026rdquo; icon; OCI indexes: items with the three-bubbled icon on the left and a folder icon on the right. What are OCI indexes and why do you need them? Some images may be gathered in lists using the OCI index. In general, every Docker image has a manifest: information about its layers, size, digest, as well as for which operating system and type of CPU architecture it was built, etc. Images are only templates that do not change. The changes are stored in the image layers. In Harbor, you can create manifest lists that are basically lists of the layers of the same image. Manifest lists appear in Container Registry as artifacts with a folder icon. When you click on the icon, the entire list of the image manifests will be displayed: Refer to the official Docker documentation to create a manifest list using your command line tool. SHA256 Hash The artifacts are named using a SHA256 hash. A hash can be described as a key or a representation of a text message. It is similar to encryption but it can be decrypted into the original message easily. SHA256 hashes refer to the JSON file that keeps the image manifest and are generated when the image is compressed for being pushed. Since such compression is also a kind of change, a new image layer is created during this preparation for a push. Consequently, this layer needs a new manifest that is pushed to a repository. Further, the manifest is written in a new JSON file. Eventually, this file becomes its own new unique hash. NOTE To display the type of the artifact as well as its complete hash, hover over one of them respectively: Displaying artifact type: Displaying artifact hash: You do not need to memorize the hash, though. It can be copied into clipboard. Overview of the Stored Images/Artifacts The overview table has the following columns: Artifacts. Pull Command: when you click on the copy icon next to an artifact, the pull command for this artifact will be copied to clipboard and can be used in your command line tool to pull the artifact. Example of the copied command: docker pull your-subdomain.container-registry.com/library/test@sha256:1b26826f602946860c279fce658f31050cff2c596583af237d971f4629b57792 Since there are different types of artifacts stored in repositories, they are all referred to using their SHA256 hashes. Tags. Read more about Docker image tags here. Some artifacts can have multiple tags. Hover over the entry to display an overview of all tags or check them in the artifact view. Size. This column shows the size of the compressed artifact. When you pull it to your local machine, it will be decompressed to its original size again. Vulnerabilities. This column shows the results of the image scan if any scan has been run upon it. Hover over the entry to display all vulnerabilities or check them in the artifact view. Annotation. This column displays additional information that was added to the image manifest. It can include: type of CPU architecture; architecture variant; operating system and, optionally, its versions and features. Read more about setting images annotations here. Labels shows labels that you or your project collaborators assigned to the artifact. Push Time shows when the artifact was pushed for the last time. Pull Time shows when the artifact was pulled for the last time. Filtering Artifacts You can filter artifacts in the repository using the magnifier in the top right corner of the table. Click on it to access different filtering options. Filter Artifacts by Type You can restrict the artifacts overview to a specific type by selecting one of the types in the dropdown: Filter Artifacts by Tags You can display only tagged or untagged images. Filter Artifacts by Label You can display only artifacts that have the same label. You can select more than one label in this operation. Managing Artifacts In the artifacts overview, a few basic operations with artifacts are available. Every time you need to perform one of them: Tick the checkbox next to the artifact; Click Actions: Per-Item Actions These kinds of actions can only be applied to one artifact at a time. Copy Digest This button will open another dialogue window where you can copy the digest to clipboard. Add Labels Labels are another way to add some short information to your artifacts to sort them later or to make them more eye-catching in the overview. Labels must be added to the project by the project administrator as described here. Bulk Actions: Delete or Scan Artifacts These actions can be applied to more than one artifact at a time. NOTE To scan images, you need at least the project administrator privileges.","date":"2021-08-11T00:00:00Z","description":"","href":"https://container-registry.com/docs/user-manual/images/","objectID":"867296aa8812795d3fcf8878e82a9ea6_0","order":0,"tags":null,"title":"Working With Artifacts"},{"category":"User Manual","content":"Working With Logs Logs track everything that happens in your system. You can access logs from different places in the GUI. Event Logs You will see this side bar on the right from everywhere in Container Registry. Hover over the EVENT LOG tab to exapnd it. Event log includes high-level events, for instance, adding or deleting a new user to the system: In some cases, project-related events will be also displayed in this section. Local events are shown in groups: All; Running; Failed. All Projects Logs Events that happen within certain projects can be found in the Logs section of the Navigation pane on the left. Each log entry includes the following information: username; resource; resource type: tag; artifact; project; operation; timestamp. You can type your search string and use a dropdown filter to narrow the search down to: username; resource; resource type: operation. Project Logs In addition to the Logs section and Event Log, you can dig into log data generated for particular projects. For this, go to the Logs tab inside the project. Each project log entry includes the following information: Username of the project memeber who initialized the operation; Resource: an image or project name depending on the level the operation happened on; Resource type: artifact/image; project; Operation: create; delete; push; pull; Timestamp. Here, you can filter your logs by: user name: date of the operations; type of the operation. For the last two filters to appear, use Advanced filer mode.","date":"2021-08-17T00:00:00Z","description":"","href":"https://container-registry.com/docs/user-manual/working-with-logs/","objectID":"e148e2ad617e81f30991a395ad4e97a2_0","order":0,"tags":null,"title":"Working With Logs"},{"category":"User Manual","content":"Dedicated vs Individual Account Container Registry offers three types of accounts: individual; dedicated; custom/enterprise. The present documentation is mostly written with dedicated accounts in mind. We would like to explain the differences between the three. The table below summarizes critical distinctions. You can also refer to our pricing page. Position Individual Dedicated Custom Tenants 1 tenant Multitenancy Multitenancy Repositores Only private Private and public Private and public Domain c8n.io Subdomain on container-registry.com or custom domain Any Users 1 user Multiple users Mutliple users Storage 1 GB 100 GB Custom Multiregional High Availability Rollouts - - Yes Users, Teams, and RBAC Dedicated and custom enterprise accounts allow you to create user groups that enable fast collaboration on projects. These accounts also fully implement role-based access control allowing you to specify which user can do what. Storage Starting from a dedicated pricing plan, you have more control over the size of your registry storage. Dedicated accounts can obtain additional storage for a monthly fee. Custom enterprise accounts may be provisioned and operated by a selected cloud provider, thus giving their owners full control over their storage sizes. Customization With a dedicated account, you can use your company\u0026rsquo;s subdomain as your instance at Container Registry. For enterprise accounts, we offer a completely customized setup and configuration of the container registry making it a white label product. Additional Enterprise-Only Features With an enterprise account, you can minimize or eliminate any rollout-related downtimes with multi-regional HA rollouts. You also receive enterprise-level customer support. Pricing Individual accounts are completely free of charge. Dedicated accounts provide a free 14-day trial. Prices for custom solutions are calculated individually by our sales team.","date":"2021-08-13T00:00:00Z","description":"description_test","href":"https://container-registry.com/docs/user-manual/dedicated-vs-individual-account/","objectID":"80722198c7394618ee3300790e358830_0","order":0,"tags":null,"title":"Dedicated vs Individual Account"},{"category":"User Manual","content":"Double-Starred Patterns Some of the Container Registry GUI features allow you to use string matching instead of entering complete names of repositories or tags. That comes in handy if you create separate repositories or tags for every stage in the software development lifecycle and follow a naming convention. In this case, you can select more than one repository or tag by typing in only the pattern once instead of listing all their names. The star or asterisk symbol helps you to compile such patterns. Double Star In Harbor, and, consequently, Container Registry, you can use a double star/asterisk to do the following: specify that you want to select all names by using the ** without any other characters; for instance, to select all repositories in the tag retention rule dialogue window: specify a part of the name that is the same for all items; for instance, to select all repositories that have \u0026ldquo;release\u0026rdquo; in the middle of the name, use: *release* Single Star You can also use only one star/asterisk to specify a string that is either the beginning or the end of a name. Pattern Stands at the Beginning For instance, to select all repositories that start with \u0026ldquo;release\u0026rdquo;, use: release* The star at the end will identify that something is going to come after the pattern. Pattern Stands at the End On the contrary, to select all repositories that end with \u0026ldquo;release\u0026rdquo;, use: *release with the matching pattern at the end and the star/asterisk at the beginning showing that something comes before the pattern.","date":"2021-08-13T00:00:00Z","description":"","href":"https://container-registry.com/docs/user-manual/double-starred-patterns/","objectID":"28de6696e91de29259a1e6822829f9d0_0","order":0,"tags":null,"title":"Double-Starred Patterns"},{"category":"","content":"","date":"2021-03-27T12:11:51+02:00","description":"","href":"https://container-registry.com/docs/","objectID":"4cdd37113783e47641dd300543c94e1b_0","order":0,"tags":null,"title":"Container Registry Knowledge Base"}]