<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Blog on Container Registry</title><link>https://container-registry.com/posts/</link><description>Recent content in Blog on Container Registry</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 01 Nov 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://container-registry.com/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Container Image Versioning</title><link>https://container-registry.com/posts/container-image-versioning/</link><pubDate>Thu, 09 Sep 2021 00:00:00 +0000</pubDate><guid>https://container-registry.com/posts/container-image-versioning/</guid><description>Containers are fundamental to Enterprise digital transformation using cloud-native technologies. Organizations need to build container release management, governance, and monitoring practices to effectively utilize their cloud-native infrastructure. These practices are based on the principle of identifying a changeset(s). Traditionally this has been done with application release versions. Versions yield the following benefits :
Track upcoming changes with a new version. Build governance with changelogs of the new versions Monitor the released version Rollback to the older version in case of issues.</description></item><item><title>Getting Started with Container Registry</title><link>https://container-registry.com/posts/getting-started-with-harbor-container-registry/</link><pubDate>Fri, 09 Apr 2021 00:00:00 +0000</pubDate><guid>https://container-registry.com/posts/getting-started-with-harbor-container-registry/</guid><description>&lt;p>Ready to push the image to a registry? In this post, we will discuss how to get started with Container Registry.&lt;/p></description></item><item><title>Harbor Release 2.2.0</title><link>https://container-registry.com/posts/harbor-2.2.0-new-features-explained/</link><pubDate>Tue, 09 Mar 2021 00:00:00 +0000</pubDate><guid>https://container-registry.com/posts/harbor-2.2.0-new-features-explained/</guid><description>&lt;p>Harbor 2.2.0 was just released and comes with some very interesting features.
This post walks you through the newly added features and changes explaining the capabilities. Since the last release of v2.1.0 in September 2020, eleven contributors made 41 changes and resolved 189 issues.&lt;/p></description></item><item><title>Distributing Commercial Software Through Container Images</title><link>https://container-registry.com/posts/distributing-commercial-software-through-container-images/</link><pubDate>Sun, 07 Feb 2021 00:00:00 +0000</pubDate><guid>https://container-registry.com/posts/distributing-commercial-software-through-container-images/</guid><description>&lt;p>When delivering software to clients, many independent software vendors (ISVs) still rely on methods involving traditional software packaging methods such as downloadable binaries, ZIPs, or other type of compressed delivery. These distribution approaches are often OS specific. As a result, developers are forced to spend precious time on tailoring software delivery rather than innovation. Containerization is already simplifying software delivery for many of today&amp;rsquo;s mainstream products. Choosing the right &lt;a href="https://container-registry.com">container registry that meets ISVs requirements&lt;/a> is crucial to satisfy vendors and meet client expectations.&lt;/p></description></item><item><title>Lifting Developersâ€™ Productivity with BuildKit CLI for kubectl</title><link>https://container-registry.com/posts/productivity-lift-buildkit-cli-for-kubectl/</link><pubDate>Thu, 07 Jan 2021 00:00:00 +0000</pubDate><guid>https://container-registry.com/posts/productivity-lift-buildkit-cli-for-kubectl/</guid><description>&lt;p>Developing and testing software on Kubernetes usually means building and moving container images from the developer workstation to a container registry, and ultimately, Kubernetes. When considering all the moving parts, the complexity and context switches break the development flow. Gone are the days where developers just hit a command and a few seconds later the newly built software is ready for testing.&lt;/p>
&lt;p>What if there was some magical tool that you could simply feed instructions like: &amp;ldquo;Build this Dockerfile &lt;em>here&lt;/em> and replace any existing image on &lt;em>that&lt;/em> Kubernetes cluster with the results!&amp;rdquo; ASAP. Spoiler Alert! That is exactly what BuildKit CLI for kubectl is there to do.&lt;/p></description></item><item><title>3 Ways to overcome the Docker Hub pull rate limit</title><link>https://container-registry.com/posts/overcome-docker-hub-rate-limit/</link><pubDate>Mon, 02 Nov 2020 00:00:00 +0000</pubDate><guid>https://container-registry.com/posts/overcome-docker-hub-rate-limit/</guid><description>&lt;p>As someone who is working with Docker Container images, you came across the new Docker Hub pull rate limit or perhaps you are already here because you encountered the error message &lt;code>You have reached your pull rate limit&lt;/code> and are now looking for a solution on how to resolve it.&lt;/p></description></item></channel></rss>