<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Blog on Container Registry</title><link>https://container-registry.com/posts/</link><description>Recent content in Blog on Container Registry</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 01 Nov 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://container-registry.com/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>How to automate Flask development workflow with Container Registry and GitHub Actions</title><link>https://container-registry.com/posts/how-to-automate-flask-development-workflow-with-container-registry-and-github-actions/</link><pubDate>Sun, 10 Dec 2023 00:00:00 +0000</pubDate><guid>https://container-registry.com/posts/how-to-automate-flask-development-workflow-with-container-registry-and-github-actions/</guid><description>In this tutorial, we will develop an automated workflow to build a containerized Flask application.
This workflow will build a new container image every time a new commit is pushed to our GitHub repository. We will be using a simple Flask application for this tutorial. But you can use this workflow to build a Flask application of any complexity.
We will run the workflow with GitHub Actions and use 8gears Container Registry as our image repository.</description></item><item><title>KubeCon North America 2023 – The Takeaways</title><link>https://container-registry.com/posts/2023-kubecon-chicago-takeaways/</link><pubDate>Tue, 28 Nov 2023 00:00:00 +0000</pubDate><guid>https://container-registry.com/posts/2023-kubecon-chicago-takeaways/</guid><description>&lt;p>This year&amp;rsquo;s North America edition of the KubeCon took place in Chicago. What a
beautiful city. As someone who only experienced the United States through
movies, it felt a bit surreal at first, because around each corner or location I
felt like I had seen this exact scene in a movie.&lt;/p></description></item><item><title>How Does Dockers Decision of Sunsetting Free Team Organizations Impacts You</title><link>https://container-registry.com/posts/how-does-dockers-decision-of-sunsetting-free-team-organizations-impacts-you/</link><pubDate>Fri, 17 Mar 2023 00:00:00 +0000</pubDate><guid>https://container-registry.com/posts/how-does-dockers-decision-of-sunsetting-free-team-organizations-impacts-you/</guid><description>&lt;p>Docker Inc. continues on its course of eliminating free offerings: Now the &amp;ldquo;Docker Free Team&amp;rdquo; model
has to take its turn. With the «Free Team Organizations» offering, it was possible to publish public
container images for free in Docker Hub. Many open-source projects have taken advantage of the offer;
however, the impact is affecting everyone.&lt;/p></description></item><item><title>What's new in Harbor 2.6</title><link>https://container-registry.com/posts/whats-new-in-harbor-version-2.6.0/</link><pubDate>Fri, 19 Aug 2022 00:00:00 +0000</pubDate><guid>https://container-registry.com/posts/whats-new-in-harbor-version-2.6.0/</guid><description>&lt;p>Harbor 2.6 is about to land in the next days containing some long-awaited functionalities and two important deprecations.
With over 150 enhancements and bug fixes, this release further improves stability and reliability.
The deprecation hits Notary and ChartMuseum, which was used in Harbor to store Helm Chart Repositories.&lt;/p></description></item><item><title>Container Image Versioning</title><link>https://container-registry.com/posts/container-image-versioning/</link><pubDate>Thu, 09 Sep 2021 00:00:00 +0000</pubDate><guid>https://container-registry.com/posts/container-image-versioning/</guid><description>&lt;p>Containers have simplified how we develop and deploy software. The way in which container images are managed is a critical component of a smooth CI/CD process. Container Registries act as trusted intermediaries between development and runtime environments for containerized applications.&lt;/p></description></item><item><title>Getting Started with Container Registry</title><link>https://container-registry.com/posts/getting-started-with-harbor-container-registry/</link><pubDate>Fri, 09 Apr 2021 00:00:00 +0000</pubDate><guid>https://container-registry.com/posts/getting-started-with-harbor-container-registry/</guid><description>&lt;p>Ready to push the image to a registry? In this post, we will discuss how to get started with Container Registry.&lt;/p></description></item><item><title>Harbor Release 2.2.0</title><link>https://container-registry.com/posts/harbor-2.2.0-new-features-explained/</link><pubDate>Tue, 09 Mar 2021 00:00:00 +0000</pubDate><guid>https://container-registry.com/posts/harbor-2.2.0-new-features-explained/</guid><description>&lt;p>Harbor 2.2.0 was just released and comes with some very interesting features.
This post walks you through the newly added features and changes explaining the capabilities. Since the last release of v2.1.0 in September 2020, eleven contributors made 41 changes and resolved 189 issues.&lt;/p></description></item><item><title>Distributing Commercial Software Through Container Images</title><link>https://container-registry.com/posts/distributing-commercial-software-through-container-images/</link><pubDate>Sun, 07 Feb 2021 00:00:00 +0000</pubDate><guid>https://container-registry.com/posts/distributing-commercial-software-through-container-images/</guid><description>&lt;p>When delivering software to clients, many independent software vendors (ISVs) still rely on methods involving traditional software packaging methods such as downloadable binaries, ZIPs, or other type of compressed delivery. These distribution approaches are often OS specific. As a result, developers are forced to spend precious time on tailoring software delivery rather than innovation. Containerization is already simplifying software delivery for many of today&amp;rsquo;s mainstream products. Choosing the right &lt;a href="https://container-registry.com">container registry that meets ISVs requirements&lt;/a> is crucial to satisfy vendors and meet client expectations.&lt;/p></description></item><item><title>Lifting Developers’ Productivity with BuildKit CLI for kubectl</title><link>https://container-registry.com/posts/productivity-lift-buildkit-cli-for-kubectl/</link><pubDate>Thu, 07 Jan 2021 00:00:00 +0000</pubDate><guid>https://container-registry.com/posts/productivity-lift-buildkit-cli-for-kubectl/</guid><description>&lt;p>Developing and testing software on Kubernetes usually means building and moving container images from the developer workstation to a container registry, and ultimately, Kubernetes. When considering all the moving parts, the complexity and context switches break the development flow. Gone are the days where developers just hit a command and a few seconds later the newly built software is ready for testing.&lt;/p>
&lt;p>What if there was some magical tool that you could simply feed instructions like: &amp;ldquo;Build this Dockerfile &lt;em>here&lt;/em> and replace any existing image on &lt;em>that&lt;/em> Kubernetes cluster with the results!&amp;rdquo; ASAP. Spoiler Alert! That is exactly what BuildKit CLI for kubectl is there to do.&lt;/p></description></item><item><title>3 Ways to overcome the Docker Hub pull rate limit</title><link>https://container-registry.com/posts/overcome-docker-hub-rate-limit/</link><pubDate>Mon, 02 Nov 2020 00:00:00 +0000</pubDate><guid>https://container-registry.com/posts/overcome-docker-hub-rate-limit/</guid><description>&lt;p>As someone who is working with Docker Container images, you are here for one of the following reasons:&lt;/p>
&lt;ul>
&lt;li>You came across the new Docker Hub pull rate limit;&lt;/li>
&lt;li>You encountered the error message &lt;code>You have reached your pull rate limit&lt;/code>
Anyway, you are now desperate to find a solution.&lt;/li>
&lt;/ul></description></item></channel></rss>